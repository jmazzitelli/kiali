{
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "schemes": [
    "http",
    "https"
  ],
  "swagger": "2.0",
  "info": {
    "description": "Kiali project, observability for the Istio service mesh",
    "title": "Kiali",
    "version": "_"
  },
  "basePath": "/api",
  "paths": {
    "/": {
      "get": {
        "description": "Endpoint to get the status of Kiali",
        "produces": [
          "application/json"
        ],
        "schemes": [
          "http",
          "https"
        ],
        "tags": [
          "kiali"
        ],
        "operationId": "root",
        "responses": {
          "200": {
            "$ref": "#/responses/statusInfo"
          },
          "500": {
            "$ref": "#/responses/internalError"
          }
        }
      }
    },
    "/auth/info": {
      "get": {
        "description": "Endpoint to get login info, such as strategy, authorization endpoints\nfor OAuth providers and so on.",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "schemes": [
          "http",
          "https"
        ],
        "tags": [
          "auth"
        ],
        "operationId": "authenticationInfo",
        "responses": {
          "200": {
            "$ref": "#/responses/authenticationInfo"
          },
          "500": {
            "$ref": "#/responses/internalError"
          }
        }
      }
    },
    "/auth/openid_redirect": {
      "get": {
        "description": "Endpoint to redirect the browser of the user to the authentication\nendpoint of the configured OpenId provider.",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/html"
        ],
        "schemes": [
          "http",
          "https"
        ],
        "tags": [
          "auth"
        ],
        "operationId": "openidRedirect",
        "responses": {
          "200": {
            "$ref": "#/responses/noContent"
          },
          "500": {
            "$ref": "#/responses/internalError"
          }
        }
      }
    },
    "/authenticate": {
      "get": {
        "security": [
          {
            "authorization": [
              "user",
              "password"
            ]
          }
        ],
        "description": "Endpoint to authenticate the user",
        "produces": [
          "application/json"
        ],
        "schemes": [
          "http",
          "https"
        ],
        "tags": [
          "auth"
        ],
        "operationId": "authenticate",
        "responses": {
          "200": {
            "$ref": "#/responses/tokenResponse"
          },
          "500": {
            "$ref": "#/responses/internalError"
          }
        }
      },
      "post": {
        "description": "Endpoint to check if a token from Openshift is working correctly",
        "produces": [
          "application/json"
        ],
        "schemes": [
          "http",
          "https"
        ],
        "tags": [
          "auth"
        ],
        "operationId": "openshiftCheckToken",
        "responses": {
          "200": {
            "$ref": "#/responses/tokenResponse"
          },
          "500": {
            "$ref": "#/responses/internalError"
          }
        }
      }
    },
    "/config": {
      "get": {
        "description": "Endpoint to get the config of Kiali",
        "produces": [
          "application/json"
        ],
        "schemes": [
          "http",
          "https"
        ],
        "tags": [
          "kiali"
        ],
        "operationId": "getConfig",
        "responses": {
          "200": {
            "$ref": "#/responses/statusInfo"
          },
          "500": {
            "$ref": "#/responses/internalError"
          }
        }
      }
    },
    "/grafana": {
      "get": {
        "description": "Get the grafana URL and other descriptors",
        "produces": [
          "application/json"
        ],
        "schemes": [
          "http",
          "https"
        ],
        "tags": [
          "integrations"
        ],
        "operationId": "grafanaInfo",
        "responses": {
          "200": {
            "$ref": "#/responses/grafanaInfoResponse"
          },
          "204": {
            "$ref": "#/responses/noContent"
          },
          "500": {
            "$ref": "#/responses/internalError"
          },
          "503": {
            "$ref": "#/responses/serviceUnavailableError"
          }
        }
      }
    },
    "/healthz": {
      "get": {
        "description": "Endpoint to get the health of Kiali",
        "produces": [
          "application/json"
        ],
        "schemes": [
          "http",
          "https"
        ],
        "tags": [
          "kiali"
        ],
        "operationId": "healthz",
        "responses": {
          "500": {
            "$ref": "#/responses/internalError"
          }
        }
      }
    },
    "/istio/certs": {
      "get": {
        "description": "Get certificates (internal) information used by Istio",
        "produces": [
          "application/json"
        ],
        "schemes": [
          "http",
          "https"
        ],
        "tags": [
          "certs"
        ],
        "operationId": "istioCerts",
        "responses": {
          "200": {
            "$ref": "#/responses/certsInfoResponse"
          },
          "500": {
            "$ref": "#/responses/internalError"
          }
        }
      }
    },
    "/istio/permissions": {
      "get": {
        "description": "Endpoint to get the caller permissions on new Istio Config objects",
        "produces": [
          "application/json"
        ],
        "schemes": [
          "http",
          "https"
        ],
        "tags": [
          "config"
        ],
        "operationId": "getPermissions",
        "responses": {
          "200": {
            "$ref": "#/responses/istioConfigPermissions"
          },
          "500": {
            "$ref": "#/responses/internalError"
          }
        }
      }
    },
    "/istio/status": {
      "get": {
        "description": "Get the status of each components needed in the control plane",
        "produces": [
          "application/json"
        ],
        "schemes": [
          "http",
          "https"
        ],
        "tags": [
          "status"
        ],
        "operationId": "istioStatus",
        "responses": {
          "200": {
            "$ref": "#/responses/istioStatusResponse"
          },
          "400": {
            "$ref": "#/responses/badRequestError"
          },
          "500": {
            "$ref": "#/responses/internalError"
          }
        }
      }
    },
    "/jaeger": {
      "get": {
        "description": "Get the jaeger URL and other descriptors",
        "produces": [
          "application/json"
        ],
        "schemes": [
          "http",
          "https"
        ],
        "tags": [
          "integrations"
        ],
        "operationId": "jaegerInfo",
        "responses": {
          "200": {
            "$ref": "#/responses/jaegerInfoResponse"
          },
          "404": {
            "$ref": "#/responses/notFoundError"
          },
          "406": {
            "$ref": "#/responses/notAcceptableError"
          }
        }
      }
    },
    "/logout": {
      "get": {
        "description": "Endpoint to logout an user (unset the session cookie)",
        "schemes": [
          "http",
          "https"
        ],
        "tags": [
          "auth"
        ],
        "operationId": "logout",
        "responses": {
          "204": {
            "$ref": "#/responses/noContent"
          }
        }
      }
    },
    "/mesh/tls": {
      "get": {
        "description": "Get TLS status for the whole mesh",
        "produces": [
          "application/json"
        ],
        "schemes": [
          "http",
          "https"
        ],
        "tags": [
          "tls"
        ],
        "operationId": "meshTls",
        "responses": {
          "200": {
            "$ref": "#/responses/meshTlsResponse"
          },
          "400": {
            "$ref": "#/responses/badRequestError"
          },
          "500": {
            "$ref": "#/responses/internalError"
          }
        }
      }
    },
    "/namespaces": {
      "get": {
        "description": "Endpoint to get the list of the available namespaces",
        "produces": [
          "application/json"
        ],
        "schemes": [
          "http",
          "https"
        ],
        "tags": [
          "namespaces"
        ],
        "operationId": "namespaceList",
        "responses": {
          "200": {
            "$ref": "#/responses/namespaceList"
          },
          "500": {
            "$ref": "#/responses/internalError"
          }
        }
      }
    },
    "/namespaces/graph": {
      "get": {
        "produces": [
          "application/json"
        ],
        "schemes": [
          "http",
          "https"
        ],
        "tags": [
          "graphs"
        ],
        "summary": "The backing JSON for a namespaces graph.",
        "operationId": "graphNamespaces",
        "parameters": [
          {
            "type": "string",
            "default": "aggregateNode,deadNode,healthConfig,idleNode,istio,responseTime,securityPolicy,serviceEntry,sidecarsCheck,throughput",
            "x-go-name": "Name",
            "description": "Comma-separated list of Appenders to run. Available appenders: [aggregateNode, deadNode, healthConfig, idleNode, istio, responseTime, securityPolicy, serviceEntry, sidecarsCheck, throughput].",
            "name": "appenders",
            "in": "query"
          },
          {
            "type": "string",
            "x-go-name": "Name",
            "description": "Comma-separated list of desired node boxing. Available boxings: [app, cluster, namespace].",
            "name": "boxBy",
            "in": "query"
          },
          {
            "type": "string",
            "default": "10m",
            "x-go-name": "Name",
            "description": "Query time-range duration (Golang string duration).",
            "name": "duration",
            "in": "query"
          },
          {
            "type": "string",
            "default": "workload",
            "x-go-name": "Name",
            "description": "Graph type. Available graph types: [app, service, versionedApp, workload].",
            "name": "graphType",
            "in": "query"
          },
          {
            "type": "string",
            "default": "false",
            "x-go-name": "Name",
            "description": "Flag for including edges that have no request traffic for the time period.",
            "name": "includeIdleEdges",
            "in": "query"
          },
          {
            "type": "string",
            "default": "false",
            "x-go-name": "Name",
            "description": "Flag for injecting the requested service node between source and destination nodes.",
            "name": "injectServiceNodes",
            "in": "query"
          },
          {
            "type": "string",
            "x-go-name": "Name",
            "description": "Comma-separated list of namespaces to include in the graph. The namespaces must be accessible to the client.",
            "name": "namespaces",
            "in": "query",
            "required": true
          },
          {
            "type": "string",
            "default": "now",
            "x-go-name": "Name",
            "description": "Unix time (seconds) for query such that time range is [queryTime-duration..queryTime]. Default is now.",
            "name": "queryTime",
            "in": "query"
          },
          {
            "type": "string",
            "default": "requests",
            "x-go-name": "Name",
            "description": "How to calculate gRPC traffic rate. One of: none | received (i.e. response_messages) | requests | sent (i.e. request_messages) | total (i.e. sent+received).",
            "name": "rateGrpc",
            "in": "query"
          },
          {
            "type": "string",
            "default": "requests",
            "x-go-name": "Name",
            "description": "How to calculate HTTP traffic rate. One of: none | requests.",
            "name": "rateHttp",
            "in": "query"
          },
          {
            "type": "string",
            "default": "sent",
            "x-go-name": "Name",
            "description": "How to calculate TCP traffic rate. One of: none | received (i.e. received_bytes) | sent (i.e. sent_bytes) | total (i.e. sent+received).",
            "name": "rateTcp",
            "in": "query"
          },
          {
            "type": "string",
            "default": "95",
            "x-go-name": "Name",
            "description": "Used only with responseTime appender. One of: avg | 50 | 95 | 99.",
            "name": "responseTime",
            "in": "query"
          },
          {
            "type": "string",
            "default": "request",
            "x-go-name": "Name",
            "description": "Used only with throughput appender. One of: request | response.",
            "name": "throughput",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/responses/graphResponse"
          },
          "400": {
            "$ref": "#/responses/badRequestError"
          },
          "500": {
            "$ref": "#/responses/internalError"
          }
        }
      }
    },
    "/namespaces/{namespace}": {
      "patch": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "schemes": [
          "http",
          "https"
        ],
        "tags": [
          "namespaces"
        ],
        "summary": "Endpoint to update the Namespace configuration using Json Merge Patch strategy.",
        "operationId": "namespaceUpdate",
        "parameters": [
          {
            "type": "string",
            "x-go-name": "Name",
            "description": "The namespace name.",
            "name": "namespace",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/responses/namespaceResponse"
          },
          "400": {
            "$ref": "#/responses/badRequestError"
          },
          "404": {
            "$ref": "#/responses/notFoundError"
          },
          "500": {
            "$ref": "#/responses/internalError"
          }
        }
      }
    },
    "/namespaces/{namespace}/aggregates/{aggregate}/{aggregateValue}/graph": {
      "get": {
        "description": "The backing JSON for an aggregate node detail graph. (supported graphTypes: app | versionedApp | workload)",
        "produces": [
          "application/json"
        ],
        "schemes": [
          "http",
          "https"
        ],
        "tags": [
          "graphs"
        ],
        "operationId": "graphAggregate",
        "parameters": [
          {
            "type": "string",
            "x-go-name": "Name",
            "description": "The aggregate name (label).",
            "name": "aggregate",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "x-go-name": "Name",
            "description": "The aggregate value (label value).",
            "name": "aggregateValue",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "x-go-name": "Name",
            "description": "The cluster name. If not supplied queries/results will not be constrained by cluster.",
            "name": "container",
            "in": "query"
          },
          {
            "type": "string",
            "x-go-name": "Name",
            "description": "The namespace name.",
            "name": "namespace",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/responses/graphResponse"
          },
          "400": {
            "$ref": "#/responses/badRequestError"
          },
          "500": {
            "$ref": "#/responses/internalError"
          }
        }
      }
    },
    "/namespaces/{namespace}/aggregates/{aggregate}/{aggregateValue}/metrics": {
      "get": {
        "description": "Endpoint to fetch metrics to be displayed, related to a single aggregate",
        "produces": [
          "application/json"
        ],
        "schemes": [
          "http",
          "https"
        ],
        "tags": [
          "aggregates"
        ],
        "operationId": "aggregateMetrics",
        "parameters": [
          {
            "type": "string",
            "x-go-name": "Name",
            "description": "The aggregate name (label).",
            "name": "aggregate",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "x-go-name": "Name",
            "description": "The aggregate value (label value).",
            "name": "aggregateValue",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "x-go-name": "Name",
            "description": "The namespace name.",
            "name": "namespace",
            "in": "path",
            "required": true
          },
          {
            "type": "boolean",
            "default": true,
            "x-go-name": "Name",
            "description": "Flag for fetching histogram average. Default is true.",
            "name": "avg",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "default": [],
            "x-go-name": "Name",
            "description": "List of labels to use for grouping metrics (via Prometheus 'by' clause).",
            "name": "byLabels[]",
            "in": "query"
          },
          {
            "type": "string",
            "default": "outbound",
            "x-go-name": "Name",
            "description": "Traffic direction: 'inbound' or 'outbound'.",
            "name": "direction",
            "in": "query"
          },
          {
            "type": "integer",
            "format": "int64",
            "default": 1800,
            "x-go-name": "Name",
            "description": "Duration of the query period, in seconds.",
            "name": "duration",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "default": [],
            "x-go-name": "Name",
            "description": "List of metrics to fetch. Fetch all metrics when empty. List entries are Kiali internal metric names.",
            "name": "filters[]",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "default": [],
            "x-go-name": "Name",
            "description": "List of quantiles to fetch. Fetch no quantiles when empty. Ex: [0.5, 0.95, 0.99].",
            "name": "quantiles[]",
            "in": "query"
          },
          {
            "type": "string",
            "default": "rate",
            "x-go-name": "Name",
            "description": "Prometheus function used to calculate rate: 'rate' or 'irate'.",
            "name": "rateFunc",
            "in": "query"
          },
          {
            "type": "string",
            "default": "1m",
            "x-go-name": "Name",
            "description": "Interval used for rate and histogram calculation.",
            "name": "rateInterval",
            "in": "query"
          },
          {
            "type": "string",
            "default": "all protocols",
            "x-go-name": "Name",
            "description": "Desired request protocol for the telemetry: For example, 'http' or 'grpc'.",
            "name": "requestProtocol",
            "in": "query"
          },
          {
            "type": "string",
            "default": "source",
            "x-go-name": "Name",
            "description": "Istio telemetry reporter: 'source' or 'destination'.",
            "name": "reporter",
            "in": "query"
          },
          {
            "type": "integer",
            "format": "int64",
            "default": 15,
            "x-go-name": "Name",
            "description": "Step between [graph] datapoints, in seconds.",
            "name": "step",
            "in": "query"
          },
          {
            "type": "string",
            "x-go-name": "Name",
            "description": "Filters metrics by the specified version.",
            "name": "version",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/responses/metricsResponse"
          },
          "400": {
            "$ref": "#/responses/badRequestError"
          },
          "503": {
            "$ref": "#/responses/serviceUnavailableError"
          }
        }
      }
    },
    "/namespaces/{namespace}/aggregates/{aggregate}/{aggregateValue}/{service}/graph": {
      "get": {
        "description": "The backing JSON for an aggregate node detail graph, specific to a service. (supported graphTypes: app | versionedApp | workload)",
        "produces": [
          "application/json"
        ],
        "schemes": [
          "http",
          "https"
        ],
        "tags": [
          "graphs"
        ],
        "operationId": "graphAggregateByService",
        "parameters": [
          {
            "type": "string",
            "x-go-name": "Name",
            "description": "The aggregate name (label).",
            "name": "aggregate",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "x-go-name": "Name",
            "description": "The aggregate value (label value).",
            "name": "aggregateValue",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "x-go-name": "Name",
            "description": "The cluster name. If not supplied queries/results will not be constrained by cluster.",
            "name": "container",
            "in": "query"
          },
          {
            "type": "string",
            "x-go-name": "Name",
            "description": "The namespace name.",
            "name": "namespace",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "x-go-name": "Name",
            "description": "The service name.",
            "name": "service",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/responses/graphResponse"
          },
          "400": {
            "$ref": "#/responses/badRequestError"
          },
          "500": {
            "$ref": "#/responses/internalError"
          }
        }
      }
    },
    "/namespaces/{namespace}/applications/{app}/graph": {
      "get": {
        "description": "The backing JSON for an app node detail graph. (supported graphTypes: app | versionedApp)",
        "produces": [
          "application/json"
        ],
        "schemes": [
          "http",
          "https"
        ],
        "tags": [
          "graphs"
        ],
        "operationId": "graphApp",
        "parameters": [
          {
            "type": "string",
            "x-go-name": "Name",
            "description": "The app name (label value).",
            "name": "app",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "x-go-name": "Name",
            "description": "The cluster name. If not supplied queries/results will not be constrained by cluster.",
            "name": "container",
            "in": "query"
          },
          {
            "type": "string",
            "x-go-name": "Name",
            "description": "The namespace name.",
            "name": "namespace",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "default": "aggregateNode,deadNode,healthConfig,idleNode,istio,responseTime,securityPolicy,serviceEntry,sidecarsCheck,throughput",
            "x-go-name": "Name",
            "description": "Comma-separated list of Appenders to run. Available appenders: [aggregateNode, deadNode, healthConfig, idleNode, istio, responseTime, securityPolicy, serviceEntry, sidecarsCheck, throughput].",
            "name": "appenders",
            "in": "query"
          },
          {
            "type": "string",
            "x-go-name": "Name",
            "description": "Comma-separated list of desired node boxing. Available boxings: [app, cluster, namespace].",
            "name": "boxBy",
            "in": "query"
          },
          {
            "type": "string",
            "default": "10m",
            "x-go-name": "Name",
            "description": "Query time-range duration (Golang string duration).",
            "name": "duration",
            "in": "query"
          },
          {
            "type": "string",
            "x-go-name": "Name",
            "description": "Graph type. Available graph types: [app, versionedApp].",
            "name": "graphType",
            "in": "query",
            "required": true
          },
          {
            "type": "string",
            "default": "false",
            "x-go-name": "Name",
            "description": "Flag for including edges that have no request traffic for the time period.",
            "name": "includeIdleEdges",
            "in": "query"
          },
          {
            "type": "string",
            "default": "false",
            "x-go-name": "Name",
            "description": "Flag for injecting the requested service node between source and destination nodes.",
            "name": "injectServiceNodes",
            "in": "query"
          },
          {
            "type": "string",
            "default": "now",
            "x-go-name": "Name",
            "description": "Unix time (seconds) for query such that time range is [queryTime-duration..queryTime]. Default is now.",
            "name": "queryTime",
            "in": "query"
          },
          {
            "type": "string",
            "default": "requests",
            "x-go-name": "Name",
            "description": "How to calculate gRPC traffic rate. One of: none | received (i.e. response_messages) | requests | sent (i.e. request_messages) | total (i.e. sent+received).",
            "name": "rateGrpc",
            "in": "query"
          },
          {
            "type": "string",
            "default": "requests",
            "x-go-name": "Name",
            "description": "How to calculate HTTP traffic rate. One of: none | requests.",
            "name": "rateHttp",
            "in": "query"
          },
          {
            "type": "string",
            "default": "sent",
            "x-go-name": "Name",
            "description": "How to calculate TCP traffic rate. One of: none | received (i.e. received_bytes) | sent (i.e. sent_bytes) | total (i.e. sent+received).",
            "name": "rateTcp",
            "in": "query"
          },
          {
            "type": "string",
            "default": "95",
            "x-go-name": "Name",
            "description": "Used only with responseTime appender. One of: avg | 50 | 95 | 99.",
            "name": "responseTime",
            "in": "query"
          },
          {
            "type": "string",
            "default": "request",
            "x-go-name": "Name",
            "description": "Used only with throughput appender. One of: request | response.",
            "name": "throughput",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/responses/graphResponse"
          },
          "400": {
            "$ref": "#/responses/badRequestError"
          },
          "500": {
            "$ref": "#/responses/internalError"
          }
        }
      }
    },
    "/namespaces/{namespace}/applications/{app}/versions/{version}/graph": {
      "get": {
        "description": "The backing JSON for a versioned app node detail graph. (supported graphTypes: app | versionedApp)",
        "produces": [
          "application/json"
        ],
        "schemes": [
          "http",
          "https"
        ],
        "tags": [
          "graphs"
        ],
        "operationId": "graphAppVersion",
        "parameters": [
          {
            "type": "string",
            "x-go-name": "Name",
            "description": "The app name (label value).",
            "name": "app",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "x-go-name": "Name",
            "description": "The app version (label value).",
            "name": "version",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "x-go-name": "Name",
            "description": "The cluster name. If not supplied queries/results will not be constrained by cluster.",
            "name": "container",
            "in": "query"
          },
          {
            "type": "string",
            "x-go-name": "Name",
            "description": "The namespace name.",
            "name": "namespace",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "default": "aggregateNode,deadNode,healthConfig,idleNode,istio,responseTime,securityPolicy,serviceEntry,sidecarsCheck,throughput",
            "x-go-name": "Name",
            "description": "Comma-separated list of Appenders to run. Available appenders: [aggregateNode, deadNode, healthConfig, idleNode, istio, responseTime, securityPolicy, serviceEntry, sidecarsCheck, throughput].",
            "name": "appenders",
            "in": "query"
          },
          {
            "type": "string",
            "x-go-name": "Name",
            "description": "Comma-separated list of desired node boxing. Available boxings: [app, cluster, namespace].",
            "name": "boxBy",
            "in": "query"
          },
          {
            "type": "string",
            "default": "10m",
            "x-go-name": "Name",
            "description": "Query time-range duration (Golang string duration).",
            "name": "duration",
            "in": "query"
          },
          {
            "type": "string",
            "x-go-name": "Name",
            "description": "Graph type. Available graph types: [app, versionedApp].",
            "name": "graphType",
            "in": "query",
            "required": true
          },
          {
            "type": "string",
            "default": "false",
            "x-go-name": "Name",
            "description": "Flag for including edges that have no request traffic for the time period.",
            "name": "includeIdleEdges",
            "in": "query"
          },
          {
            "type": "string",
            "default": "false",
            "x-go-name": "Name",
            "description": "Flag for injecting the requested service node between source and destination nodes.",
            "name": "injectServiceNodes",
            "in": "query"
          },
          {
            "type": "string",
            "default": "now",
            "x-go-name": "Name",
            "description": "Unix time (seconds) for query such that time range is [queryTime-duration..queryTime]. Default is now.",
            "name": "queryTime",
            "in": "query"
          },
          {
            "type": "string",
            "default": "requests",
            "x-go-name": "Name",
            "description": "How to calculate gRPC traffic rate. One of: none | received (i.e. response_messages) | requests | sent (i.e. request_messages) | total (i.e. sent+received).",
            "name": "rateGrpc",
            "in": "query"
          },
          {
            "type": "string",
            "default": "requests",
            "x-go-name": "Name",
            "description": "How to calculate HTTP traffic rate. One of: none | requests.",
            "name": "rateHttp",
            "in": "query"
          },
          {
            "type": "string",
            "default": "sent",
            "x-go-name": "Name",
            "description": "How to calculate TCP traffic rate. One of: none | received (i.e. received_bytes) | sent (i.e. sent_bytes) | total (i.e. sent+received).",
            "name": "rateTcp",
            "in": "query"
          },
          {
            "type": "string",
            "default": "95",
            "x-go-name": "Name",
            "description": "Used only with responseTime appender. One of: avg | 50 | 95 | 99.",
            "name": "responseTime",
            "in": "query"
          },
          {
            "type": "string",
            "default": "request",
            "x-go-name": "Name",
            "description": "Used only with throughput appender. One of: request | response.",
            "name": "throughput",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/responses/graphResponse"
          },
          "400": {
            "$ref": "#/responses/badRequestError"
          },
          "500": {
            "$ref": "#/responses/internalError"
          }
        }
      }
    },
    "/namespaces/{namespace}/apps": {
      "get": {
        "description": "Endpoint to get the list of apps for a namespace",
        "produces": [
          "application/json"
        ],
        "schemes": [
          "http",
          "https"
        ],
        "tags": [
          "apps"
        ],
        "operationId": "appList",
        "parameters": [
          {
            "type": "string",
            "x-go-name": "Name",
            "description": "The namespace name.",
            "name": "namespace",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/responses/appListResponse"
          },
          "500": {
            "$ref": "#/responses/internalError"
          }
        }
      }
    },
    "/namespaces/{namespace}/apps/{app}": {
      "get": {
        "description": "Endpoint to get the app details",
        "produces": [
          "application/json"
        ],
        "schemes": [
          "http",
          "https"
        ],
        "tags": [
          "apps"
        ],
        "operationId": "appDetails",
        "parameters": [
          {
            "type": "string",
            "x-go-name": "Name",
            "description": "The app name (label value).",
            "name": "app",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "x-go-name": "Name",
            "description": "The namespace name.",
            "name": "namespace",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/responses/appDetails"
          },
          "404": {
            "$ref": "#/responses/notFoundError"
          },
          "500": {
            "$ref": "#/responses/internalError"
          }
        }
      }
    },
    "/namespaces/{namespace}/apps/{app}/dashboard": {
      "get": {
        "description": "Endpoint to fetch dashboard to be displayed, related to a single app",
        "produces": [
          "application/json"
        ],
        "schemes": [
          "http",
          "https"
        ],
        "tags": [
          "apps"
        ],
        "operationId": "appDashboard",
        "parameters": [
          {
            "type": "string",
            "x-go-name": "Name",
            "description": "The app name (label value).",
            "name": "app",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "x-go-name": "Name",
            "description": "The namespace name.",
            "name": "namespace",
            "in": "path",
            "required": true
          },
          {
            "type": "boolean",
            "default": true,
            "x-go-name": "Name",
            "description": "Flag for fetching histogram average. Default is true.",
            "name": "avg",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "default": [],
            "x-go-name": "Name",
            "description": "List of labels to use for grouping metrics (via Prometheus 'by' clause).",
            "name": "byLabels[]",
            "in": "query"
          },
          {
            "type": "string",
            "default": "outbound",
            "x-go-name": "Name",
            "description": "Traffic direction: 'inbound' or 'outbound'.",
            "name": "direction",
            "in": "query"
          },
          {
            "type": "integer",
            "format": "int64",
            "default": 1800,
            "x-go-name": "Name",
            "description": "Duration of the query period, in seconds.",
            "name": "duration",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "default": [],
            "x-go-name": "Name",
            "description": "List of quantiles to fetch. Fetch no quantiles when empty. Ex: [0.5, 0.95, 0.99].",
            "name": "quantiles[]",
            "in": "query"
          },
          {
            "type": "string",
            "default": "rate",
            "x-go-name": "Name",
            "description": "Prometheus function used to calculate rate: 'rate' or 'irate'.",
            "name": "rateFunc",
            "in": "query"
          },
          {
            "type": "string",
            "default": "1m",
            "x-go-name": "Name",
            "description": "Interval used for rate and histogram calculation.",
            "name": "rateInterval",
            "in": "query"
          },
          {
            "type": "string",
            "default": "all protocols",
            "x-go-name": "Name",
            "description": "Desired request protocol for the telemetry: For example, 'http' or 'grpc'.",
            "name": "requestProtocol",
            "in": "query"
          },
          {
            "type": "string",
            "default": "source",
            "x-go-name": "Name",
            "description": "Istio telemetry reporter: 'source' or 'destination'.",
            "name": "reporter",
            "in": "query"
          },
          {
            "type": "integer",
            "format": "int64",
            "default": 15,
            "x-go-name": "Name",
            "description": "Step between [graph] datapoints, in seconds.",
            "name": "step",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/responses/dashboardResponse"
          },
          "400": {
            "$ref": "#/responses/badRequestError"
          },
          "503": {
            "$ref": "#/responses/serviceUnavailableError"
          }
        }
      }
    },
    "/namespaces/{namespace}/apps/{app}/errortraces": {
      "get": {
        "description": "Endpoint to get the number of traces in error for a given service",
        "produces": [
          "application/json"
        ],
        "schemes": [
          "http",
          "https"
        ],
        "tags": [
          "traces"
        ],
        "operationId": "errorTraces",
        "parameters": [
          {
            "type": "string",
            "x-go-name": "Name",
            "description": "The app name (label value).",
            "name": "app",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "x-go-name": "Name",
            "description": "The namespace name.",
            "name": "namespace",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/responses/errorTracesResponse"
          },
          "404": {
            "$ref": "#/responses/notFoundError"
          },
          "500": {
            "$ref": "#/responses/internalError"
          }
        }
      }
    },
    "/namespaces/{namespace}/apps/{app}/health": {
      "get": {
        "description": "Get health associated to the given app",
        "produces": [
          "application/json"
        ],
        "schemes": [
          "http",
          "https"
        ],
        "tags": [
          "apps"
        ],
        "operationId": "appHealth",
        "parameters": [
          {
            "type": "string",
            "x-go-name": "Namespace",
            "description": "The namespace scope",
            "name": "namespace",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "default": "10m",
            "x-go-name": "RateInterval",
            "description": "The rate interval used for fetching error rate",
            "name": "rateInterval",
            "in": "query"
          },
          {
            "type": "string",
            "format": "date-time",
            "description": "The time to use for the prometheus query",
            "name": "QueryTime",
            "in": "query"
          },
          {
            "type": "string",
            "x-go-name": "App",
            "description": "The target app",
            "name": "app",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/responses/appHealthResponse"
          },
          "404": {
            "$ref": "#/responses/notFoundError"
          },
          "500": {
            "$ref": "#/responses/internalError"
          }
        }
      }
    },
    "/namespaces/{namespace}/apps/{app}/metrics": {
      "get": {
        "description": "Endpoint to fetch metrics to be displayed, related to a single app",
        "produces": [
          "application/json"
        ],
        "schemes": [
          "http",
          "https"
        ],
        "tags": [
          "apps"
        ],
        "operationId": "appMetrics",
        "parameters": [
          {
            "type": "string",
            "x-go-name": "Name",
            "description": "The app name (label value).",
            "name": "app",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "x-go-name": "Name",
            "description": "The namespace name.",
            "name": "namespace",
            "in": "path",
            "required": true
          },
          {
            "type": "boolean",
            "default": true,
            "x-go-name": "Name",
            "description": "Flag for fetching histogram average. Default is true.",
            "name": "avg",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "default": [],
            "x-go-name": "Name",
            "description": "List of labels to use for grouping metrics (via Prometheus 'by' clause).",
            "name": "byLabels[]",
            "in": "query"
          },
          {
            "type": "string",
            "default": "outbound",
            "x-go-name": "Name",
            "description": "Traffic direction: 'inbound' or 'outbound'.",
            "name": "direction",
            "in": "query"
          },
          {
            "type": "integer",
            "format": "int64",
            "default": 1800,
            "x-go-name": "Name",
            "description": "Duration of the query period, in seconds.",
            "name": "duration",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "default": [],
            "x-go-name": "Name",
            "description": "List of metrics to fetch. Fetch all metrics when empty. List entries are Kiali internal metric names.",
            "name": "filters[]",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "default": [],
            "x-go-name": "Name",
            "description": "List of quantiles to fetch. Fetch no quantiles when empty. Ex: [0.5, 0.95, 0.99].",
            "name": "quantiles[]",
            "in": "query"
          },
          {
            "type": "string",
            "default": "rate",
            "x-go-name": "Name",
            "description": "Prometheus function used to calculate rate: 'rate' or 'irate'.",
            "name": "rateFunc",
            "in": "query"
          },
          {
            "type": "string",
            "default": "1m",
            "x-go-name": "Name",
            "description": "Interval used for rate and histogram calculation.",
            "name": "rateInterval",
            "in": "query"
          },
          {
            "type": "string",
            "default": "all protocols",
            "x-go-name": "Name",
            "description": "Desired request protocol for the telemetry: For example, 'http' or 'grpc'.",
            "name": "requestProtocol",
            "in": "query"
          },
          {
            "type": "string",
            "default": "source",
            "x-go-name": "Name",
            "description": "Istio telemetry reporter: 'source' or 'destination'.",
            "name": "reporter",
            "in": "query"
          },
          {
            "type": "integer",
            "format": "int64",
            "default": 15,
            "x-go-name": "Name",
            "description": "Step between [graph] datapoints, in seconds.",
            "name": "step",
            "in": "query"
          },
          {
            "type": "string",
            "x-go-name": "Name",
            "description": "Filters metrics by the specified version.",
            "name": "version",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/responses/metricsResponse"
          },
          "400": {
            "$ref": "#/responses/badRequestError"
          },
          "503": {
            "$ref": "#/responses/serviceUnavailableError"
          }
        }
      }
    },
    "/namespaces/{namespace}/apps/{app}/spans": {
      "get": {
        "description": "Endpoint to get Jaeger spans for a given app",
        "produces": [
          "application/json"
        ],
        "schemes": [
          "http",
          "https"
        ],
        "tags": [
          "traces"
        ],
        "operationId": "appSpans",
        "parameters": [
          {
            "type": "string",
            "x-go-name": "Name",
            "description": "The app name (label value).",
            "name": "app",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "x-go-name": "Name",
            "description": "The namespace name.",
            "name": "namespace",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/responses/spansResponse"
          },
          "500": {
            "$ref": "#/responses/internalError"
          }
        }
      }
    },
    "/namespaces/{namespace}/apps/{app}/traces": {
      "get": {
        "description": "Endpoint to get the traces of a given app",
        "produces": [
          "application/json"
        ],
        "schemes": [
          "http",
          "https"
        ],
        "tags": [
          "traces"
        ],
        "operationId": "appTraces",
        "parameters": [
          {
            "type": "string",
            "x-go-name": "Name",
            "description": "The app name (label value).",
            "name": "app",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "x-go-name": "Name",
            "description": "The namespace name.",
            "name": "namespace",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/responses/traceDetailsResponse"
          },
          "404": {
            "$ref": "#/responses/notFoundError"
          },
          "500": {
            "$ref": "#/responses/internalError"
          }
        }
      }
    },
    "/namespaces/{namespace}/customdashboard/{dashboard}": {
      "get": {
        "description": "Endpoint to fetch a custom dashboard",
        "produces": [
          "application/json"
        ],
        "schemes": [
          "http",
          "https"
        ],
        "tags": [
          "dashboards"
        ],
        "operationId": "customDashboard",
        "parameters": [
          {
            "type": "string",
            "x-go-name": "Name",
            "description": "The namespace name.",
            "name": "namespace",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "x-go-name": "Name",
            "description": "The dashboard resource name.",
            "name": "dashboard",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "x-go-name": "Name",
            "description": "In custom dashboards, additional labels that are made available for grouping in the UI, regardless which aggregations are defined in the MonitoringDashboard CR",
            "name": "additionalLabels",
            "in": "query"
          },
          {
            "type": "boolean",
            "default": true,
            "x-go-name": "Name",
            "description": "Flag for fetching histogram average. Default is true.",
            "name": "avg",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "default": [],
            "x-go-name": "Name",
            "description": "List of labels to use for grouping metrics (via Prometheus 'by' clause).",
            "name": "byLabels[]",
            "in": "query"
          },
          {
            "type": "integer",
            "format": "int64",
            "default": 1800,
            "x-go-name": "Name",
            "description": "Duration of the query period, in seconds.",
            "name": "duration",
            "in": "query"
          },
          {
            "type": "string",
            "x-go-name": "Name",
            "description": "In custom dashboards, labels filters to use when fetching metrics, formatted as key:value pairs. Ex: \"app:foo,version:bar\".",
            "name": "labelsFilters",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "default": [],
            "x-go-name": "Name",
            "description": "List of quantiles to fetch. Fetch no quantiles when empty. Ex: [0.5, 0.95, 0.99].",
            "name": "quantiles[]",
            "in": "query"
          },
          {
            "type": "string",
            "default": "rate",
            "x-go-name": "Name",
            "description": "Prometheus function used to calculate rate: 'rate' or 'irate'.",
            "name": "rateFunc",
            "in": "query"
          },
          {
            "type": "string",
            "default": "1m",
            "x-go-name": "Name",
            "description": "Interval used for rate and histogram calculation.",
            "name": "rateInterval",
            "in": "query"
          },
          {
            "type": "integer",
            "format": "int64",
            "default": 15,
            "x-go-name": "Name",
            "description": "Step between [graph] datapoints, in seconds.",
            "name": "step",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/responses/dashboardResponse"
          },
          "400": {
            "$ref": "#/responses/badRequestError"
          },
          "503": {
            "$ref": "#/responses/serviceUnavailableError"
          }
        }
      }
    },
    "/namespaces/{namespace}/health": {
      "get": {
        "description": "Get health for all objects in the given namespace",
        "produces": [
          "application/json"
        ],
        "schemes": [
          "http",
          "https"
        ],
        "tags": [
          "namespaces"
        ],
        "operationId": "namespaceHealth",
        "parameters": [
          {
            "type": "string",
            "x-go-name": "Namespace",
            "description": "The namespace scope",
            "name": "namespace",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "default": "10m",
            "x-go-name": "RateInterval",
            "description": "The rate interval used for fetching error rate",
            "name": "rateInterval",
            "in": "query"
          },
          {
            "type": "string",
            "format": "date-time",
            "description": "The time to use for the prometheus query",
            "name": "QueryTime",
            "in": "query"
          },
          {
            "pattern": "^(app|service|workload)$",
            "type": "string",
            "default": "app",
            "x-go-name": "Type",
            "description": "The type of health, \"app\", \"service\" or \"workload\".",
            "name": "type",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/responses/namespaceAppHealthResponse"
          },
          "400": {
            "$ref": "#/responses/badRequestError"
          },
          "500": {
            "$ref": "#/responses/internalError"
          }
        }
      }
    },
    "/namespaces/{namespace}/istio": {
      "get": {
        "description": "Endpoint to get the list of Istio Config of a namespace",
        "produces": [
          "application/json"
        ],
        "schemes": [
          "http",
          "https"
        ],
        "tags": [
          "config"
        ],
        "operationId": "istioConfigList",
        "parameters": [
          {
            "type": "string",
            "x-go-name": "Name",
            "description": "The namespace name.",
            "name": "namespace",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "x-go-name": "Name",
            "description": "Enable validation or not",
            "name": "validate",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/responses/istioConfigList"
          },
          "500": {
            "$ref": "#/responses/internalError"
          }
        }
      }
    },
    "/namespaces/{namespace}/istio/{object_type}": {
      "post": {
        "description": "Endpoint to create an Istio object by using an Istio Config item",
        "produces": [
          "application/json"
        ],
        "schemes": [
          "http",
          "https"
        ],
        "tags": [
          "config"
        ],
        "operationId": "istioConfigCreate",
        "parameters": [
          {
            "type": "string",
            "x-go-name": "Name",
            "description": "The namespace name.",
            "name": "namespace",
            "in": "path",
            "required": true
          },
          {
            "pattern": "^(gateways|virtualservices|destinationrules|serviceentries|rules|quotaspecs|quotaspecbindings)$",
            "type": "string",
            "x-go-name": "Name",
            "description": "The Istio object type.",
            "name": "object_type",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/responses/istioConfigDetailsResponse"
          },
          "201": {
            "$ref": "#/responses/istioConfigDetailsResponse"
          },
          "404": {
            "$ref": "#/responses/notFoundError"
          },
          "500": {
            "$ref": "#/responses/internalError"
          }
        }
      }
    },
    "/namespaces/{namespace}/istio/{object_type}/{object}": {
      "get": {
        "description": "Endpoint to get the Istio Config of an Istio object",
        "produces": [
          "application/json"
        ],
        "schemes": [
          "http",
          "https"
        ],
        "tags": [
          "config"
        ],
        "operationId": "istioConfigDetails",
        "parameters": [
          {
            "type": "string",
            "x-go-name": "Name",
            "description": "The namespace name.",
            "name": "namespace",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "x-go-name": "Name",
            "description": "The Istio object name.",
            "name": "object",
            "in": "path",
            "required": true
          },
          {
            "pattern": "^(gateways|virtualservices|destinationrules|serviceentries|rules|quotaspecs|quotaspecbindings)$",
            "type": "string",
            "x-go-name": "Name",
            "description": "The Istio object type.",
            "name": "object_type",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "x-go-name": "Name",
            "description": "Enable validation or not",
            "name": "validate",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/responses/istioConfigDetailsResponse"
          },
          "400": {
            "$ref": "#/responses/badRequestError"
          },
          "404": {
            "$ref": "#/responses/notFoundError"
          },
          "500": {
            "$ref": "#/responses/internalError"
          }
        }
      },
      "delete": {
        "description": "Endpoint to delete the Istio Config of an (arbitrary) Istio object",
        "produces": [
          "application/json"
        ],
        "schemes": [
          "http",
          "https"
        ],
        "tags": [
          "config"
        ],
        "operationId": "istioConfigDelete",
        "parameters": [
          {
            "type": "string",
            "x-go-name": "Name",
            "description": "The namespace name.",
            "name": "namespace",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "x-go-name": "Name",
            "description": "The Istio object name.",
            "name": "object",
            "in": "path",
            "required": true
          },
          {
            "pattern": "^(gateways|virtualservices|destinationrules|serviceentries|rules|quotaspecs|quotaspecbindings)$",
            "type": "string",
            "x-go-name": "Name",
            "description": "The Istio object type.",
            "name": "object_type",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "404": {
            "$ref": "#/responses/notFoundError"
          },
          "500": {
            "$ref": "#/responses/internalError"
          }
        }
      },
      "patch": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "schemes": [
          "http",
          "https"
        ],
        "tags": [
          "config"
        ],
        "summary": "Endpoint to update the Istio Config of an Istio object used for templates and adapters using Json Merge Patch strategy.",
        "operationId": "istioConfigUpdate",
        "parameters": [
          {
            "type": "string",
            "x-go-name": "Name",
            "description": "The namespace name.",
            "name": "namespace",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "x-go-name": "Name",
            "description": "The Istio object name.",
            "name": "object",
            "in": "path",
            "required": true
          },
          {
            "pattern": "^(gateways|virtualservices|destinationrules|serviceentries|rules|quotaspecs|quotaspecbindings)$",
            "type": "string",
            "x-go-name": "Name",
            "description": "The Istio object type.",
            "name": "object_type",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/responses/istioConfigDetailsResponse"
          },
          "400": {
            "$ref": "#/responses/badRequestError"
          },
          "404": {
            "$ref": "#/responses/notFoundError"
          },
          "500": {
            "$ref": "#/responses/internalError"
          }
        }
      }
    },
    "/namespaces/{namespace}/metrics": {
      "get": {
        "description": "Endpoint to fetch metrics to be displayed, related to a namespace",
        "produces": [
          "application/json"
        ],
        "schemes": [
          "http",
          "https"
        ],
        "tags": [
          "namespaces"
        ],
        "operationId": "namespaceMetrics",
        "parameters": [
          {
            "type": "string",
            "x-go-name": "Name",
            "description": "The namespace name.",
            "name": "namespace",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/responses/metricsResponse"
          },
          "400": {
            "$ref": "#/responses/badRequestError"
          },
          "503": {
            "$ref": "#/responses/serviceUnavailableError"
          }
        }
      }
    },
    "/namespaces/{namespace}/pods/{pod}": {
      "get": {
        "description": "Endpoint to get pod details",
        "produces": [
          "application/json"
        ],
        "schemes": [
          "http",
          "https"
        ],
        "tags": [
          "pods"
        ],
        "operationId": "podDetails",
        "parameters": [
          {
            "type": "string",
            "x-go-name": "Name",
            "description": "The namespace name.",
            "name": "namespace",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "x-go-name": "Name",
            "description": "The pod name.",
            "name": "pod",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/responses/workloadDetails"
          },
          "404": {
            "$ref": "#/responses/notFoundError"
          },
          "500": {
            "$ref": "#/responses/internalError"
          }
        }
      }
    },
    "/namespaces/{namespace}/pods/{pod}/config_dump": {
      "get": {
        "description": "Endpoint to get pod proxy dump",
        "produces": [
          "application/json"
        ],
        "schemes": [
          "http",
          "https"
        ],
        "tags": [
          "pods"
        ],
        "operationId": "podProxyDump",
        "parameters": [
          {
            "type": "string",
            "x-go-name": "Name",
            "description": "The namespace name.",
            "name": "namespace",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "x-go-name": "Name",
            "description": "The pod name.",
            "name": "pod",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/responses/configDump"
          },
          "404": {
            "$ref": "#/responses/notFoundError"
          },
          "500": {
            "$ref": "#/responses/internalError"
          }
        }
      }
    },
    "/namespaces/{namespace}/pods/{pod}/config_dump/{resource}": {
      "get": {
        "description": "Endpoint to get pod logs",
        "produces": [
          "application/json"
        ],
        "schemes": [
          "http",
          "https"
        ],
        "tags": [
          "pods"
        ],
        "operationId": "podProxyResource",
        "parameters": [
          {
            "type": "string",
            "x-go-name": "Name",
            "description": "The namespace name.",
            "name": "namespace",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "x-go-name": "Name",
            "description": "The pod name.",
            "name": "pod",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "x-go-name": "Name",
            "description": "The discovery service resource",
            "name": "resource",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/responses/configDumpResource"
          },
          "404": {
            "$ref": "#/responses/notFoundError"
          },
          "500": {
            "$ref": "#/responses/internalError"
          }
        }
      }
    },
    "/namespaces/{namespace}/pods/{pod}/logging": {
      "post": {
        "description": "Endpoint to set pod proxy log level",
        "produces": [
          "application/json"
        ],
        "schemes": [
          "http",
          "https"
        ],
        "tags": [
          "pods"
        ],
        "operationId": "podProxyLogging",
        "parameters": [
          {
            "enum": [
              "off",
              "trace",
              "debug",
              "info",
              "warning",
              "error",
              "critical"
            ],
            "type": "string",
            "x-go-name": "Level",
            "description": "The log level for the pod's proxy.",
            "name": "level",
            "in": "query",
            "required": true
          },
          {
            "type": "string",
            "x-go-name": "Name",
            "description": "The namespace name.",
            "name": "namespace",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "x-go-name": "Name",
            "description": "The pod name.",
            "name": "pod",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/responses/noContent"
          },
          "400": {
            "$ref": "#/responses/badRequestError"
          },
          "404": {
            "$ref": "#/responses/notFoundError"
          },
          "500": {
            "$ref": "#/responses/internalError"
          }
        }
      }
    },
    "/namespaces/{namespace}/pods/{pod}/logs": {
      "get": {
        "description": "Endpoint to get pod logs",
        "produces": [
          "application/json"
        ],
        "schemes": [
          "http",
          "https"
        ],
        "tags": [
          "pods"
        ],
        "operationId": "podLogs",
        "parameters": [
          {
            "type": "string",
            "x-go-name": "Name",
            "description": "The pod container name. Optional for single-container pod. Otherwise required.",
            "name": "container",
            "in": "query"
          },
          {
            "type": "string",
            "x-go-name": "Name",
            "description": "The namespace name.",
            "name": "namespace",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "x-go-name": "Name",
            "description": "The pod name.",
            "name": "pod",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "x-go-name": "Name",
            "description": "The start time for fetching logs. UNIX time in seconds. Default is all logs.",
            "name": "sinceTime",
            "in": "query"
          },
          {
            "type": "string",
            "x-go-name": "Name",
            "description": "Query time-range duration (Golang string duration). Duration starts on\n`sinceTime` if set, or the time for the first log message if not set.",
            "name": "duration",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/responses/workloadDetails"
          },
          "404": {
            "$ref": "#/responses/notFoundError"
          },
          "500": {
            "$ref": "#/responses/internalError"
          }
        }
      }
    },
    "/namespaces/{namespace}/services": {
      "get": {
        "description": "Endpoint to get the details of a given service",
        "produces": [
          "application/json"
        ],
        "schemes": [
          "http",
          "https"
        ],
        "tags": [
          "services"
        ],
        "operationId": "serviceList",
        "parameters": [
          {
            "type": "string",
            "x-go-name": "Name",
            "description": "The namespace name.",
            "name": "namespace",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/responses/serviceListResponse"
          },
          "500": {
            "$ref": "#/responses/internalError"
          }
        }
      }
    },
    "/namespaces/{namespace}/services/{service}": {
      "get": {
        "description": "Endpoint to get the details of a given service",
        "produces": [
          "application/json"
        ],
        "schemes": [
          "http",
          "https"
        ],
        "tags": [
          "services"
        ],
        "operationId": "serviceDetails",
        "parameters": [
          {
            "type": "string",
            "x-go-name": "Name",
            "description": "The namespace name.",
            "name": "namespace",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "x-go-name": "Name",
            "description": "Enable validation or not",
            "name": "validate",
            "in": "query"
          },
          {
            "type": "string",
            "x-go-name": "Name",
            "description": "The service name.",
            "name": "service",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/responses/serviceDetailsResponse"
          },
          "404": {
            "$ref": "#/responses/notFoundError"
          },
          "500": {
            "$ref": "#/responses/internalError"
          }
        }
      },
      "patch": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "schemes": [
          "http",
          "https"
        ],
        "tags": [
          "services"
        ],
        "summary": "Endpoint to update the Service configuration using Json Merge Patch strategy.",
        "operationId": "serviceUpdate",
        "parameters": [
          {
            "type": "string",
            "x-go-name": "Name",
            "description": "The namespace name.",
            "name": "namespace",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "x-go-name": "Name",
            "description": "Enable validation or not",
            "name": "validate",
            "in": "query"
          },
          {
            "type": "string",
            "x-go-name": "Name",
            "description": "The service name.",
            "name": "service",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/responses/serviceDetailsResponse"
          },
          "400": {
            "$ref": "#/responses/badRequestError"
          },
          "404": {
            "$ref": "#/responses/notFoundError"
          },
          "500": {
            "$ref": "#/responses/internalError"
          }
        }
      }
    },
    "/namespaces/{namespace}/services/{service}/dashboard": {
      "get": {
        "description": "Endpoint to fetch dashboard to be displayed, related to a single service",
        "produces": [
          "application/json"
        ],
        "schemes": [
          "http",
          "https"
        ],
        "tags": [
          "services"
        ],
        "operationId": "serviceDashboard",
        "parameters": [
          {
            "type": "string",
            "x-go-name": "Name",
            "description": "The namespace name.",
            "name": "namespace",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "x-go-name": "Name",
            "description": "The service name.",
            "name": "service",
            "in": "path",
            "required": true
          },
          {
            "type": "boolean",
            "default": true,
            "x-go-name": "Name",
            "description": "Flag for fetching histogram average. Default is true.",
            "name": "avg",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "default": [],
            "x-go-name": "Name",
            "description": "List of labels to use for grouping metrics (via Prometheus 'by' clause).",
            "name": "byLabels[]",
            "in": "query"
          },
          {
            "type": "string",
            "default": "outbound",
            "x-go-name": "Name",
            "description": "Traffic direction: 'inbound' or 'outbound'.",
            "name": "direction",
            "in": "query"
          },
          {
            "type": "integer",
            "format": "int64",
            "default": 1800,
            "x-go-name": "Name",
            "description": "Duration of the query period, in seconds.",
            "name": "duration",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "default": [],
            "x-go-name": "Name",
            "description": "List of quantiles to fetch. Fetch no quantiles when empty. Ex: [0.5, 0.95, 0.99].",
            "name": "quantiles[]",
            "in": "query"
          },
          {
            "type": "string",
            "default": "rate",
            "x-go-name": "Name",
            "description": "Prometheus function used to calculate rate: 'rate' or 'irate'.",
            "name": "rateFunc",
            "in": "query"
          },
          {
            "type": "string",
            "default": "1m",
            "x-go-name": "Name",
            "description": "Interval used for rate and histogram calculation.",
            "name": "rateInterval",
            "in": "query"
          },
          {
            "type": "string",
            "default": "all protocols",
            "x-go-name": "Name",
            "description": "Desired request protocol for the telemetry: For example, 'http' or 'grpc'.",
            "name": "requestProtocol",
            "in": "query"
          },
          {
            "type": "string",
            "default": "source",
            "x-go-name": "Name",
            "description": "Istio telemetry reporter: 'source' or 'destination'.",
            "name": "reporter",
            "in": "query"
          },
          {
            "type": "integer",
            "format": "int64",
            "default": 15,
            "x-go-name": "Name",
            "description": "Step between [graph] datapoints, in seconds.",
            "name": "step",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/responses/dashboardResponse"
          },
          "400": {
            "$ref": "#/responses/badRequestError"
          },
          "503": {
            "$ref": "#/responses/serviceUnavailableError"
          }
        }
      }
    },
    "/namespaces/{namespace}/services/{service}/graph": {
      "get": {
        "produces": [
          "application/json"
        ],
        "schemes": [
          "http",
          "https"
        ],
        "tags": [
          "graphs"
        ],
        "summary": "The backing JSON for a service node detail graph.",
        "operationId": "graphService",
        "parameters": [
          {
            "type": "string",
            "x-go-name": "Name",
            "description": "The cluster name. If not supplied queries/results will not be constrained by cluster.",
            "name": "container",
            "in": "query"
          },
          {
            "type": "string",
            "x-go-name": "Name",
            "description": "The namespace name.",
            "name": "namespace",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "x-go-name": "Name",
            "description": "The service name.",
            "name": "service",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "default": "aggregateNode,deadNode,healthConfig,idleNode,istio,responseTime,securityPolicy,serviceEntry,sidecarsCheck,throughput",
            "x-go-name": "Name",
            "description": "Comma-separated list of Appenders to run. Available appenders: [aggregateNode, deadNode, healthConfig, idleNode, istio, responseTime, securityPolicy, serviceEntry, sidecarsCheck, throughput].",
            "name": "appenders",
            "in": "query"
          },
          {
            "type": "string",
            "x-go-name": "Name",
            "description": "Comma-separated list of desired node boxing. Available boxings: [app, cluster, namespace].",
            "name": "boxBy",
            "in": "query"
          },
          {
            "type": "string",
            "default": "10m",
            "x-go-name": "Name",
            "description": "Query time-range duration (Golang string duration).",
            "name": "duration",
            "in": "query"
          },
          {
            "type": "string",
            "default": "workload",
            "x-go-name": "Name",
            "description": "Graph type. Available graph types: [app, service, versionedApp, workload].",
            "name": "graphType",
            "in": "query"
          },
          {
            "type": "string",
            "default": "now",
            "x-go-name": "Name",
            "description": "Unix time (seconds) for query such that time range is [queryTime-duration..queryTime]. Default is now.",
            "name": "queryTime",
            "in": "query"
          },
          {
            "type": "string",
            "default": "requests",
            "x-go-name": "Name",
            "description": "How to calculate gRPC traffic rate. One of: none | received (i.e. response_messages) | requests | sent (i.e. request_messages) | total (i.e. sent+received).",
            "name": "rateGrpc",
            "in": "query"
          },
          {
            "type": "string",
            "default": "requests",
            "x-go-name": "Name",
            "description": "How to calculate HTTP traffic rate. One of: none | requests.",
            "name": "rateHttp",
            "in": "query"
          },
          {
            "type": "string",
            "default": "sent",
            "x-go-name": "Name",
            "description": "How to calculate TCP traffic rate. One of: none | received (i.e. received_bytes) | sent (i.e. sent_bytes) | total (i.e. sent+received).",
            "name": "rateTcp",
            "in": "query"
          },
          {
            "type": "string",
            "default": "95",
            "x-go-name": "Name",
            "description": "Used only with responseTime appender. One of: avg | 50 | 95 | 99.",
            "name": "responseTime",
            "in": "query"
          },
          {
            "type": "string",
            "default": "request",
            "x-go-name": "Name",
            "description": "Used only with throughput appender. One of: request | response.",
            "name": "throughput",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/responses/graphResponse"
          },
          "400": {
            "$ref": "#/responses/badRequestError"
          },
          "500": {
            "$ref": "#/responses/internalError"
          }
        }
      }
    },
    "/namespaces/{namespace}/services/{service}/health": {
      "get": {
        "description": "Get health associated to the given service",
        "produces": [
          "application/json"
        ],
        "schemes": [
          "http",
          "https"
        ],
        "tags": [
          "services"
        ],
        "operationId": "serviceHealth",
        "parameters": [
          {
            "type": "string",
            "x-go-name": "Namespace",
            "description": "The namespace scope",
            "name": "namespace",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "default": "10m",
            "x-go-name": "RateInterval",
            "description": "The rate interval used for fetching error rate",
            "name": "rateInterval",
            "in": "query"
          },
          {
            "type": "string",
            "format": "date-time",
            "description": "The time to use for the prometheus query",
            "name": "QueryTime",
            "in": "query"
          },
          {
            "type": "string",
            "x-go-name": "Service",
            "description": "The target service",
            "name": "service",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/responses/serviceHealthResponse"
          },
          "404": {
            "$ref": "#/responses/notFoundError"
          },
          "500": {
            "$ref": "#/responses/internalError"
          }
        }
      }
    },
    "/namespaces/{namespace}/services/{service}/metrics": {
      "get": {
        "description": "Endpoint to fetch metrics to be displayed, related to a single service",
        "produces": [
          "application/json"
        ],
        "schemes": [
          "http",
          "https"
        ],
        "tags": [
          "services"
        ],
        "operationId": "serviceMetrics",
        "parameters": [
          {
            "type": "string",
            "x-go-name": "Name",
            "description": "The namespace name.",
            "name": "namespace",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "x-go-name": "Name",
            "description": "The service name.",
            "name": "service",
            "in": "path",
            "required": true
          },
          {
            "type": "boolean",
            "default": true,
            "x-go-name": "Name",
            "description": "Flag for fetching histogram average. Default is true.",
            "name": "avg",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "default": [],
            "x-go-name": "Name",
            "description": "List of labels to use for grouping metrics (via Prometheus 'by' clause).",
            "name": "byLabels[]",
            "in": "query"
          },
          {
            "type": "string",
            "default": "outbound",
            "x-go-name": "Name",
            "description": "Traffic direction: 'inbound' or 'outbound'.",
            "name": "direction",
            "in": "query"
          },
          {
            "type": "integer",
            "format": "int64",
            "default": 1800,
            "x-go-name": "Name",
            "description": "Duration of the query period, in seconds.",
            "name": "duration",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "default": [],
            "x-go-name": "Name",
            "description": "List of metrics to fetch. Fetch all metrics when empty. List entries are Kiali internal metric names.",
            "name": "filters[]",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "default": [],
            "x-go-name": "Name",
            "description": "List of quantiles to fetch. Fetch no quantiles when empty. Ex: [0.5, 0.95, 0.99].",
            "name": "quantiles[]",
            "in": "query"
          },
          {
            "type": "string",
            "default": "rate",
            "x-go-name": "Name",
            "description": "Prometheus function used to calculate rate: 'rate' or 'irate'.",
            "name": "rateFunc",
            "in": "query"
          },
          {
            "type": "string",
            "default": "1m",
            "x-go-name": "Name",
            "description": "Interval used for rate and histogram calculation.",
            "name": "rateInterval",
            "in": "query"
          },
          {
            "type": "string",
            "default": "all protocols",
            "x-go-name": "Name",
            "description": "Desired request protocol for the telemetry: For example, 'http' or 'grpc'.",
            "name": "requestProtocol",
            "in": "query"
          },
          {
            "type": "string",
            "default": "source",
            "x-go-name": "Name",
            "description": "Istio telemetry reporter: 'source' or 'destination'.",
            "name": "reporter",
            "in": "query"
          },
          {
            "type": "integer",
            "format": "int64",
            "default": 15,
            "x-go-name": "Name",
            "description": "Step between [graph] datapoints, in seconds.",
            "name": "step",
            "in": "query"
          },
          {
            "type": "string",
            "x-go-name": "Name",
            "description": "Filters metrics by the specified version.",
            "name": "version",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/responses/metricsResponse"
          },
          "400": {
            "$ref": "#/responses/badRequestError"
          },
          "503": {
            "$ref": "#/responses/serviceUnavailableError"
          }
        }
      }
    },
    "/namespaces/{namespace}/services/{service}/spans": {
      "get": {
        "description": "Endpoint to get Jaeger spans for a given service",
        "produces": [
          "application/json"
        ],
        "schemes": [
          "http",
          "https"
        ],
        "tags": [
          "traces"
        ],
        "operationId": "serviceSpans",
        "parameters": [
          {
            "type": "string",
            "x-go-name": "Name",
            "description": "The namespace name.",
            "name": "namespace",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "x-go-name": "Name",
            "description": "The service name.",
            "name": "service",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/responses/spansResponse"
          },
          "500": {
            "$ref": "#/responses/internalError"
          }
        }
      }
    },
    "/namespaces/{namespace}/services/{service}/traces": {
      "get": {
        "description": "Endpoint to get the traces of a given service",
        "produces": [
          "application/json"
        ],
        "schemes": [
          "http",
          "https"
        ],
        "tags": [
          "traces"
        ],
        "operationId": "serviceTraces",
        "parameters": [
          {
            "type": "string",
            "x-go-name": "Name",
            "description": "The namespace name.",
            "name": "namespace",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "x-go-name": "Name",
            "description": "The service name.",
            "name": "service",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/responses/traceDetailsResponse"
          },
          "404": {
            "$ref": "#/responses/notFoundError"
          },
          "500": {
            "$ref": "#/responses/internalError"
          }
        }
      }
    },
    "/namespaces/{namespace}/tls": {
      "get": {
        "description": "Get TLS status for the given namespace",
        "produces": [
          "application/json"
        ],
        "schemes": [
          "http",
          "https"
        ],
        "tags": [
          "tls"
        ],
        "operationId": "namespaceTls",
        "parameters": [
          {
            "type": "string",
            "x-go-name": "Name",
            "description": "The namespace name.",
            "name": "namespace",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/responses/namespaceTlsResponse"
          },
          "400": {
            "$ref": "#/responses/badRequestError"
          },
          "500": {
            "$ref": "#/responses/internalError"
          }
        }
      }
    },
    "/namespaces/{namespace}/validations": {
      "get": {
        "description": "Get validation summary for all objects in the given namespace",
        "produces": [
          "application/json"
        ],
        "schemes": [
          "http",
          "https"
        ],
        "tags": [
          "namespaces"
        ],
        "operationId": "namespaceValidations",
        "parameters": [
          {
            "type": "string",
            "x-go-name": "Name",
            "description": "The namespace name.",
            "name": "namespace",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/responses/namespaceValidationSummaryResponse"
          },
          "400": {
            "$ref": "#/responses/badRequestError"
          },
          "500": {
            "$ref": "#/responses/internalError"
          }
        }
      }
    },
    "/namespaces/{namespace}/workloads": {
      "get": {
        "description": "Endpoint to get the list of workloads for a namespace",
        "produces": [
          "application/json"
        ],
        "schemes": [
          "http",
          "https"
        ],
        "tags": [
          "workloads"
        ],
        "operationId": "workloadList",
        "parameters": [
          {
            "type": "string",
            "x-go-name": "Name",
            "description": "The namespace name.",
            "name": "namespace",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/responses/workloadListResponse"
          },
          "500": {
            "$ref": "#/responses/internalError"
          }
        }
      }
    },
    "/namespaces/{namespace}/workloads/{workload}": {
      "get": {
        "description": "Endpoint to get the workload details",
        "produces": [
          "application/json"
        ],
        "schemes": [
          "http",
          "https"
        ],
        "tags": [
          "workloads"
        ],
        "operationId": "workloadDetails",
        "parameters": [
          {
            "type": "string",
            "x-go-name": "Name",
            "description": "The namespace name.",
            "name": "namespace",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "x-go-name": "Name",
            "description": "The workload name.",
            "name": "workload",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/responses/workloadDetails"
          },
          "404": {
            "$ref": "#/responses/notFoundError"
          },
          "500": {
            "$ref": "#/responses/internalError"
          }
        }
      },
      "patch": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "schemes": [
          "http",
          "https"
        ],
        "tags": [
          "workloads"
        ],
        "summary": "Endpoint to update the Workload configuration using Json Merge Patch strategy.",
        "operationId": "workloadUpdate",
        "parameters": [
          {
            "type": "string",
            "x-go-name": "Name",
            "description": "The namespace name.",
            "name": "namespace",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "x-go-name": "Name",
            "description": "The workload name.",
            "name": "workload",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/responses/workloadDetails"
          },
          "400": {
            "$ref": "#/responses/badRequestError"
          },
          "404": {
            "$ref": "#/responses/notFoundError"
          },
          "500": {
            "$ref": "#/responses/internalError"
          }
        }
      }
    },
    "/namespaces/{namespace}/workloads/{workload}/dashboard": {
      "get": {
        "description": "Endpoint to fetch dashboard to be displayed, related to a single workload",
        "produces": [
          "application/json"
        ],
        "schemes": [
          "http",
          "https"
        ],
        "tags": [
          "workloads"
        ],
        "operationId": "workloadDashboard",
        "parameters": [
          {
            "type": "string",
            "x-go-name": "Name",
            "description": "The namespace name.",
            "name": "namespace",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "x-go-name": "Name",
            "description": "The workload name.",
            "name": "workload",
            "in": "path",
            "required": true
          },
          {
            "type": "boolean",
            "default": true,
            "x-go-name": "Name",
            "description": "Flag for fetching histogram average. Default is true.",
            "name": "avg",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "default": [],
            "x-go-name": "Name",
            "description": "List of labels to use for grouping metrics (via Prometheus 'by' clause).",
            "name": "byLabels[]",
            "in": "query"
          },
          {
            "type": "string",
            "default": "outbound",
            "x-go-name": "Name",
            "description": "Traffic direction: 'inbound' or 'outbound'.",
            "name": "direction",
            "in": "query"
          },
          {
            "type": "integer",
            "format": "int64",
            "default": 1800,
            "x-go-name": "Name",
            "description": "Duration of the query period, in seconds.",
            "name": "duration",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "default": [],
            "x-go-name": "Name",
            "description": "List of quantiles to fetch. Fetch no quantiles when empty. Ex: [0.5, 0.95, 0.99].",
            "name": "quantiles[]",
            "in": "query"
          },
          {
            "type": "string",
            "default": "rate",
            "x-go-name": "Name",
            "description": "Prometheus function used to calculate rate: 'rate' or 'irate'.",
            "name": "rateFunc",
            "in": "query"
          },
          {
            "type": "string",
            "default": "1m",
            "x-go-name": "Name",
            "description": "Interval used for rate and histogram calculation.",
            "name": "rateInterval",
            "in": "query"
          },
          {
            "type": "string",
            "default": "all protocols",
            "x-go-name": "Name",
            "description": "Desired request protocol for the telemetry: For example, 'http' or 'grpc'.",
            "name": "requestProtocol",
            "in": "query"
          },
          {
            "type": "string",
            "default": "source",
            "x-go-name": "Name",
            "description": "Istio telemetry reporter: 'source' or 'destination'.",
            "name": "reporter",
            "in": "query"
          },
          {
            "type": "integer",
            "format": "int64",
            "default": 15,
            "x-go-name": "Name",
            "description": "Step between [graph] datapoints, in seconds.",
            "name": "step",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/responses/dashboardResponse"
          },
          "400": {
            "$ref": "#/responses/badRequestError"
          },
          "503": {
            "$ref": "#/responses/serviceUnavailableError"
          }
        }
      }
    },
    "/namespaces/{namespace}/workloads/{workload}/graph": {
      "get": {
        "produces": [
          "application/json"
        ],
        "schemes": [
          "http",
          "https"
        ],
        "tags": [
          "graphs"
        ],
        "summary": "The backing JSON for a workload node detail graph.",
        "operationId": "graphWorkload",
        "parameters": [
          {
            "type": "string",
            "x-go-name": "Name",
            "description": "The cluster name. If not supplied queries/results will not be constrained by cluster.",
            "name": "container",
            "in": "query"
          },
          {
            "type": "string",
            "x-go-name": "Name",
            "description": "The namespace name.",
            "name": "namespace",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "x-go-name": "Name",
            "description": "The workload name.",
            "name": "workload",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "default": "aggregateNode,deadNode,healthConfig,idleNode,istio,responseTime,securityPolicy,serviceEntry,sidecarsCheck,throughput",
            "x-go-name": "Name",
            "description": "Comma-separated list of Appenders to run. Available appenders: [aggregateNode, deadNode, healthConfig, idleNode, istio, responseTime, securityPolicy, serviceEntry, sidecarsCheck, throughput].",
            "name": "appenders",
            "in": "query"
          },
          {
            "type": "string",
            "x-go-name": "Name",
            "description": "Comma-separated list of desired node boxing. Available boxings: [app, cluster, namespace].",
            "name": "boxBy",
            "in": "query"
          },
          {
            "type": "string",
            "default": "10m",
            "x-go-name": "Name",
            "description": "Query time-range duration (Golang string duration).",
            "name": "duration",
            "in": "query"
          },
          {
            "type": "string",
            "default": "workload",
            "x-go-name": "Name",
            "description": "Graph type. Available graph types: [app, service, versionedApp, workload].",
            "name": "graphType",
            "in": "query"
          },
          {
            "type": "string",
            "default": "false",
            "x-go-name": "Name",
            "description": "Flag for including edges that have no request traffic for the time period.",
            "name": "includeIdleEdges",
            "in": "query"
          },
          {
            "type": "string",
            "default": "false",
            "x-go-name": "Name",
            "description": "Flag for injecting the requested service node between source and destination nodes.",
            "name": "injectServiceNodes",
            "in": "query"
          },
          {
            "type": "string",
            "default": "now",
            "x-go-name": "Name",
            "description": "Unix time (seconds) for query such that time range is [queryTime-duration..queryTime]. Default is now.",
            "name": "queryTime",
            "in": "query"
          },
          {
            "type": "string",
            "default": "requests",
            "x-go-name": "Name",
            "description": "How to calculate gRPC traffic rate. One of: none | received (i.e. response_messages) | requests | sent (i.e. request_messages) | total (i.e. sent+received).",
            "name": "rateGrpc",
            "in": "query"
          },
          {
            "type": "string",
            "default": "requests",
            "x-go-name": "Name",
            "description": "How to calculate HTTP traffic rate. One of: none | requests.",
            "name": "rateHttp",
            "in": "query"
          },
          {
            "type": "string",
            "default": "sent",
            "x-go-name": "Name",
            "description": "How to calculate TCP traffic rate. One of: none | received (i.e. received_bytes) | sent (i.e. sent_bytes) | total (i.e. sent+received).",
            "name": "rateTcp",
            "in": "query"
          },
          {
            "type": "string",
            "default": "95",
            "x-go-name": "Name",
            "description": "Used only with responseTime appender. One of: avg | 50 | 95 | 99.",
            "name": "responseTime",
            "in": "query"
          },
          {
            "type": "string",
            "default": "request",
            "x-go-name": "Name",
            "description": "Used only with throughput appender. One of: request | response.",
            "name": "throughput",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/responses/graphResponse"
          },
          "400": {
            "$ref": "#/responses/badRequestError"
          },
          "500": {
            "$ref": "#/responses/internalError"
          }
        }
      }
    },
    "/namespaces/{namespace}/workloads/{workload}/health": {
      "get": {
        "description": "Get health associated to the given workload",
        "produces": [
          "application/json"
        ],
        "schemes": [
          "http",
          "https"
        ],
        "tags": [
          "workloads"
        ],
        "operationId": "workloadHealth",
        "parameters": [
          {
            "type": "string",
            "x-go-name": "Namespace",
            "description": "The namespace scope",
            "name": "namespace",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "default": "10m",
            "x-go-name": "RateInterval",
            "description": "The rate interval used for fetching error rate",
            "name": "rateInterval",
            "in": "query"
          },
          {
            "type": "string",
            "format": "date-time",
            "description": "The time to use for the prometheus query",
            "name": "QueryTime",
            "in": "query"
          },
          {
            "type": "string",
            "x-go-name": "Workload",
            "description": "The target workload",
            "name": "workload",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "x-go-name": "WorkloadType",
            "name": "type",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/responses/workloadHealthResponse"
          },
          "404": {
            "$ref": "#/responses/notFoundError"
          },
          "500": {
            "$ref": "#/responses/internalError"
          }
        }
      }
    },
    "/namespaces/{namespace}/workloads/{workload}/metrics": {
      "get": {
        "description": "Endpoint to fetch metrics to be displayed, related to a single workload",
        "produces": [
          "application/json"
        ],
        "schemes": [
          "http",
          "https"
        ],
        "tags": [
          "workloads"
        ],
        "operationId": "workloadMetrics",
        "parameters": [
          {
            "type": "string",
            "x-go-name": "Name",
            "description": "The namespace name.",
            "name": "namespace",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "x-go-name": "Name",
            "description": "The workload name.",
            "name": "workload",
            "in": "path",
            "required": true
          },
          {
            "type": "boolean",
            "default": true,
            "x-go-name": "Name",
            "description": "Flag for fetching histogram average. Default is true.",
            "name": "avg",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "default": [],
            "x-go-name": "Name",
            "description": "List of labels to use for grouping metrics (via Prometheus 'by' clause).",
            "name": "byLabels[]",
            "in": "query"
          },
          {
            "type": "string",
            "default": "outbound",
            "x-go-name": "Name",
            "description": "Traffic direction: 'inbound' or 'outbound'.",
            "name": "direction",
            "in": "query"
          },
          {
            "type": "integer",
            "format": "int64",
            "default": 1800,
            "x-go-name": "Name",
            "description": "Duration of the query period, in seconds.",
            "name": "duration",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "default": [],
            "x-go-name": "Name",
            "description": "List of metrics to fetch. Fetch all metrics when empty. List entries are Kiali internal metric names.",
            "name": "filters[]",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "default": [],
            "x-go-name": "Name",
            "description": "List of quantiles to fetch. Fetch no quantiles when empty. Ex: [0.5, 0.95, 0.99].",
            "name": "quantiles[]",
            "in": "query"
          },
          {
            "type": "string",
            "default": "rate",
            "x-go-name": "Name",
            "description": "Prometheus function used to calculate rate: 'rate' or 'irate'.",
            "name": "rateFunc",
            "in": "query"
          },
          {
            "type": "string",
            "default": "1m",
            "x-go-name": "Name",
            "description": "Interval used for rate and histogram calculation.",
            "name": "rateInterval",
            "in": "query"
          },
          {
            "type": "string",
            "default": "all protocols",
            "x-go-name": "Name",
            "description": "Desired request protocol for the telemetry: For example, 'http' or 'grpc'.",
            "name": "requestProtocol",
            "in": "query"
          },
          {
            "type": "string",
            "default": "source",
            "x-go-name": "Name",
            "description": "Istio telemetry reporter: 'source' or 'destination'.",
            "name": "reporter",
            "in": "query"
          },
          {
            "type": "integer",
            "format": "int64",
            "default": 15,
            "x-go-name": "Name",
            "description": "Step between [graph] datapoints, in seconds.",
            "name": "step",
            "in": "query"
          },
          {
            "type": "string",
            "x-go-name": "Name",
            "description": "Filters metrics by the specified version.",
            "name": "version",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/responses/metricsResponse"
          },
          "400": {
            "$ref": "#/responses/badRequestError"
          },
          "503": {
            "$ref": "#/responses/serviceUnavailableError"
          }
        }
      }
    },
    "/namespaces/{namespace}/workloads/{workload}/spans": {
      "get": {
        "description": "Endpoint to get Jaeger spans for a given workload",
        "produces": [
          "application/json"
        ],
        "schemes": [
          "http",
          "https"
        ],
        "tags": [
          "traces"
        ],
        "operationId": "workloadSpans",
        "parameters": [
          {
            "type": "string",
            "x-go-name": "Name",
            "description": "The namespace name.",
            "name": "namespace",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "x-go-name": "Name",
            "description": "The workload name.",
            "name": "workload",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/responses/spansResponse"
          },
          "500": {
            "$ref": "#/responses/internalError"
          }
        }
      }
    },
    "/namespaces/{namespace}/workloads/{workload}/traces": {
      "get": {
        "description": "Endpoint to get the traces of a given workload",
        "produces": [
          "application/json"
        ],
        "schemes": [
          "http",
          "https"
        ],
        "tags": [
          "traces"
        ],
        "operationId": "workloadTraces",
        "parameters": [
          {
            "type": "string",
            "x-go-name": "Name",
            "description": "The namespace name.",
            "name": "namespace",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "x-go-name": "Name",
            "description": "The workload name.",
            "name": "workload",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/responses/traceDetailsResponse"
          },
          "404": {
            "$ref": "#/responses/notFoundError"
          },
          "500": {
            "$ref": "#/responses/internalError"
          }
        }
      }
    },
    "/stats/metrics": {
      "post": {
        "description": "Produces metrics statistics",
        "produces": [
          "application/json"
        ],
        "schemes": [
          "http",
          "https"
        ],
        "tags": [
          "stats"
        ],
        "operationId": "metricsStats",
        "parameters": [
          {
            "name": "Body",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/MetricsStatsQueries"
            }
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/responses/metricsStatsResponse"
          },
          "400": {
            "$ref": "#/responses/badRequestError"
          },
          "500": {
            "$ref": "#/responses/internalError"
          },
          "503": {
            "$ref": "#/responses/serviceUnavailableError"
          }
        }
      }
    },
    "/status": {
      "get": {
        "description": "Endpoint to get the status of Kiali",
        "produces": [
          "application/json"
        ],
        "schemes": [
          "http",
          "https"
        ],
        "tags": [
          "status"
        ],
        "operationId": "getStatus",
        "responses": {
          "200": {
            "$ref": "#/responses/statusInfo"
          },
          "500": {
            "$ref": "#/responses/internalError"
          }
        }
      }
    },
    "/traces/{traceID}": {
      "get": {
        "description": "Endpoint to get a specific trace from ID",
        "produces": [
          "application/json"
        ],
        "schemes": [
          "http",
          "https"
        ],
        "tags": [
          "traces"
        ],
        "operationId": "traceDetails",
        "parameters": [
          {
            "type": "string",
            "x-go-name": "Name",
            "description": "The trace ID.",
            "name": "traceID",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/responses/traceDetailsResponse"
          },
          "404": {
            "$ref": "#/responses/notFoundError"
          },
          "500": {
            "$ref": "#/responses/internalError"
          }
        }
      }
    }
  },
  "definitions": {
    "AdditionalItem": {
      "type": "object",
      "properties": {
        "icon": {
          "type": "string",
          "x-go-name": "Icon"
        },
        "title": {
          "type": "string",
          "x-go-name": "Title"
        },
        "value": {
          "type": "string",
          "x-go-name": "Value"
        }
      },
      "x-go-package": "github.com/kiali/kiali/models"
    },
    "Address": {
      "type": "object",
      "properties": {
        "ip": {
          "type": "string",
          "x-go-name": "IP"
        },
        "kind": {
          "type": "string",
          "x-go-name": "Kind"
        },
        "name": {
          "type": "string",
          "x-go-name": "Name"
        },
        "port": {
          "type": "integer",
          "format": "uint32",
          "x-go-name": "Port"
        }
      },
      "x-go-package": "github.com/kiali/kiali/models"
    },
    "Addresses": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/Address"
      },
      "x-go-package": "github.com/kiali/kiali/models"
    },
    "Aggregation": {
      "description": "Aggregation represents label's allowed aggregations, transformed from aggregation in MonitoringDashboard config resource",
      "type": "object",
      "properties": {
        "displayName": {
          "type": "string",
          "x-go-name": "DisplayName"
        },
        "label": {
          "type": "string",
          "x-go-name": "Label"
        },
        "singleSelection": {
          "type": "boolean",
          "x-go-name": "SingleSelection"
        }
      },
      "x-go-package": "github.com/kiali/kiali/config"
    },
    "AnalysisMessageBase": {
      "description": "AnalysisMessageBase describes some common information that is needed for all\nmessages. All information should be static with respect to the error code.",
      "type": "object",
      "properties": {
        "documentation_url": {
          "description": "A url pointing to the Istio documentation for this specific error type.\nShould be of the form\n`^http(s)?://(preliminary\\.)?istio.io/docs/reference/config/analysis/`\nRequired.",
          "type": "string",
          "x-go-name": "DocumentationUrl"
        },
        "level": {
          "$ref": "#/definitions/AnalysisMessageBase_Level"
        },
        "type": {
          "$ref": "#/definitions/AnalysisMessageBase_Type"
        }
      },
      "x-go-package": "istio.io/api/analysis/v1alpha1"
    },
    "AnalysisMessageBase_Level": {
      "description": "as well as leaving space in between to add more later",
      "type": "integer",
      "format": "int32",
      "title": "The values here are chosen so that more severe messages get sorted higher,",
      "x-go-package": "istio.io/api/analysis/v1alpha1"
    },
    "AnalysisMessageBase_Type": {
      "description": "A unique identifier for the type of message. Name is intended to be\nhuman-readable, code is intended to be machine readable. There should be a\none-to-one mapping between name and code. (i.e. do not re-use names or\ncodes between message types.)",
      "type": "object",
      "properties": {
        "code": {
          "description": "A 7 character code matching `^IST[0-9]{4}$` intended to uniquely identify\nthe message type. (e.g. \"IST0001\" is mapped to the \"InternalError\" message\ntype.) 0000-0100 are reserved. Required.",
          "type": "string",
          "x-go-name": "Code"
        },
        "name": {
          "description": "A human-readable name for the message type. e.g. \"InternalError\",\n\"PodMissingProxy\". This should be the same for all messages of the same type.\nRequired.",
          "type": "string",
          "x-go-name": "Name"
        }
      },
      "x-go-package": "istio.io/api/analysis/v1alpha1"
    },
    "App": {
      "type": "object",
      "required": [
        "namespace",
        "name",
        "workloads",
        "serviceNames"
      ],
      "properties": {
        "name": {
          "description": "Name of the application",
          "type": "string",
          "x-go-name": "Name",
          "example": "reviews"
        },
        "namespace": {
          "$ref": "#/definitions/namespace"
        },
        "runtimes": {
          "description": "Runtimes and associated dashboards",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Runtime"
          },
          "x-go-name": "Runtimes"
        },
        "serviceNames": {
          "description": "List of service names linked with an application",
          "type": "array",
          "items": {
            "type": "string"
          },
          "x-go-name": "ServiceNames"
        },
        "workloads": {
          "description": "Workloads for a given application",
          "type": "array",
          "items": {
            "$ref": "#/definitions/WorkloadItem"
          },
          "x-go-name": "Workloads"
        }
      },
      "x-go-package": "github.com/kiali/kiali/models"
    },
    "AppHealth": {
      "description": "AppHealth contains aggregated health from various sources, for a given app",
      "type": "object",
      "properties": {
        "requests": {
          "$ref": "#/definitions/RequestHealth"
        },
        "workloadStatuses": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/WorkloadStatus"
          },
          "x-go-name": "WorkloadStatuses"
        }
      },
      "x-go-package": "github.com/kiali/kiali/models"
    },
    "AppList": {
      "type": "object",
      "required": [
        "namespace",
        "applications"
      ],
      "properties": {
        "applications": {
          "description": "Applications for a given namespace",
          "type": "array",
          "items": {
            "$ref": "#/definitions/AppListItem"
          },
          "x-go-name": "Apps"
        },
        "namespace": {
          "$ref": "#/definitions/namespace"
        }
      },
      "x-go-package": "github.com/kiali/kiali/models"
    },
    "AppListItem": {
      "description": "AppListItem has the necessary information to display the console app list",
      "type": "object",
      "required": [
        "name",
        "istioSidecar"
      ],
      "properties": {
        "istioReferences": {
          "description": "Istio References",
          "type": "array",
          "items": {
            "$ref": "#/definitions/IstioValidationKey"
          },
          "x-go-name": "IstioReferences"
        },
        "istioSidecar": {
          "description": "Define if all Pods related to the Workloads of this app has an IstioSidecar deployed",
          "type": "boolean",
          "x-go-name": "IstioSidecar",
          "example": true
        },
        "labels": {
          "description": "Labels for App",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "x-go-name": "Labels"
        },
        "name": {
          "description": "Name of the application",
          "type": "string",
          "x-go-name": "Name",
          "example": "reviews"
        }
      },
      "x-go-package": "github.com/kiali/kiali/models"
    },
    "AuthorizationPolicy": {
      "description": "For example, the following authorization policy allows nothing and effectively denies all requests to workloads\nin namespace foo.\n\n```yaml\napiVersion: security.istio.io/v1beta1\nkind: AuthorizationPolicy\nmetadata:\nname: allow-nothing\nnamespace: foo\nspec:\n{}\n```\n\nThe following authorization policy allows all requests to workloads in namespace foo.\n\n```yaml\napiVersion: security.istio.io/v1beta1\nkind: AuthorizationPolicy\nmetadata:\nname: allow-all\nnamespace: foo\nspec:\nrules:\n{}\n```\n\n\u003c!-- crd generation tags\n+cue-gen:AuthorizationPolicy:groupName:security.istio.io\n+cue-gen:AuthorizationPolicy:version:v1beta1\n+cue-gen:AuthorizationPolicy:storageVersion\n+cue-gen:AuthorizationPolicy:annotations:helm.sh/resource-policy=keep\n+cue-gen:AuthorizationPolicy:labels:app=istio-pilot,chart=istio,istio=security,heritage=Tiller,release=istio\n+cue-gen:AuthorizationPolicy:subresource:status\n+cue-gen:AuthorizationPolicy:scope:Namespaced\n+cue-gen:AuthorizationPolicy:resource:categories=istio-io,security-istio-io,plural=authorizationpolicies\n+cue-gen:AuthorizationPolicy:preserveUnknownFields:false\n\u003e\n\n\u003c!-- go code generation tags\n+kubetype-gen\n+kubetype-gen:groupVersion=security.istio.io/v1beta1\n+genclient\n+k8s:deepcopy-gen=true\n\u003e",
      "type": "object",
      "title": "AuthorizationPolicy enables access control on workloads.",
      "properties": {
        "annotations": {
          "description": "Annotations is an unstructured key value map stored with a resource that may be\nset by external tools to store and retrieve arbitrary metadata. They are not\nqueryable and should be preserved when modifying objects.\nMore info: http://kubernetes.io/docs/user-guide/annotations\n+optional",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "x-go-name": "Annotations"
        },
        "apiVersion": {
          "description": "APIVersion defines the versioned schema of this representation of an object.\nServers should convert recognized schemas to the latest internal value, and\nmay reject unrecognized values.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources\n+optional",
          "type": "string",
          "x-go-name": "APIVersion"
        },
        "clusterName": {
          "description": "The name of the cluster which the object belongs to.\nThis is used to distinguish resources with same name and namespace in different clusters.\nThis field is not set anywhere right now and apiserver is going to ignore it if set in create or update request.\n+optional",
          "type": "string",
          "x-go-name": "ClusterName"
        },
        "creationTimestamp": {
          "$ref": "#/definitions/Time"
        },
        "deletionGracePeriodSeconds": {
          "description": "Number of seconds allowed for this object to gracefully terminate before\nit will be removed from the system. Only set when deletionTimestamp is also set.\nMay only be shortened.\nRead-only.\n+optional",
          "type": "integer",
          "format": "int64",
          "x-go-name": "DeletionGracePeriodSeconds"
        },
        "deletionTimestamp": {
          "$ref": "#/definitions/Time"
        },
        "finalizers": {
          "description": "Must be empty before the object is deleted from the registry. Each entry\nis an identifier for the responsible component that will remove the entry\nfrom the list. If the deletionTimestamp of the object is non-nil, entries\nin this list can only be removed.\nFinalizers may be processed and removed in any order.  Order is NOT enforced\nbecause it introduces significant risk of stuck finalizers.\nfinalizers is a shared field, any actor with permission can reorder it.\nIf the finalizer list is processed in order, then this can lead to a situation\nin which the component responsible for the first finalizer in the list is\nwaiting for a signal (field value, external system, or other) produced by a\ncomponent responsible for a finalizer later in the list, resulting in a deadlock.\nWithout enforced ordering finalizers are free to order amongst themselves and\nare not vulnerable to ordering changes in the list.\n+optional\n+patchStrategy=merge",
          "type": "array",
          "items": {
            "type": "string"
          },
          "x-go-name": "Finalizers"
        },
        "generateName": {
          "description": "GenerateName is an optional prefix, used by the server, to generate a unique\nname ONLY IF the Name field has not been provided.\nIf this field is used, the name returned to the client will be different\nthan the name passed. This value will also be combined with a unique suffix.\nThe provided value has the same validation rules as the Name field,\nand may be truncated by the length of the suffix required to make the value\nunique on the server.\n\nIf this field is specified and the generated name exists, the server will\nNOT return a 409 - instead, it will either return 201 Created or 500 with Reason\nServerTimeout indicating a unique name could not be found in the time allotted, and the client\nshould retry (optionally after the time indicated in the Retry-After header).\n\nApplied only if Name is not specified.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#idempotency\n+optional",
          "type": "string",
          "x-go-name": "GenerateName"
        },
        "generation": {
          "description": "A sequence number representing a specific generation of the desired state.\nPopulated by the system. Read-only.\n+optional",
          "type": "integer",
          "format": "int64",
          "x-go-name": "Generation"
        },
        "kind": {
          "description": "Kind is a string value representing the REST resource this object represents.\nServers may infer this from the endpoint the client submits requests to.\nCannot be updated.\nIn CamelCase.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\n+optional",
          "type": "string",
          "x-go-name": "Kind"
        },
        "labels": {
          "description": "Map of string keys and values that can be used to organize and categorize\n(scope and select) objects. May match selectors of replication controllers\nand services.\nMore info: http://kubernetes.io/docs/user-guide/labels\n+optional",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "x-go-name": "Labels"
        },
        "managedFields": {
          "description": "ManagedFields maps workflow-id and version to the set of fields\nthat are managed by that workflow. This is mostly for internal\nhousekeeping, and users typically shouldn't need to set or\nunderstand this field. A workflow can be the user's name, a\ncontroller's name, or the name of a specific apply path like\n\"ci-cd\". The set of fields is always in the version that the\nworkflow used when modifying the object.\n\n+optional",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ManagedFieldsEntry"
          },
          "x-go-name": "ManagedFields"
        },
        "name": {
          "description": "Name must be unique within a namespace. Is required when creating resources, although\nsome resources may allow a client to request the generation of an appropriate name\nautomatically. Name is primarily intended for creation idempotence and configuration\ndefinition.\nCannot be updated.\nMore info: http://kubernetes.io/docs/user-guide/identifiers#names\n+optional",
          "type": "string",
          "x-go-name": "Name"
        },
        "namespace": {
          "description": "Namespace defines the space within which each name must be unique. An empty namespace is\nequivalent to the \"default\" namespace, but \"default\" is the canonical representation.\nNot all objects are required to be scoped to a namespace - the value of this field for\nthose objects will be empty.\n\nMust be a DNS_LABEL.\nCannot be updated.\nMore info: http://kubernetes.io/docs/user-guide/namespaces\n+optional",
          "type": "string",
          "x-go-name": "Namespace"
        },
        "ownerReferences": {
          "description": "List of objects depended by this object. If ALL objects in the list have\nbeen deleted, this object will be garbage collected. If this object is managed by a controller,\nthen an entry in this list will point to this controller, with the controller field set to true.\nThere cannot be more than one managing controller.\n+optional\n+patchMergeKey=uid\n+patchStrategy=merge",
          "type": "array",
          "items": {
            "$ref": "#/definitions/OwnerReference"
          },
          "x-go-name": "OwnerReferences"
        },
        "resourceVersion": {
          "description": "An opaque value that represents the internal version of this object that can\nbe used by clients to determine when objects have changed. May be used for optimistic\nconcurrency, change detection, and the watch operation on a resource or set of resources.\nClients must treat these values as opaque and passed unmodified back to the server.\nThey may only be valid for a particular resource or set of resources.\n\nPopulated by the system.\nRead-only.\nValue must be treated as opaque by clients and .\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency\n+optional",
          "type": "string",
          "x-go-name": "ResourceVersion"
        },
        "selfLink": {
          "description": "SelfLink is a URL representing this object.\nPopulated by the system.\nRead-only.\n\nDEPRECATED\nKubernetes will stop propagating this field in 1.20 release and the field is planned\nto be removed in 1.21 release.\n+optional",
          "type": "string",
          "x-go-name": "SelfLink"
        },
        "spec": {
          "$ref": "#/definitions/AuthorizationPolicy"
        },
        "status": {
          "$ref": "#/definitions/IstioStatus"
        },
        "uid": {
          "$ref": "#/definitions/UID"
        }
      },
      "x-go-package": "istio.io/client-go/pkg/apis/security/v1beta1"
    },
    "Bootstrap": {
      "type": "object",
      "properties": {
        "bootstrap": {
          "type": "object",
          "additionalProperties": {
            "type": "object"
          },
          "x-go-name": "Bootstrap"
        }
      },
      "x-go-package": "github.com/kiali/kiali/models"
    },
    "CertInfo": {
      "description": "CertInfo contains the information for a given certificate",
      "type": "object",
      "properties": {
        "accessible": {
          "type": "boolean",
          "x-go-name": "Accessible"
        },
        "dnsNames": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "x-go-name": "DNSNames"
        },
        "error": {
          "type": "string",
          "x-go-name": "Error"
        },
        "issuer": {
          "type": "string",
          "x-go-name": "Issuer"
        },
        "notAfter": {
          "type": "string",
          "format": "date-time",
          "x-go-name": "NotAfter"
        },
        "notBefore": {
          "type": "string",
          "format": "date-time",
          "x-go-name": "NotBefore"
        },
        "secretName": {
          "type": "string",
          "x-go-name": "SecretName"
        },
        "secretNamespace": {
          "type": "string",
          "x-go-name": "SecretNamespace"
        }
      },
      "x-go-package": "github.com/kiali/kiali/models"
    },
    "Chart": {
      "description": "Chart is the model representing a custom chart, transformed from charts in MonitoringDashboard config resource",
      "type": "object",
      "properties": {
        "chartType": {
          "type": "string",
          "x-go-name": "ChartType"
        },
        "error": {
          "type": "string",
          "x-go-name": "Error"
        },
        "max": {
          "type": "integer",
          "format": "int64",
          "x-go-name": "Max"
        },
        "metrics": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Metric"
          },
          "x-go-name": "Metrics"
        },
        "min": {
          "type": "integer",
          "format": "int64",
          "x-go-name": "Min"
        },
        "name": {
          "type": "string",
          "x-go-name": "Name"
        },
        "spans": {
          "type": "integer",
          "format": "int64",
          "x-go-name": "Spans"
        },
        "startCollapsed": {
          "type": "boolean",
          "x-go-name": "StartCollapsed"
        },
        "unit": {
          "type": "string",
          "x-go-name": "Unit"
        },
        "xAxis": {
          "type": "string",
          "x-go-name": "XAxis"
        }
      },
      "x-go-package": "github.com/kiali/kiali/models"
    },
    "Cluster": {
      "type": "object",
      "properties": {
        "destination_rule": {
          "type": "string",
          "x-go-name": "DestinationRule"
        },
        "direction": {
          "type": "string",
          "x-go-name": "Direction"
        },
        "port": {
          "type": "integer",
          "format": "int64",
          "x-go-name": "Port"
        },
        "service_fqdn": {
          "$ref": "#/definitions/Host"
        },
        "subset": {
          "type": "string",
          "x-go-name": "Subset"
        },
        "type": {
          "type": "string",
          "x-go-name": "Type"
        }
      },
      "x-go-package": "github.com/kiali/kiali/models"
    },
    "Clusters": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/Cluster"
      },
      "x-go-package": "github.com/kiali/kiali/models"
    },
    "ComponentStatus": {
      "type": "object",
      "required": [
        "name",
        "status",
        "is_core"
      ],
      "properties": {
        "is_core": {
          "description": "When true, the component is necessary for Istio to function. Otherwise, it is an addon",
          "type": "boolean",
          "x-go-name": "IsCore",
          "example": true
        },
        "name": {
          "description": "The app label value of the Istio component",
          "type": "string",
          "x-go-name": "Name",
          "example": "istio-ingressgateway"
        },
        "status": {
          "description": "The status of a Istio component",
          "type": "string",
          "x-go-name": "Status",
          "example": "Not Found"
        }
      },
      "x-go-package": "github.com/kiali/kiali/business"
    },
    "Config": {
      "type": "object",
      "properties": {
        "duration": {
          "type": "integer",
          "format": "int64",
          "x-go-name": "Duration"
        },
        "elements": {
          "$ref": "#/definitions/Elements"
        },
        "graphType": {
          "type": "string",
          "x-go-name": "GraphType"
        },
        "timestamp": {
          "type": "integer",
          "format": "int64",
          "x-go-name": "Timestamp"
        }
      },
      "x-go-package": "github.com/kiali/kiali/graph/config/cytoscape"
    },
    "ConfigDump": {
      "description": "Root of ConfigDump",
      "type": "object",
      "properties": {
        "configs": {
          "type": "array",
          "items": {
            "type": "object"
          },
          "x-go-name": "Configs"
        }
      },
      "x-go-package": "github.com/kiali/kiali/kubernetes"
    },
    "ContainerInfo": {
      "description": "ContainerInfo holds container name and image",
      "type": "object",
      "properties": {
        "image": {
          "type": "string",
          "x-go-name": "Image"
        },
        "isProxy": {
          "type": "boolean",
          "x-go-name": "IsProxy"
        },
        "isReady": {
          "type": "boolean",
          "x-go-name": "IsReady"
        },
        "name": {
          "type": "string",
          "x-go-name": "Name"
        }
      },
      "x-go-package": "github.com/kiali/kiali/models"
    },
    "DashboardRef": {
      "description": "DashboardRef holds template name and title for a custom dashboard",
      "type": "object",
      "properties": {
        "template": {
          "type": "string",
          "x-go-name": "Template"
        },
        "title": {
          "type": "string",
          "x-go-name": "Title"
        }
      },
      "x-go-package": "github.com/kiali/kiali/models"
    },
    "Datapoint": {
      "type": "object",
      "properties": {
        "Timestamp": {
          "type": "integer",
          "format": "int64"
        },
        "Value": {
          "type": "number",
          "format": "double"
        }
      },
      "x-go-package": "github.com/kiali/kiali/models"
    },
    "DestinationRule": {
      "description": "\u003c!-- crd generation tags\n+cue-gen:DestinationRule:groupName:networking.istio.io\n+cue-gen:DestinationRule:version:v1alpha3\n+cue-gen:DestinationRule:storageVersion\n+cue-gen:DestinationRule:annotations:helm.sh/resource-policy=keep\n+cue-gen:DestinationRule:labels:app=istio-pilot,chart=istio,heritage=Tiller,release=istio\n+cue-gen:DestinationRule:subresource:status\n+cue-gen:DestinationRule:scope:Namespaced\n+cue-gen:DestinationRule:resource:categories=istio-io,networking-istio-io,shortNames=dr\n+cue-gen:DestinationRule:printerColumn:name=Host,type=string,JSONPath=.spec.host,description=\"The name of a service from the service registry\"\n+cue-gen:DestinationRule:printerColumn:name=Age,type=date,JSONPath=.metadata.creationTimestamp,description=\"CreationTimestamp is a timestamp\nrepresenting the server time when this object was created. It is not guaranteed to be set in happens-before order across separate operations.\nClients may not set this value. It is represented in RFC3339 form and is in UTC.\nPopulated by the system. Read-only. Null for lists. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#metadata\"\n+cue-gen:DestinationRule:preserveUnknownFields:false\n\u003e\n\n\u003c!-- go code generation tags\n+kubetype-gen\n+kubetype-gen:groupVersion=networking.istio.io/v1alpha3\n+genclient\n+k8s:deepcopy-gen=true\n\u003e\n\u003c!-- istio code generation tags\n+istio.io/sync-start\n\u003e",
      "type": "object",
      "title": "DestinationRule defines policies that apply to traffic intended for a service\nafter routing has occurred.",
      "properties": {
        "annotations": {
          "description": "Annotations is an unstructured key value map stored with a resource that may be\nset by external tools to store and retrieve arbitrary metadata. They are not\nqueryable and should be preserved when modifying objects.\nMore info: http://kubernetes.io/docs/user-guide/annotations\n+optional",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "x-go-name": "Annotations"
        },
        "apiVersion": {
          "description": "APIVersion defines the versioned schema of this representation of an object.\nServers should convert recognized schemas to the latest internal value, and\nmay reject unrecognized values.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources\n+optional",
          "type": "string",
          "x-go-name": "APIVersion"
        },
        "clusterName": {
          "description": "The name of the cluster which the object belongs to.\nThis is used to distinguish resources with same name and namespace in different clusters.\nThis field is not set anywhere right now and apiserver is going to ignore it if set in create or update request.\n+optional",
          "type": "string",
          "x-go-name": "ClusterName"
        },
        "creationTimestamp": {
          "$ref": "#/definitions/Time"
        },
        "deletionGracePeriodSeconds": {
          "description": "Number of seconds allowed for this object to gracefully terminate before\nit will be removed from the system. Only set when deletionTimestamp is also set.\nMay only be shortened.\nRead-only.\n+optional",
          "type": "integer",
          "format": "int64",
          "x-go-name": "DeletionGracePeriodSeconds"
        },
        "deletionTimestamp": {
          "$ref": "#/definitions/Time"
        },
        "finalizers": {
          "description": "Must be empty before the object is deleted from the registry. Each entry\nis an identifier for the responsible component that will remove the entry\nfrom the list. If the deletionTimestamp of the object is non-nil, entries\nin this list can only be removed.\nFinalizers may be processed and removed in any order.  Order is NOT enforced\nbecause it introduces significant risk of stuck finalizers.\nfinalizers is a shared field, any actor with permission can reorder it.\nIf the finalizer list is processed in order, then this can lead to a situation\nin which the component responsible for the first finalizer in the list is\nwaiting for a signal (field value, external system, or other) produced by a\ncomponent responsible for a finalizer later in the list, resulting in a deadlock.\nWithout enforced ordering finalizers are free to order amongst themselves and\nare not vulnerable to ordering changes in the list.\n+optional\n+patchStrategy=merge",
          "type": "array",
          "items": {
            "type": "string"
          },
          "x-go-name": "Finalizers"
        },
        "generateName": {
          "description": "GenerateName is an optional prefix, used by the server, to generate a unique\nname ONLY IF the Name field has not been provided.\nIf this field is used, the name returned to the client will be different\nthan the name passed. This value will also be combined with a unique suffix.\nThe provided value has the same validation rules as the Name field,\nand may be truncated by the length of the suffix required to make the value\nunique on the server.\n\nIf this field is specified and the generated name exists, the server will\nNOT return a 409 - instead, it will either return 201 Created or 500 with Reason\nServerTimeout indicating a unique name could not be found in the time allotted, and the client\nshould retry (optionally after the time indicated in the Retry-After header).\n\nApplied only if Name is not specified.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#idempotency\n+optional",
          "type": "string",
          "x-go-name": "GenerateName"
        },
        "generation": {
          "description": "A sequence number representing a specific generation of the desired state.\nPopulated by the system. Read-only.\n+optional",
          "type": "integer",
          "format": "int64",
          "x-go-name": "Generation"
        },
        "kind": {
          "description": "Kind is a string value representing the REST resource this object represents.\nServers may infer this from the endpoint the client submits requests to.\nCannot be updated.\nIn CamelCase.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\n+optional",
          "type": "string",
          "x-go-name": "Kind"
        },
        "labels": {
          "description": "Map of string keys and values that can be used to organize and categorize\n(scope and select) objects. May match selectors of replication controllers\nand services.\nMore info: http://kubernetes.io/docs/user-guide/labels\n+optional",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "x-go-name": "Labels"
        },
        "managedFields": {
          "description": "ManagedFields maps workflow-id and version to the set of fields\nthat are managed by that workflow. This is mostly for internal\nhousekeeping, and users typically shouldn't need to set or\nunderstand this field. A workflow can be the user's name, a\ncontroller's name, or the name of a specific apply path like\n\"ci-cd\". The set of fields is always in the version that the\nworkflow used when modifying the object.\n\n+optional",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ManagedFieldsEntry"
          },
          "x-go-name": "ManagedFields"
        },
        "name": {
          "description": "Name must be unique within a namespace. Is required when creating resources, although\nsome resources may allow a client to request the generation of an appropriate name\nautomatically. Name is primarily intended for creation idempotence and configuration\ndefinition.\nCannot be updated.\nMore info: http://kubernetes.io/docs/user-guide/identifiers#names\n+optional",
          "type": "string",
          "x-go-name": "Name"
        },
        "namespace": {
          "description": "Namespace defines the space within which each name must be unique. An empty namespace is\nequivalent to the \"default\" namespace, but \"default\" is the canonical representation.\nNot all objects are required to be scoped to a namespace - the value of this field for\nthose objects will be empty.\n\nMust be a DNS_LABEL.\nCannot be updated.\nMore info: http://kubernetes.io/docs/user-guide/namespaces\n+optional",
          "type": "string",
          "x-go-name": "Namespace"
        },
        "ownerReferences": {
          "description": "List of objects depended by this object. If ALL objects in the list have\nbeen deleted, this object will be garbage collected. If this object is managed by a controller,\nthen an entry in this list will point to this controller, with the controller field set to true.\nThere cannot be more than one managing controller.\n+optional\n+patchMergeKey=uid\n+patchStrategy=merge",
          "type": "array",
          "items": {
            "$ref": "#/definitions/OwnerReference"
          },
          "x-go-name": "OwnerReferences"
        },
        "resourceVersion": {
          "description": "An opaque value that represents the internal version of this object that can\nbe used by clients to determine when objects have changed. May be used for optimistic\nconcurrency, change detection, and the watch operation on a resource or set of resources.\nClients must treat these values as opaque and passed unmodified back to the server.\nThey may only be valid for a particular resource or set of resources.\n\nPopulated by the system.\nRead-only.\nValue must be treated as opaque by clients and .\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency\n+optional",
          "type": "string",
          "x-go-name": "ResourceVersion"
        },
        "selfLink": {
          "description": "SelfLink is a URL representing this object.\nPopulated by the system.\nRead-only.\n\nDEPRECATED\nKubernetes will stop propagating this field in 1.20 release and the field is planned\nto be removed in 1.21 release.\n+optional",
          "type": "string",
          "x-go-name": "SelfLink"
        },
        "spec": {
          "$ref": "#/definitions/DestinationRule"
        },
        "status": {
          "$ref": "#/definitions/IstioStatus"
        },
        "uid": {
          "$ref": "#/definitions/UID"
        }
      },
      "x-go-package": "istio.io/client-go/pkg/apis/networking/v1alpha3"
    },
    "EdgeData": {
      "type": "object",
      "properties": {
        "destPrincipal": {
          "description": "App Fields (not required by Cytoscape)",
          "type": "string",
          "x-go-name": "DestPrincipal"
        },
        "id": {
          "description": "Cytoscape Fields",
          "type": "string",
          "x-go-name": "ID"
        },
        "isMTLS": {
          "type": "string",
          "x-go-name": "IsMTLS"
        },
        "responseTime": {
          "type": "string",
          "x-go-name": "ResponseTime"
        },
        "source": {
          "type": "string",
          "x-go-name": "Source"
        },
        "sourcePrincipal": {
          "type": "string",
          "x-go-name": "SourcePrincipal"
        },
        "target": {
          "type": "string",
          "x-go-name": "Target"
        },
        "throughput": {
          "type": "string",
          "x-go-name": "Throughput"
        },
        "traffic": {
          "$ref": "#/definitions/ProtocolTraffic"
        }
      },
      "x-go-package": "github.com/kiali/kiali/graph/config/cytoscape"
    },
    "EdgeWrapper": {
      "type": "object",
      "properties": {
        "data": {
          "$ref": "#/definitions/EdgeData"
        }
      },
      "x-go-package": "github.com/kiali/kiali/graph/config/cytoscape"
    },
    "Elements": {
      "type": "object",
      "properties": {
        "edges": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/EdgeWrapper"
          },
          "x-go-name": "Edges"
        },
        "nodes": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/NodeWrapper"
          },
          "x-go-name": "Nodes"
        }
      },
      "x-go-package": "github.com/kiali/kiali/graph/config/cytoscape"
    },
    "Endpoint": {
      "type": "object",
      "properties": {
        "addresses": {
          "$ref": "#/definitions/Addresses"
        },
        "ports": {
          "$ref": "#/definitions/Ports"
        }
      },
      "x-go-package": "github.com/kiali/kiali/models"
    },
    "Endpoints": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/Endpoint"
      },
      "x-go-package": "github.com/kiali/kiali/models"
    },
    "EnvoyFilter": {
      "description": "\u003c!-- crd generation tags\n+cue-gen:EnvoyFilter:groupName:networking.istio.io\n+cue-gen:EnvoyFilter:version:v1alpha3\n+cue-gen:EnvoyFilter:storageVersion\n+cue-gen:EnvoyFilter:annotations:helm.sh/resource-policy=keep\n+cue-gen:EnvoyFilter:labels:app=istio-pilot,chart=istio,heritage=Tiller,release=istio\n+cue-gen:EnvoyFilter:subresource:status\n+cue-gen:EnvoyFilter:scope:Namespaced\n+cue-gen:EnvoyFilter:resource:categories=istio-io,networking-istio-io\n+cue-gen:EnvoyFilter:preserveUnknownFields:configPatches.[].patch.value\n\u003e\n\n\u003c!-- go code generation tags\n+kubetype-gen\n+kubetype-gen:groupVersion=networking.istio.io/v1alpha3\n+genclient\n+k8s:deepcopy-gen=true\n\u003e",
      "type": "object",
      "title": "EnvoyFilter provides a mechanism to customize the Envoy configuration\ngenerated by Istio Pilot.",
      "properties": {
        "annotations": {
          "description": "Annotations is an unstructured key value map stored with a resource that may be\nset by external tools to store and retrieve arbitrary metadata. They are not\nqueryable and should be preserved when modifying objects.\nMore info: http://kubernetes.io/docs/user-guide/annotations\n+optional",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "x-go-name": "Annotations"
        },
        "apiVersion": {
          "description": "APIVersion defines the versioned schema of this representation of an object.\nServers should convert recognized schemas to the latest internal value, and\nmay reject unrecognized values.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources\n+optional",
          "type": "string",
          "x-go-name": "APIVersion"
        },
        "clusterName": {
          "description": "The name of the cluster which the object belongs to.\nThis is used to distinguish resources with same name and namespace in different clusters.\nThis field is not set anywhere right now and apiserver is going to ignore it if set in create or update request.\n+optional",
          "type": "string",
          "x-go-name": "ClusterName"
        },
        "creationTimestamp": {
          "$ref": "#/definitions/Time"
        },
        "deletionGracePeriodSeconds": {
          "description": "Number of seconds allowed for this object to gracefully terminate before\nit will be removed from the system. Only set when deletionTimestamp is also set.\nMay only be shortened.\nRead-only.\n+optional",
          "type": "integer",
          "format": "int64",
          "x-go-name": "DeletionGracePeriodSeconds"
        },
        "deletionTimestamp": {
          "$ref": "#/definitions/Time"
        },
        "finalizers": {
          "description": "Must be empty before the object is deleted from the registry. Each entry\nis an identifier for the responsible component that will remove the entry\nfrom the list. If the deletionTimestamp of the object is non-nil, entries\nin this list can only be removed.\nFinalizers may be processed and removed in any order.  Order is NOT enforced\nbecause it introduces significant risk of stuck finalizers.\nfinalizers is a shared field, any actor with permission can reorder it.\nIf the finalizer list is processed in order, then this can lead to a situation\nin which the component responsible for the first finalizer in the list is\nwaiting for a signal (field value, external system, or other) produced by a\ncomponent responsible for a finalizer later in the list, resulting in a deadlock.\nWithout enforced ordering finalizers are free to order amongst themselves and\nare not vulnerable to ordering changes in the list.\n+optional\n+patchStrategy=merge",
          "type": "array",
          "items": {
            "type": "string"
          },
          "x-go-name": "Finalizers"
        },
        "generateName": {
          "description": "GenerateName is an optional prefix, used by the server, to generate a unique\nname ONLY IF the Name field has not been provided.\nIf this field is used, the name returned to the client will be different\nthan the name passed. This value will also be combined with a unique suffix.\nThe provided value has the same validation rules as the Name field,\nand may be truncated by the length of the suffix required to make the value\nunique on the server.\n\nIf this field is specified and the generated name exists, the server will\nNOT return a 409 - instead, it will either return 201 Created or 500 with Reason\nServerTimeout indicating a unique name could not be found in the time allotted, and the client\nshould retry (optionally after the time indicated in the Retry-After header).\n\nApplied only if Name is not specified.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#idempotency\n+optional",
          "type": "string",
          "x-go-name": "GenerateName"
        },
        "generation": {
          "description": "A sequence number representing a specific generation of the desired state.\nPopulated by the system. Read-only.\n+optional",
          "type": "integer",
          "format": "int64",
          "x-go-name": "Generation"
        },
        "kind": {
          "description": "Kind is a string value representing the REST resource this object represents.\nServers may infer this from the endpoint the client submits requests to.\nCannot be updated.\nIn CamelCase.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\n+optional",
          "type": "string",
          "x-go-name": "Kind"
        },
        "labels": {
          "description": "Map of string keys and values that can be used to organize and categorize\n(scope and select) objects. May match selectors of replication controllers\nand services.\nMore info: http://kubernetes.io/docs/user-guide/labels\n+optional",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "x-go-name": "Labels"
        },
        "managedFields": {
          "description": "ManagedFields maps workflow-id and version to the set of fields\nthat are managed by that workflow. This is mostly for internal\nhousekeeping, and users typically shouldn't need to set or\nunderstand this field. A workflow can be the user's name, a\ncontroller's name, or the name of a specific apply path like\n\"ci-cd\". The set of fields is always in the version that the\nworkflow used when modifying the object.\n\n+optional",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ManagedFieldsEntry"
          },
          "x-go-name": "ManagedFields"
        },
        "name": {
          "description": "Name must be unique within a namespace. Is required when creating resources, although\nsome resources may allow a client to request the generation of an appropriate name\nautomatically. Name is primarily intended for creation idempotence and configuration\ndefinition.\nCannot be updated.\nMore info: http://kubernetes.io/docs/user-guide/identifiers#names\n+optional",
          "type": "string",
          "x-go-name": "Name"
        },
        "namespace": {
          "description": "Namespace defines the space within which each name must be unique. An empty namespace is\nequivalent to the \"default\" namespace, but \"default\" is the canonical representation.\nNot all objects are required to be scoped to a namespace - the value of this field for\nthose objects will be empty.\n\nMust be a DNS_LABEL.\nCannot be updated.\nMore info: http://kubernetes.io/docs/user-guide/namespaces\n+optional",
          "type": "string",
          "x-go-name": "Namespace"
        },
        "ownerReferences": {
          "description": "List of objects depended by this object. If ALL objects in the list have\nbeen deleted, this object will be garbage collected. If this object is managed by a controller,\nthen an entry in this list will point to this controller, with the controller field set to true.\nThere cannot be more than one managing controller.\n+optional\n+patchMergeKey=uid\n+patchStrategy=merge",
          "type": "array",
          "items": {
            "$ref": "#/definitions/OwnerReference"
          },
          "x-go-name": "OwnerReferences"
        },
        "resourceVersion": {
          "description": "An opaque value that represents the internal version of this object that can\nbe used by clients to determine when objects have changed. May be used for optimistic\nconcurrency, change detection, and the watch operation on a resource or set of resources.\nClients must treat these values as opaque and passed unmodified back to the server.\nThey may only be valid for a particular resource or set of resources.\n\nPopulated by the system.\nRead-only.\nValue must be treated as opaque by clients and .\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency\n+optional",
          "type": "string",
          "x-go-name": "ResourceVersion"
        },
        "selfLink": {
          "description": "SelfLink is a URL representing this object.\nPopulated by the system.\nRead-only.\n\nDEPRECATED\nKubernetes will stop propagating this field in 1.20 release and the field is planned\nto be removed in 1.21 release.\n+optional",
          "type": "string",
          "x-go-name": "SelfLink"
        },
        "spec": {
          "$ref": "#/definitions/EnvoyFilter"
        },
        "status": {
          "$ref": "#/definitions/IstioStatus"
        },
        "uid": {
          "$ref": "#/definitions/UID"
        }
      },
      "x-go-package": "istio.io/client-go/pkg/apis/networking/v1alpha3"
    },
    "EnvoyProxyDump": {
      "type": "object",
      "properties": {
        "bootstrap": {
          "$ref": "#/definitions/Bootstrap"
        },
        "clusters": {
          "$ref": "#/definitions/Clusters"
        },
        "config_dump": {
          "$ref": "#/definitions/ConfigDump"
        },
        "listeners": {
          "$ref": "#/definitions/Listeners"
        },
        "routes": {
          "$ref": "#/definitions/Routes"
        }
      },
      "x-go-package": "github.com/kiali/kiali/models"
    },
    "ExternalLink": {
      "description": "ExternalLink provides links to external dashboards (e.g. to Grafana)",
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "x-go-name": "Name"
        },
        "url": {
          "type": "string",
          "x-go-name": "URL"
        },
        "variables": {
          "$ref": "#/definitions/MonitoringDashboardExternalLinkVariables"
        }
      },
      "x-go-package": "github.com/kiali/kiali/models"
    },
    "FieldsV1": {
      "description": "Each key is either a '.' representing the field itself, and will always map to an empty set,\nor a string representing a sub-field or item. The string will follow one of these four formats:\n'f:\u003cname\u003e', where \u003cname\u003e is the name of a field in a struct, or key in a map\n'v:\u003cvalue\u003e', where \u003cvalue\u003e is the exact json formatted value of a list item\n'i:\u003cindex\u003e', where \u003cindex\u003e is position of a item in a list\n'k:\u003ckeys\u003e', where \u003ckeys\u003e is a map of  a list item's key fields to their unique values\nIf a key maps to an empty Fields value, the field that key represents is part of the set.\n\nThe exact format is defined in sigs.k8s.io/structured-merge-diff\n+protobuf.options.(gogoproto.goproto_stringer)=false",
      "type": "object",
      "title": "FieldsV1 stores a set of fields in a data structure like a Trie, in JSON format.",
      "x-go-package": "k8s.io/apimachinery/pkg/apis/meta/v1"
    },
    "GWInfo": {
      "description": "GWInfo contains the resolved gateway configuration if the node represents an Istio gateway",
      "type": "object",
      "properties": {
        "egressInfo": {
          "$ref": "#/definitions/GWInfoIngress"
        },
        "ingressInfo": {
          "$ref": "#/definitions/GWInfoIngress"
        }
      },
      "x-go-package": "github.com/kiali/kiali/graph/config/cytoscape"
    },
    "GWInfoIngress": {
      "description": "GWInfoIngress contains the resolved gateway configuration if the node represents an Istio ingress gateway",
      "type": "object",
      "properties": {
        "hostnames": {
          "description": "Hostnames is the list of hosts being served by the associated Istio gateways.",
          "type": "array",
          "items": {
            "type": "string"
          },
          "x-go-name": "Hostnames"
        }
      },
      "x-go-package": "github.com/kiali/kiali/graph/config/cytoscape"
    },
    "Gateway": {
      "description": "\u003c!-- crd generation tags\n+cue-gen:Gateway:groupName:networking.istio.io\n+cue-gen:Gateway:version:v1alpha3\n+cue-gen:Gateway:storageVersion\n+cue-gen:Gateway:annotations:helm.sh/resource-policy=keep\n+cue-gen:Gateway:labels:app=istio-pilot,chart=istio,heritage=Tiller,release=istio\n+cue-gen:Gateway:subresource:status\n+cue-gen:Gateway:scope:Namespaced\n+cue-gen:Gateway:resource:categories=istio-io,networking-istio-io,shortNames=gw\n+cue-gen:Gateway:preserveUnknownFields:false\n\u003e\n\n\u003c!-- go code generation tags\n+kubetype-gen\n+kubetype-gen:groupVersion=networking.istio.io/v1alpha3\n+genclient\n+k8s:deepcopy-gen=true\n\u003e\n\u003c!-- istio code generation tags\n+istio.io/sync-start\n\u003e",
      "type": "object",
      "title": "Gateway describes a load balancer operating at the edge of the mesh\nreceiving incoming or outgoing HTTP/TCP connections.",
      "properties": {
        "annotations": {
          "description": "Annotations is an unstructured key value map stored with a resource that may be\nset by external tools to store and retrieve arbitrary metadata. They are not\nqueryable and should be preserved when modifying objects.\nMore info: http://kubernetes.io/docs/user-guide/annotations\n+optional",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "x-go-name": "Annotations"
        },
        "apiVersion": {
          "description": "APIVersion defines the versioned schema of this representation of an object.\nServers should convert recognized schemas to the latest internal value, and\nmay reject unrecognized values.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources\n+optional",
          "type": "string",
          "x-go-name": "APIVersion"
        },
        "clusterName": {
          "description": "The name of the cluster which the object belongs to.\nThis is used to distinguish resources with same name and namespace in different clusters.\nThis field is not set anywhere right now and apiserver is going to ignore it if set in create or update request.\n+optional",
          "type": "string",
          "x-go-name": "ClusterName"
        },
        "creationTimestamp": {
          "$ref": "#/definitions/Time"
        },
        "deletionGracePeriodSeconds": {
          "description": "Number of seconds allowed for this object to gracefully terminate before\nit will be removed from the system. Only set when deletionTimestamp is also set.\nMay only be shortened.\nRead-only.\n+optional",
          "type": "integer",
          "format": "int64",
          "x-go-name": "DeletionGracePeriodSeconds"
        },
        "deletionTimestamp": {
          "$ref": "#/definitions/Time"
        },
        "finalizers": {
          "description": "Must be empty before the object is deleted from the registry. Each entry\nis an identifier for the responsible component that will remove the entry\nfrom the list. If the deletionTimestamp of the object is non-nil, entries\nin this list can only be removed.\nFinalizers may be processed and removed in any order.  Order is NOT enforced\nbecause it introduces significant risk of stuck finalizers.\nfinalizers is a shared field, any actor with permission can reorder it.\nIf the finalizer list is processed in order, then this can lead to a situation\nin which the component responsible for the first finalizer in the list is\nwaiting for a signal (field value, external system, or other) produced by a\ncomponent responsible for a finalizer later in the list, resulting in a deadlock.\nWithout enforced ordering finalizers are free to order amongst themselves and\nare not vulnerable to ordering changes in the list.\n+optional\n+patchStrategy=merge",
          "type": "array",
          "items": {
            "type": "string"
          },
          "x-go-name": "Finalizers"
        },
        "generateName": {
          "description": "GenerateName is an optional prefix, used by the server, to generate a unique\nname ONLY IF the Name field has not been provided.\nIf this field is used, the name returned to the client will be different\nthan the name passed. This value will also be combined with a unique suffix.\nThe provided value has the same validation rules as the Name field,\nand may be truncated by the length of the suffix required to make the value\nunique on the server.\n\nIf this field is specified and the generated name exists, the server will\nNOT return a 409 - instead, it will either return 201 Created or 500 with Reason\nServerTimeout indicating a unique name could not be found in the time allotted, and the client\nshould retry (optionally after the time indicated in the Retry-After header).\n\nApplied only if Name is not specified.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#idempotency\n+optional",
          "type": "string",
          "x-go-name": "GenerateName"
        },
        "generation": {
          "description": "A sequence number representing a specific generation of the desired state.\nPopulated by the system. Read-only.\n+optional",
          "type": "integer",
          "format": "int64",
          "x-go-name": "Generation"
        },
        "kind": {
          "description": "Kind is a string value representing the REST resource this object represents.\nServers may infer this from the endpoint the client submits requests to.\nCannot be updated.\nIn CamelCase.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\n+optional",
          "type": "string",
          "x-go-name": "Kind"
        },
        "labels": {
          "description": "Map of string keys and values that can be used to organize and categorize\n(scope and select) objects. May match selectors of replication controllers\nand services.\nMore info: http://kubernetes.io/docs/user-guide/labels\n+optional",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "x-go-name": "Labels"
        },
        "managedFields": {
          "description": "ManagedFields maps workflow-id and version to the set of fields\nthat are managed by that workflow. This is mostly for internal\nhousekeeping, and users typically shouldn't need to set or\nunderstand this field. A workflow can be the user's name, a\ncontroller's name, or the name of a specific apply path like\n\"ci-cd\". The set of fields is always in the version that the\nworkflow used when modifying the object.\n\n+optional",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ManagedFieldsEntry"
          },
          "x-go-name": "ManagedFields"
        },
        "name": {
          "description": "Name must be unique within a namespace. Is required when creating resources, although\nsome resources may allow a client to request the generation of an appropriate name\nautomatically. Name is primarily intended for creation idempotence and configuration\ndefinition.\nCannot be updated.\nMore info: http://kubernetes.io/docs/user-guide/identifiers#names\n+optional",
          "type": "string",
          "x-go-name": "Name"
        },
        "namespace": {
          "description": "Namespace defines the space within which each name must be unique. An empty namespace is\nequivalent to the \"default\" namespace, but \"default\" is the canonical representation.\nNot all objects are required to be scoped to a namespace - the value of this field for\nthose objects will be empty.\n\nMust be a DNS_LABEL.\nCannot be updated.\nMore info: http://kubernetes.io/docs/user-guide/namespaces\n+optional",
          "type": "string",
          "x-go-name": "Namespace"
        },
        "ownerReferences": {
          "description": "List of objects depended by this object. If ALL objects in the list have\nbeen deleted, this object will be garbage collected. If this object is managed by a controller,\nthen an entry in this list will point to this controller, with the controller field set to true.\nThere cannot be more than one managing controller.\n+optional\n+patchMergeKey=uid\n+patchStrategy=merge",
          "type": "array",
          "items": {
            "$ref": "#/definitions/OwnerReference"
          },
          "x-go-name": "OwnerReferences"
        },
        "resourceVersion": {
          "description": "An opaque value that represents the internal version of this object that can\nbe used by clients to determine when objects have changed. May be used for optimistic\nconcurrency, change detection, and the watch operation on a resource or set of resources.\nClients must treat these values as opaque and passed unmodified back to the server.\nThey may only be valid for a particular resource or set of resources.\n\nPopulated by the system.\nRead-only.\nValue must be treated as opaque by clients and .\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency\n+optional",
          "type": "string",
          "x-go-name": "ResourceVersion"
        },
        "selfLink": {
          "description": "SelfLink is a URL representing this object.\nPopulated by the system.\nRead-only.\n\nDEPRECATED\nKubernetes will stop propagating this field in 1.20 release and the field is planned\nto be removed in 1.21 release.\n+optional",
          "type": "string",
          "x-go-name": "SelfLink"
        },
        "spec": {
          "$ref": "#/definitions/Gateway"
        },
        "status": {
          "$ref": "#/definitions/IstioStatus"
        },
        "uid": {
          "$ref": "#/definitions/UID"
        }
      },
      "x-go-package": "istio.io/client-go/pkg/apis/networking/v1alpha3"
    },
    "GrafanaInfo": {
      "description": "GrafanaInfo provides information to access Grafana dashboards",
      "type": "object",
      "properties": {
        "externalLinks": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ExternalLink"
          },
          "x-go-name": "ExternalLinks"
        }
      },
      "x-go-package": "github.com/kiali/kiali/models"
    },
    "HealthConfig": {
      "description": "HealthConfig maps annotations information for health",
      "type": "object",
      "additionalProperties": {
        "type": "string"
      },
      "x-go-package": "github.com/kiali/kiali/graph/config/cytoscape"
    },
    "Host": {
      "description": "Host represents the FQDN format for Istio hostnames",
      "type": "object",
      "properties": {
        "cluster": {
          "type": "string",
          "x-go-name": "Cluster"
        },
        "complete_input": {
          "description": "CompleteInput is true when Service, Namespace and Cluster fields are present.\nIt is true for simple service names and FQDN services.\nIt is false for service.namespace format and service entries.",
          "type": "boolean",
          "x-go-name": "CompleteInput"
        },
        "namespace": {
          "type": "string",
          "x-go-name": "Namespace"
        },
        "service": {
          "type": "string",
          "x-go-name": "Service"
        }
      },
      "x-go-package": "github.com/kiali/kiali/kubernetes"
    },
    "IstioCheck": {
      "type": "object",
      "title": "IstioCheck represents an individual check.",
      "required": [
        "code",
        "message",
        "severity"
      ],
      "properties": {
        "code": {
          "description": "The check code used to identify a check",
          "type": "string",
          "x-go-name": "Code",
          "example": "KIA0001"
        },
        "message": {
          "description": "Description of the check",
          "type": "string",
          "x-go-name": "Message",
          "example": "Weight sum should be 100"
        },
        "path": {
          "description": "String that describes where in the yaml file is the check located",
          "type": "string",
          "x-go-name": "Path",
          "example": "spec/http[0]/route"
        },
        "severity": {
          "$ref": "#/definitions/SeverityLevel"
        }
      },
      "x-go-package": "github.com/kiali/kiali/models"
    },
    "IstioComponentStatus": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/ComponentStatus"
      },
      "x-go-package": "github.com/kiali/kiali/business"
    },
    "IstioCondition": {
      "type": "object",
      "properties": {
        "last_probe_time": {
          "$ref": "#/definitions/Timestamp"
        },
        "last_transition_time": {
          "$ref": "#/definitions/Timestamp"
        },
        "message": {
          "description": "Human-readable message indicating details about last transition.\n+optional",
          "type": "string",
          "x-go-name": "Message"
        },
        "reason": {
          "description": "Unique, one-word, CamelCase reason for the condition's last transition.\n+optional",
          "type": "string",
          "x-go-name": "Reason"
        },
        "status": {
          "description": "Status is the status of the condition.\nCan be True, False, Unknown.",
          "type": "string",
          "x-go-name": "Status"
        },
        "type": {
          "description": "Type is the type of the condition.",
          "type": "string",
          "x-go-name": "Type"
        }
      },
      "x-go-package": "istio.io/api/meta/v1alpha1"
    },
    "IstioConfigDetails": {
      "type": "object",
      "properties": {
        "authorizationPolicy": {
          "$ref": "#/definitions/AuthorizationPolicy"
        },
        "destinationRule": {
          "$ref": "#/definitions/DestinationRule"
        },
        "envoyFilter": {
          "$ref": "#/definitions/EnvoyFilter"
        },
        "gateway": {
          "$ref": "#/definitions/Gateway"
        },
        "namespace": {
          "$ref": "#/definitions/namespace"
        },
        "objectType": {
          "type": "string",
          "x-go-name": "ObjectType"
        },
        "peerAuthentication": {
          "$ref": "#/definitions/PeerAuthentication"
        },
        "permissions": {
          "$ref": "#/definitions/ResourcePermissions"
        },
        "references": {
          "$ref": "#/definitions/IstioReferences"
        },
        "requestAuthentication": {
          "$ref": "#/definitions/RequestAuthentication"
        },
        "serviceEntry": {
          "$ref": "#/definitions/ServiceEntry"
        },
        "sidecar": {
          "$ref": "#/definitions/Sidecar"
        },
        "validation": {
          "$ref": "#/definitions/IstioValidation"
        },
        "virtualService": {
          "$ref": "#/definitions/VirtualService"
        },
        "workloadEntry": {
          "$ref": "#/definitions/WorkloadEntry"
        },
        "workloadGroup": {
          "$ref": "#/definitions/WorkloadGroup"
        }
      },
      "x-go-package": "github.com/kiali/kiali/models"
    },
    "IstioConfigList": {
      "description": "This type is used for returning a response of IstioConfigList",
      "type": "object",
      "title": "IstioConfigList istioConfigList",
      "required": [
        "namespace"
      ],
      "properties": {
        "authorizationPolicies": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/AuthorizationPolicy"
          },
          "x-go-name": "AuthorizationPolicies"
        },
        "destinationRules": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/DestinationRule"
          },
          "x-go-name": "DestinationRules"
        },
        "envoyFilters": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/EnvoyFilter"
          },
          "x-go-name": "EnvoyFilters"
        },
        "gateways": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Gateway"
          },
          "x-go-name": "Gateways"
        },
        "namespace": {
          "$ref": "#/definitions/namespace"
        },
        "peerAuthentications": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/PeerAuthentication"
          },
          "x-go-name": "PeerAuthentications"
        },
        "requestAuthentications": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/RequestAuthentication"
          },
          "x-go-name": "RequestAuthentications"
        },
        "serviceEntries": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ServiceEntry"
          },
          "x-go-name": "ServiceEntries"
        },
        "sidecars": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Sidecar"
          },
          "x-go-name": "Sidecars"
        },
        "validations": {
          "$ref": "#/definitions/IstioValidations"
        },
        "virtualServices": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/VirtualService"
          },
          "x-go-name": "VirtualServices"
        },
        "workloadEntries": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/WorkloadEntry"
          },
          "x-go-name": "WorkloadEntries"
        },
        "workloadGroups": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/WorkloadGroup"
          },
          "x-go-name": "WorkloadGroups"
        }
      },
      "x-go-package": "github.com/kiali/kiali/models"
    },
    "IstioConfigPermissions": {
      "description": "IstioConfigPermissions holds a map of ResourcesPermissions per namespace",
      "type": "object",
      "additionalProperties": {
        "$ref": "#/definitions/ResourcesPermissions"
      },
      "x-go-package": "github.com/kiali/kiali/models"
    },
    "IstioEnvironment": {
      "description": "IstioEnvironment describes the Istio implementation environment",
      "type": "object",
      "required": [
        "isMaistra"
      ],
      "properties": {
        "isMaistra": {
          "description": "If true, the Istio implementation is a variant of Maistra.",
          "type": "boolean",
          "x-go-name": "IsMaistra"
        }
      },
      "x-go-package": "github.com/kiali/kiali/status"
    },
    "IstioReference": {
      "type": "object",
      "title": "IstioReference is the key value composed of an Istio ObjectType and Name.",
      "properties": {
        "name": {
          "type": "string",
          "x-go-name": "Name"
        },
        "namespace": {
          "type": "string",
          "x-go-name": "Namespace"
        },
        "objectType": {
          "type": "string",
          "x-go-name": "ObjectType"
        }
      },
      "x-go-package": "github.com/kiali/kiali/models"
    },
    "IstioReferences": {
      "description": "IstioReferences represents a sets of different references",
      "type": "object",
      "properties": {
        "objectReferences": {
          "description": "Related Istio objects",
          "type": "array",
          "items": {
            "$ref": "#/definitions/IstioReference"
          },
          "x-go-name": "ObjectReferences"
        },
        "serviceReferences": {
          "description": "Related Istio objects",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ServiceReference"
          },
          "x-go-name": "ServiceReferences"
        },
        "workloadReferences": {
          "description": "Related Istio objects",
          "type": "array",
          "items": {
            "$ref": "#/definitions/WorkloadReference"
          },
          "x-go-name": "WorkloadReferences"
        }
      },
      "x-go-package": "github.com/kiali/kiali/models"
    },
    "IstioStatus": {
      "type": "object",
      "properties": {
        "conditions": {
          "description": "Current service state of pod.\nMore info: https://istio.io/docs/reference/config/config-status/\n+optional\n+patchMergeKey=type\n+patchStrategy=merge",
          "type": "array",
          "items": {
            "$ref": "#/definitions/IstioCondition"
          },
          "x-go-name": "Conditions"
        },
        "observed_generation": {
          "description": "Resource Generation to which the Reconciled Condition refers.\nWhen this value is not equal to the object's metadata generation, reconciled condition  calculation for the current\ngeneration is still in progress.  See https://istio.io/latest/docs/reference/config/config-status/ for more info.\n+optional",
          "type": "integer",
          "format": "int64",
          "x-go-name": "ObservedGeneration"
        },
        "validation_messages": {
          "description": "Includes any errors or warnings detected by Istio's analyzers.\n+optional\n+patchMergeKey=type\n+patchStrategy=merge",
          "type": "array",
          "items": {
            "$ref": "#/definitions/AnalysisMessageBase"
          },
          "x-go-name": "ValidationMessages"
        }
      },
      "x-go-package": "istio.io/api/meta/v1alpha1"
    },
    "IstioValidation": {
      "type": "object",
      "title": "IstioValidation represents a list of checks associated to an Istio object.",
      "required": [
        "name",
        "objectType",
        "valid"
      ],
      "properties": {
        "checks": {
          "description": "Array of checks. It might be empty.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/IstioCheck"
          },
          "x-go-name": "Checks"
        },
        "name": {
          "description": "Name of the object itself",
          "type": "string",
          "x-go-name": "Name",
          "example": "reviews"
        },
        "objectType": {
          "description": "Type of the object",
          "type": "string",
          "x-go-name": "ObjectType",
          "example": "virtualservice"
        },
        "references": {
          "description": "Related objects (only validation errors)",
          "type": "array",
          "items": {
            "$ref": "#/definitions/IstioValidationKey"
          },
          "x-go-name": "References"
        },
        "valid": {
          "description": "Represents validity of the object: in case of warning, validity remains as true",
          "type": "boolean",
          "x-go-name": "Valid",
          "example": false
        }
      },
      "x-go-package": "github.com/kiali/kiali/models"
    },
    "IstioValidationKey": {
      "type": "object",
      "title": "IstioValidationKey is the key value composed of an Istio ObjectType and Name.",
      "properties": {
        "name": {
          "type": "string",
          "x-go-name": "Name"
        },
        "namespace": {
          "type": "string",
          "x-go-name": "Namespace"
        },
        "objectType": {
          "type": "string",
          "x-go-name": "ObjectType"
        }
      },
      "x-go-package": "github.com/kiali/kiali/models"
    },
    "IstioValidationSummary": {
      "type": "object",
      "title": "IstioValidationSummary represents the number of errors/warnings of a set of Istio Validations.",
      "required": [
        "errors",
        "objectCount",
        "warnings"
      ],
      "properties": {
        "errors": {
          "description": "Number of validations with error severity",
          "type": "integer",
          "format": "int64",
          "x-go-name": "Errors",
          "example": 2
        },
        "objectCount": {
          "description": "Number of Istio Objects analyzed",
          "type": "integer",
          "format": "int64",
          "x-go-name": "ObjectCount",
          "example": 6
        },
        "warnings": {
          "description": "Number of validations with warning severity",
          "type": "integer",
          "format": "int64",
          "x-go-name": "Warnings",
          "example": 4
        }
      },
      "x-go-package": "github.com/kiali/kiali/models"
    },
    "IstioValidations": {
      "title": "IstioValidations represents a set of IstioValidation grouped by IstioValidationKey.",
      "x-go-package": "github.com/kiali/kiali/models"
    },
    "JaegerInfo": {
      "type": "object",
      "properties": {
        "enabled": {
          "type": "boolean",
          "x-go-name": "Enabled"
        },
        "integration": {
          "type": "boolean",
          "x-go-name": "Integration"
        },
        "namespaceSelector": {
          "type": "boolean",
          "x-go-name": "NamespaceSelector"
        },
        "url": {
          "type": "string",
          "x-go-name": "URL"
        },
        "whiteListIstioSystem": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "x-go-name": "WhiteListIstioSystem"
        }
      },
      "x-go-package": "github.com/kiali/kiali/models"
    },
    "JaegerSpan": {
      "type": "object",
      "properties": {
        "duration": {
          "type": "integer",
          "format": "uint64",
          "x-go-name": "Duration"
        },
        "flags": {
          "type": "integer",
          "format": "uint32",
          "x-go-name": "Flags"
        },
        "logs": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Log"
          },
          "x-go-name": "Logs"
        },
        "operationName": {
          "type": "string",
          "x-go-name": "OperationName"
        },
        "parentSpanID": {
          "$ref": "#/definitions/SpanID"
        },
        "process": {
          "$ref": "#/definitions/Process"
        },
        "processID": {
          "$ref": "#/definitions/ProcessID"
        },
        "references": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Reference"
          },
          "x-go-name": "References"
        },
        "spanID": {
          "$ref": "#/definitions/SpanID"
        },
        "startTime": {
          "type": "integer",
          "format": "uint64",
          "x-go-name": "StartTime"
        },
        "tags": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/KeyValue"
          },
          "x-go-name": "Tags"
        },
        "traceID": {
          "$ref": "#/definitions/TraceID"
        },
        "traceSize": {
          "type": "integer",
          "format": "int64",
          "x-go-name": "TraceSize"
        },
        "warnings": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "x-go-name": "Warnings"
        }
      },
      "x-go-package": "github.com/kiali/kiali/jaeger"
    },
    "KeyValue": {
      "type": "object",
      "title": "KeyValue is a key-value pair with typed value.",
      "properties": {
        "key": {
          "type": "string",
          "x-go-name": "Key"
        },
        "type": {
          "$ref": "#/definitions/ValueType"
        },
        "value": {
          "type": "object",
          "x-go-name": "Value"
        }
      },
      "x-go-package": "github.com/kiali/kiali/jaeger/model/json"
    },
    "LabelsMetadata": {
      "type": "object",
      "additionalProperties": {
        "type": "string"
      },
      "x-go-package": "github.com/kiali/kiali/graph"
    },
    "Listener": {
      "type": "object",
      "properties": {
        "address": {
          "type": "string",
          "x-go-name": "Address"
        },
        "destination": {
          "type": "string",
          "x-go-name": "Destination"
        },
        "match": {
          "type": "string",
          "x-go-name": "Match"
        },
        "port": {
          "type": "number",
          "format": "double",
          "x-go-name": "Port"
        }
      },
      "x-go-package": "github.com/kiali/kiali/models"
    },
    "Listeners": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/Listener"
      },
      "x-go-package": "github.com/kiali/kiali/models"
    },
    "Log": {
      "description": "Log is a log emitted in a span",
      "type": "object",
      "properties": {
        "fields": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/KeyValue"
          },
          "x-go-name": "Fields"
        },
        "timestamp": {
          "type": "integer",
          "format": "uint64",
          "x-go-name": "Timestamp"
        }
      },
      "x-go-package": "github.com/kiali/kiali/jaeger/model/json"
    },
    "MTLSStatus": {
      "description": "MTLSStatus describes the current mTLS status of a mesh entity",
      "type": "object",
      "required": [
        "status"
      ],
      "properties": {
        "status": {
          "description": "mTLS status: MTLS_ENABLED, MTLS_PARTIALLY_ENABLED, MTLS_NOT_ENABLED",
          "type": "string",
          "x-go-name": "Status",
          "example": "MTLS_ENABLED"
        }
      },
      "x-go-package": "github.com/kiali/kiali/models"
    },
    "ManagedFieldsEntry": {
      "description": "ManagedFieldsEntry is a workflow-id, a FieldSet and the group version of the resource\nthat the fieldset applies to.",
      "type": "object",
      "properties": {
        "apiVersion": {
          "description": "APIVersion defines the version of this resource that this field set\napplies to. The format is \"group/version\" just like the top-level\nAPIVersion field. It is necessary to track the version of a field\nset because it cannot be automatically converted.",
          "type": "string",
          "x-go-name": "APIVersion"
        },
        "fieldsType": {
          "description": "FieldsType is the discriminator for the different fields format and version.\nThere is currently only one possible value: \"FieldsV1\"",
          "type": "string",
          "x-go-name": "FieldsType"
        },
        "fieldsV1": {
          "$ref": "#/definitions/FieldsV1"
        },
        "manager": {
          "description": "Manager is an identifier of the workflow managing these fields.",
          "type": "string",
          "x-go-name": "Manager"
        },
        "operation": {
          "$ref": "#/definitions/ManagedFieldsOperationType"
        },
        "subresource": {
          "description": "Subresource is the name of the subresource used to update that object, or\nempty string if the object was updated through the main resource. The\nvalue of this field is used to distinguish between managers, even if they\nshare the same name. For example, a status update will be distinct from a\nregular update using the same manager name.\nNote that the APIVersion field is not related to the Subresource field and\nit always corresponds to the version of the main resource.",
          "type": "string",
          "x-go-name": "Subresource"
        },
        "time": {
          "$ref": "#/definitions/Time"
        }
      },
      "x-go-package": "k8s.io/apimachinery/pkg/apis/meta/v1"
    },
    "ManagedFieldsOperationType": {
      "type": "string",
      "title": "ManagedFieldsOperationType is the type of operation which lead to a ManagedFieldsEntry being created.",
      "x-go-package": "k8s.io/apimachinery/pkg/apis/meta/v1"
    },
    "Metric": {
      "type": "object",
      "properties": {
        "datapoints": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Datapoint"
          },
          "x-go-name": "Datapoints"
        },
        "labels": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "x-go-name": "Labels"
        },
        "name": {
          "type": "string",
          "x-go-name": "Name"
        },
        "stat": {
          "type": "string",
          "x-go-name": "Stat"
        }
      },
      "x-go-package": "github.com/kiali/kiali/models"
    },
    "MetricsStats": {
      "description": "MetricsStats contains opinionated statistics on metrics on a single target. Currently limited to response times (avg/percentiles over interval)",
      "type": "object",
      "properties": {
        "responseTimes": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Stat"
          },
          "x-go-name": "ResponseTimes"
        }
      },
      "x-go-package": "github.com/kiali/kiali/models"
    },
    "MetricsStatsQueries": {
      "type": "object",
      "properties": {
        "Queries": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/MetricsStatsQuery"
          }
        }
      },
      "x-go-package": "github.com/kiali/kiali/models"
    },
    "MetricsStatsQuery": {
      "type": "object",
      "properties": {
        "Avg": {
          "type": "boolean"
        },
        "Direction": {
          "type": "string"
        },
        "PeerTarget": {
          "$ref": "#/definitions/Target"
        },
        "Quantiles": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "Target": {
          "$ref": "#/definitions/Target"
        },
        "interval": {
          "type": "string",
          "x-go-name": "RawInterval"
        },
        "queryTime": {
          "type": "integer",
          "format": "int64",
          "x-go-name": "RawQueryTime"
        }
      },
      "x-go-package": "github.com/kiali/kiali/models"
    },
    "MonitoringDashboard": {
      "description": "MonitoringDashboard is the model representing custom monitoring dashboard, transformed from MonitoringDashboard config resource",
      "type": "object",
      "properties": {
        "aggregations": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Aggregation"
          },
          "x-go-name": "Aggregations"
        },
        "charts": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Chart"
          },
          "x-go-name": "Charts"
        },
        "externalLinks": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ExternalLink"
          },
          "x-go-name": "ExternalLinks"
        },
        "name": {
          "type": "string",
          "x-go-name": "Name"
        },
        "rows": {
          "type": "integer",
          "format": "int64",
          "x-go-name": "Rows"
        },
        "title": {
          "type": "string",
          "x-go-name": "Title"
        }
      },
      "x-go-package": "github.com/kiali/kiali/models"
    },
    "MonitoringDashboardExternalLinkVariables": {
      "type": "object",
      "properties": {
        "app": {
          "type": "string",
          "x-go-name": "App"
        },
        "namespace": {
          "type": "string",
          "x-go-name": "Namespace"
        },
        "service": {
          "type": "string",
          "x-go-name": "Service"
        },
        "version": {
          "type": "string",
          "x-go-name": "Version"
        },
        "workload": {
          "type": "string",
          "x-go-name": "Workload"
        }
      },
      "x-go-package": "github.com/kiali/kiali/config/dashboards"
    },
    "NamespaceAppHealth": {
      "description": "NamespaceAppHealth is an alias of map of app name x health",
      "type": "object",
      "additionalProperties": {
        "$ref": "#/definitions/AppHealth"
      },
      "x-go-package": "github.com/kiali/kiali/models"
    },
    "NodeData": {
      "type": "object",
      "properties": {
        "aggregate": {
          "type": "string",
          "x-go-name": "Aggregate"
        },
        "app": {
          "type": "string",
          "x-go-name": "App"
        },
        "cluster": {
          "type": "string",
          "x-go-name": "Cluster"
        },
        "destServices": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ServiceName"
          },
          "x-go-name": "DestServices"
        },
        "hasCB": {
          "type": "boolean",
          "x-go-name": "HasCB"
        },
        "hasFaultInjection": {
          "type": "boolean",
          "x-go-name": "HasFaultInjection"
        },
        "hasHealthConfig": {
          "$ref": "#/definitions/HealthConfig"
        },
        "hasMirroring": {
          "type": "boolean",
          "x-go-name": "HasMirroring"
        },
        "hasMissingSC": {
          "type": "boolean",
          "x-go-name": "HasMissingSC"
        },
        "hasRequestRouting": {
          "type": "boolean",
          "x-go-name": "HasRequestRouting"
        },
        "hasRequestTimeout": {
          "type": "boolean",
          "x-go-name": "HasRequestTimeout"
        },
        "hasTCPTrafficShifting": {
          "type": "boolean",
          "x-go-name": "HasTCPTrafficShifting"
        },
        "hasTrafficShifting": {
          "type": "boolean",
          "x-go-name": "HasTrafficShifting"
        },
        "hasVS": {
          "$ref": "#/definitions/VSInfo"
        },
        "hasWorkloadEntry": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/WEInfo"
          },
          "x-go-name": "HasWorkloadEntry"
        },
        "id": {
          "description": "Cytoscape Fields",
          "type": "string",
          "x-go-name": "ID"
        },
        "isBox": {
          "type": "string",
          "x-go-name": "IsBox"
        },
        "isDead": {
          "type": "boolean",
          "x-go-name": "IsDead"
        },
        "isGateway": {
          "$ref": "#/definitions/GWInfo"
        },
        "isIdle": {
          "type": "boolean",
          "x-go-name": "IsIdle"
        },
        "isInaccessible": {
          "type": "boolean",
          "x-go-name": "IsInaccessible"
        },
        "isOutside": {
          "type": "boolean",
          "x-go-name": "IsOutside"
        },
        "isRoot": {
          "type": "boolean",
          "x-go-name": "IsRoot"
        },
        "isServiceEntry": {
          "$ref": "#/definitions/SEInfo"
        },
        "labels": {
          "$ref": "#/definitions/LabelsMetadata"
        },
        "namespace": {
          "type": "string",
          "x-go-name": "Namespace"
        },
        "nodeType": {
          "description": "App Fields (not required by Cytoscape)",
          "type": "string",
          "x-go-name": "NodeType"
        },
        "parent": {
          "type": "string",
          "x-go-name": "Parent"
        },
        "service": {
          "type": "string",
          "x-go-name": "Service"
        },
        "traffic": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ProtocolTraffic"
          },
          "x-go-name": "Traffic"
        },
        "version": {
          "type": "string",
          "x-go-name": "Version"
        },
        "workload": {
          "type": "string",
          "x-go-name": "Workload"
        }
      },
      "x-go-package": "github.com/kiali/kiali/graph/config/cytoscape"
    },
    "NodeWrapper": {
      "type": "object",
      "properties": {
        "data": {
          "$ref": "#/definitions/NodeData"
        }
      },
      "x-go-package": "github.com/kiali/kiali/graph/config/cytoscape"
    },
    "OwnerReference": {
      "description": "OwnerReference contains enough information to let you identify an owning\nobject. An owning object must be in the same namespace as the dependent, or\nbe cluster-scoped, so there is no namespace field.\n+structType=atomic",
      "type": "object",
      "properties": {
        "apiVersion": {
          "description": "API version of the referent.",
          "type": "string",
          "x-go-name": "APIVersion"
        },
        "blockOwnerDeletion": {
          "description": "If true, AND if the owner has the \"foregroundDeletion\" finalizer, then\nthe owner cannot be deleted from the key-value store until this\nreference is removed.\nDefaults to false.\nTo set this field, a user needs \"delete\" permission of the owner,\notherwise 422 (Unprocessable Entity) will be returned.\n+optional",
          "type": "boolean",
          "x-go-name": "BlockOwnerDeletion"
        },
        "controller": {
          "description": "If true, this reference points to the managing controller.\n+optional",
          "type": "boolean",
          "x-go-name": "Controller"
        },
        "kind": {
          "description": "Kind of the referent.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
          "type": "string",
          "x-go-name": "Kind"
        },
        "name": {
          "description": "Name of the referent.\nMore info: http://kubernetes.io/docs/user-guide/identifiers#names",
          "type": "string",
          "x-go-name": "Name"
        },
        "uid": {
          "$ref": "#/definitions/UID"
        }
      },
      "x-go-package": "k8s.io/apimachinery/pkg/apis/meta/v1"
    },
    "PeerAuthentication": {
      "description": "Examples:\n\nPolicy to allow mTLS traffic for all workloads under namespace `foo`:\n```yaml\napiVersion: security.istio.io/v1beta1\nkind: PeerAuthentication\nmetadata:\nname: default\nnamespace: foo\nspec:\nmtls:\nmode: STRICT\n```\nFor mesh level, put the policy in root-namespace according to your Istio installation.\n\nPolicies to allow both mTLS \u0026 plaintext traffic for all workloads under namespace `foo`, but\nrequire mTLS for workload `finance`.\n```yaml\napiVersion: security.istio.io/v1beta1\nkind: PeerAuthentication\nmetadata:\nname: default\nnamespace: foo\nspec:\nmtls:\nmode: PERMISSIVE\n\napiVersion: security.istio.io/v1beta1\nkind: PeerAuthentication\nmetadata:\nname: default\nnamespace: foo\nspec:\nselector:\nmatchLabels:\napp: finance\nmtls:\nmode: STRICT\n```\nPolicy to allow mTLS strict for all workloads, but leave port 8080 to\nplaintext:\n```yaml\napiVersion: security.istio.io/v1beta1\nkind: PeerAuthentication\nmetadata:\nname: default\nnamespace: foo\nspec:\nselector:\nmatchLabels:\napp: finance\nmtls:\nmode: STRICT\nportLevelMtls:\n8080:\nmode: DISABLE\n```\nPolicy to inherit mTLS mode from namespace (or mesh) settings, and overwrite\nsettings for port 8080\n```yaml\napiVersion: security.istio.io/v1beta1\nkind: PeerAuthentication\nmetadata:\nname: default\nnamespace: foo\nspec:\nselector:\nmatchLabels:\napp: finance\nmtls:\nmode: UNSET\nportLevelMtls:\n8080:\nmode: DISABLE\n```\n\n\u003c!-- crd generation tags\n+cue-gen:PeerAuthentication:groupName:security.istio.io\n+cue-gen:PeerAuthentication:version:v1beta1\n+cue-gen:PeerAuthentication:storageVersion\n+cue-gen:PeerAuthentication:annotations:helm.sh/resource-policy=keep\n+cue-gen:PeerAuthentication:labels:app=istio-pilot,chart=istio,istio=security,heritage=Tiller,release=istio\n+cue-gen:PeerAuthentication:subresource:status\n+cue-gen:PeerAuthentication:scope:Namespaced\n+cue-gen:PeerAuthentication:resource:categories=istio-io,security-istio-io,shortNames=pa\n+cue-gen:PeerAuthentication:preserveUnknownFields:false\n+cue-gen:PeerAuthentication:printerColumn:name=Mode,type=string,JSONPath=.spec.mtls.mode,description=\"Defines the mTLS mode used for peer authentication.\"\n+cue-gen:PeerAuthentication:printerColumn:name=Age,type=date,JSONPath=.metadata.creationTimestamp,description=\"CreationTimestamp is a timestamp\nrepresenting the server time when this object was created. It is not guaranteed to be set in happens-before order across separate operations.\nClients may not set this value. It is represented in RFC3339 form and is in UTC.\nPopulated by the system. Read-only. Null for lists. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#metadata\"\n\u003e\n\n\u003c!-- go code generation tags\n+kubetype-gen\n+kubetype-gen:groupVersion=security.istio.io/v1beta1\n+genclient\n+k8s:deepcopy-gen=true\n\u003e",
      "type": "object",
      "title": "PeerAuthentication defines how traffic will be tunneled (or not) to the sidecar.",
      "properties": {
        "annotations": {
          "description": "Annotations is an unstructured key value map stored with a resource that may be\nset by external tools to store and retrieve arbitrary metadata. They are not\nqueryable and should be preserved when modifying objects.\nMore info: http://kubernetes.io/docs/user-guide/annotations\n+optional",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "x-go-name": "Annotations"
        },
        "apiVersion": {
          "description": "APIVersion defines the versioned schema of this representation of an object.\nServers should convert recognized schemas to the latest internal value, and\nmay reject unrecognized values.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources\n+optional",
          "type": "string",
          "x-go-name": "APIVersion"
        },
        "clusterName": {
          "description": "The name of the cluster which the object belongs to.\nThis is used to distinguish resources with same name and namespace in different clusters.\nThis field is not set anywhere right now and apiserver is going to ignore it if set in create or update request.\n+optional",
          "type": "string",
          "x-go-name": "ClusterName"
        },
        "creationTimestamp": {
          "$ref": "#/definitions/Time"
        },
        "deletionGracePeriodSeconds": {
          "description": "Number of seconds allowed for this object to gracefully terminate before\nit will be removed from the system. Only set when deletionTimestamp is also set.\nMay only be shortened.\nRead-only.\n+optional",
          "type": "integer",
          "format": "int64",
          "x-go-name": "DeletionGracePeriodSeconds"
        },
        "deletionTimestamp": {
          "$ref": "#/definitions/Time"
        },
        "finalizers": {
          "description": "Must be empty before the object is deleted from the registry. Each entry\nis an identifier for the responsible component that will remove the entry\nfrom the list. If the deletionTimestamp of the object is non-nil, entries\nin this list can only be removed.\nFinalizers may be processed and removed in any order.  Order is NOT enforced\nbecause it introduces significant risk of stuck finalizers.\nfinalizers is a shared field, any actor with permission can reorder it.\nIf the finalizer list is processed in order, then this can lead to a situation\nin which the component responsible for the first finalizer in the list is\nwaiting for a signal (field value, external system, or other) produced by a\ncomponent responsible for a finalizer later in the list, resulting in a deadlock.\nWithout enforced ordering finalizers are free to order amongst themselves and\nare not vulnerable to ordering changes in the list.\n+optional\n+patchStrategy=merge",
          "type": "array",
          "items": {
            "type": "string"
          },
          "x-go-name": "Finalizers"
        },
        "generateName": {
          "description": "GenerateName is an optional prefix, used by the server, to generate a unique\nname ONLY IF the Name field has not been provided.\nIf this field is used, the name returned to the client will be different\nthan the name passed. This value will also be combined with a unique suffix.\nThe provided value has the same validation rules as the Name field,\nand may be truncated by the length of the suffix required to make the value\nunique on the server.\n\nIf this field is specified and the generated name exists, the server will\nNOT return a 409 - instead, it will either return 201 Created or 500 with Reason\nServerTimeout indicating a unique name could not be found in the time allotted, and the client\nshould retry (optionally after the time indicated in the Retry-After header).\n\nApplied only if Name is not specified.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#idempotency\n+optional",
          "type": "string",
          "x-go-name": "GenerateName"
        },
        "generation": {
          "description": "A sequence number representing a specific generation of the desired state.\nPopulated by the system. Read-only.\n+optional",
          "type": "integer",
          "format": "int64",
          "x-go-name": "Generation"
        },
        "kind": {
          "description": "Kind is a string value representing the REST resource this object represents.\nServers may infer this from the endpoint the client submits requests to.\nCannot be updated.\nIn CamelCase.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\n+optional",
          "type": "string",
          "x-go-name": "Kind"
        },
        "labels": {
          "description": "Map of string keys and values that can be used to organize and categorize\n(scope and select) objects. May match selectors of replication controllers\nand services.\nMore info: http://kubernetes.io/docs/user-guide/labels\n+optional",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "x-go-name": "Labels"
        },
        "managedFields": {
          "description": "ManagedFields maps workflow-id and version to the set of fields\nthat are managed by that workflow. This is mostly for internal\nhousekeeping, and users typically shouldn't need to set or\nunderstand this field. A workflow can be the user's name, a\ncontroller's name, or the name of a specific apply path like\n\"ci-cd\". The set of fields is always in the version that the\nworkflow used when modifying the object.\n\n+optional",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ManagedFieldsEntry"
          },
          "x-go-name": "ManagedFields"
        },
        "name": {
          "description": "Name must be unique within a namespace. Is required when creating resources, although\nsome resources may allow a client to request the generation of an appropriate name\nautomatically. Name is primarily intended for creation idempotence and configuration\ndefinition.\nCannot be updated.\nMore info: http://kubernetes.io/docs/user-guide/identifiers#names\n+optional",
          "type": "string",
          "x-go-name": "Name"
        },
        "namespace": {
          "description": "Namespace defines the space within which each name must be unique. An empty namespace is\nequivalent to the \"default\" namespace, but \"default\" is the canonical representation.\nNot all objects are required to be scoped to a namespace - the value of this field for\nthose objects will be empty.\n\nMust be a DNS_LABEL.\nCannot be updated.\nMore info: http://kubernetes.io/docs/user-guide/namespaces\n+optional",
          "type": "string",
          "x-go-name": "Namespace"
        },
        "ownerReferences": {
          "description": "List of objects depended by this object. If ALL objects in the list have\nbeen deleted, this object will be garbage collected. If this object is managed by a controller,\nthen an entry in this list will point to this controller, with the controller field set to true.\nThere cannot be more than one managing controller.\n+optional\n+patchMergeKey=uid\n+patchStrategy=merge",
          "type": "array",
          "items": {
            "$ref": "#/definitions/OwnerReference"
          },
          "x-go-name": "OwnerReferences"
        },
        "resourceVersion": {
          "description": "An opaque value that represents the internal version of this object that can\nbe used by clients to determine when objects have changed. May be used for optimistic\nconcurrency, change detection, and the watch operation on a resource or set of resources.\nClients must treat these values as opaque and passed unmodified back to the server.\nThey may only be valid for a particular resource or set of resources.\n\nPopulated by the system.\nRead-only.\nValue must be treated as opaque by clients and .\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency\n+optional",
          "type": "string",
          "x-go-name": "ResourceVersion"
        },
        "selfLink": {
          "description": "SelfLink is a URL representing this object.\nPopulated by the system.\nRead-only.\n\nDEPRECATED\nKubernetes will stop propagating this field in 1.20 release and the field is planned\nto be removed in 1.21 release.\n+optional",
          "type": "string",
          "x-go-name": "SelfLink"
        },
        "spec": {
          "$ref": "#/definitions/PeerAuthentication"
        },
        "status": {
          "$ref": "#/definitions/IstioStatus"
        },
        "uid": {
          "$ref": "#/definitions/UID"
        }
      },
      "x-go-package": "istio.io/client-go/pkg/apis/security/v1beta1"
    },
    "Pod": {
      "description": "Pod holds a subset of v1.Pod data that is meaningful in Kiali",
      "type": "object",
      "properties": {
        "annotations": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "x-go-name": "Annotations"
        },
        "appLabel": {
          "type": "boolean",
          "x-go-name": "AppLabel"
        },
        "containers": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ContainerInfo"
          },
          "x-go-name": "Containers"
        },
        "createdAt": {
          "type": "string",
          "x-go-name": "CreatedAt"
        },
        "createdBy": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Reference"
          },
          "x-go-name": "CreatedBy"
        },
        "istioContainers": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ContainerInfo"
          },
          "x-go-name": "IstioContainers"
        },
        "istioInitContainers": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ContainerInfo"
          },
          "x-go-name": "IstioInitContainers"
        },
        "labels": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "x-go-name": "Labels"
        },
        "name": {
          "type": "string",
          "x-go-name": "Name"
        },
        "proxyStatus": {
          "$ref": "#/definitions/ProxyStatus"
        },
        "serviceAccountName": {
          "type": "string",
          "x-go-name": "ServiceAccountName"
        },
        "status": {
          "type": "string",
          "x-go-name": "Status"
        },
        "statusMessage": {
          "type": "string",
          "x-go-name": "StatusMessage"
        },
        "statusReason": {
          "type": "string",
          "x-go-name": "StatusReason"
        },
        "versionLabel": {
          "type": "boolean",
          "x-go-name": "VersionLabel"
        }
      },
      "x-go-package": "github.com/kiali/kiali/models"
    },
    "Pods": {
      "description": "Pods alias for list of Pod structs",
      "type": "array",
      "items": {
        "$ref": "#/definitions/Pod"
      },
      "x-go-package": "github.com/kiali/kiali/models"
    },
    "Port": {
      "type": "object",
      "properties": {
        "appProtocol": {
          "type": "string",
          "x-go-name": "AppProtocol"
        },
        "istioProtocol": {
          "type": "string",
          "x-go-name": "IstioProtocol"
        },
        "name": {
          "type": "string",
          "x-go-name": "Name"
        },
        "port": {
          "type": "integer",
          "format": "int32",
          "x-go-name": "Port"
        },
        "protocol": {
          "type": "string",
          "x-go-name": "Protocol"
        },
        "tlsMode": {
          "description": "TLSMode endpoint is injected with istio sidecar and ready to configure Istio mTLS\nDisabledTLSModeLabel implies that this endpoint should receive traffic as is (mostly plaintext)\nDisabledTLSModeLabel = \"disabled\"\nIstioMutualTLSModeLabel implies that the endpoint is ready to receive Istio mTLS connections.\nIstioMutualTLSModeLabel = \"istio\"",
          "type": "string",
          "x-go-name": "TLSMode"
        }
      },
      "x-go-package": "github.com/kiali/kiali/models"
    },
    "Ports": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/Port"
      },
      "x-go-package": "github.com/kiali/kiali/models"
    },
    "Process": {
      "description": "Process is the process emitting a set of spans",
      "type": "object",
      "properties": {
        "serviceName": {
          "type": "string",
          "x-go-name": "ServiceName"
        },
        "tags": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/KeyValue"
          },
          "x-go-name": "Tags"
        }
      },
      "x-go-package": "github.com/kiali/kiali/jaeger/model/json"
    },
    "ProcessID": {
      "type": "string",
      "title": "ProcessID is a hashed value of the Process struct that is unique within the trace.",
      "x-go-package": "github.com/kiali/kiali/jaeger/model/json"
    },
    "ProtocolTraffic": {
      "description": "ProtocolTraffic supplies all of the traffic information for a single protocol",
      "type": "object",
      "properties": {
        "protocol": {
          "type": "string",
          "x-go-name": "Protocol"
        },
        "rates": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "x-go-name": "Rates"
        },
        "responses": {
          "$ref": "#/definitions/Responses"
        }
      },
      "x-go-package": "github.com/kiali/kiali/graph/config/cytoscape"
    },
    "ProxyStatus": {
      "description": "In healthy scenarios all variables should be true.\nIf at least one variable is false, then the proxy isn't fully sync'ed with pilot.",
      "type": "object",
      "title": "ProxyStatus gives the sync status of the sidecar proxy.",
      "properties": {
        "CDS": {
          "type": "string"
        },
        "EDS": {
          "type": "string"
        },
        "LDS": {
          "type": "string"
        },
        "RDS": {
          "type": "string"
        }
      },
      "x-go-package": "github.com/kiali/kiali/models"
    },
    "Reference": {
      "description": "Reference is a reference from one span to another",
      "type": "object",
      "properties": {
        "refType": {
          "$ref": "#/definitions/ReferenceType"
        },
        "spanID": {
          "$ref": "#/definitions/SpanID"
        },
        "traceID": {
          "$ref": "#/definitions/TraceID"
        }
      },
      "x-go-package": "github.com/kiali/kiali/jaeger/model/json"
    },
    "ReferenceType": {
      "description": "ReferenceType is the reference type of one span to another",
      "type": "string",
      "x-go-package": "github.com/kiali/kiali/jaeger/model/json"
    },
    "RequestAuthentication": {
      "description": "Require JWT for all request for workloads that have label `app:httpbin`\n\n```yaml\napiVersion: security.istio.io/v1beta1\nkind: RequestAuthentication\nmetadata:\nname: httpbin\nnamespace: foo\nspec:\nselector:\nmatchLabels:\napp: httpbin\njwtRules:\nissuer: \"issuer-foo\"\njwksUri: https://example.com/.well-known/jwks.json\n\napiVersion: security.istio.io/v1beta1\nkind: AuthorizationPolicy\nmetadata:\nname: httpbin\nnamespace: foo\nspec:\nselector:\nmatchLabels:\napp: httpbin\nrules:\nfrom:\nsource:\nrequestPrincipals: [\"*\"]\n```\n\nThe next example shows how to set a different JWT requirement for a different `host`. The `RequestAuthentication`\ndeclares it can accept JWTs issued by either `issuer-foo` or `issuer-bar` (the public key set is implicitly\nset from the OpenID Connect spec).\n\n```yaml\napiVersion: security.istio.io/v1beta1\nkind: RequestAuthentication\nmetadata:\nname: httpbin\nnamespace: foo\nspec:\nselector:\nmatchLabels:\napp: httpbin\njwtRules:\nissuer: \"issuer-foo\"\nissuer: \"issuer-bar\"\n\napiVersion: security.istio.io/v1beta1\nkind: AuthorizationPolicy\nmetadata:\nname: httpbin\nnamespace: foo\nspec:\nselector:\nmatchLabels:\napp: httpbin\nrules:\nfrom:\nsource:\nrequestPrincipals: [\"issuer-foo/*\"]\nto:\noperation:\nhosts: [\"example.com\"]\nfrom:\nsource:\nrequestPrincipals: [\"issuer-bar/*\"]\nto:\noperation:\nhosts: [\"another-host.com\"]\n```\n\nYou can fine tune the authorization policy to set different requirement per path. For example,\nto require JWT on all paths, except /healthz, the same `RequestAuthentication` can be used, but the\nauthorization policy could be:\n\n```yaml\napiVersion: security.istio.io/v1beta1\nkind: AuthorizationPolicy\nmetadata:\nname: httpbin\nnamespace: foo\nspec:\nselector:\nmatchLabels:\napp: httpbin\nrules:\nfrom:\nsource:\nrequestPrincipals: [\"*\"]\nto:\noperation:\npaths: [\"/healthz\"]\n```\n\n\u003c!-- crd generation tags\n+cue-gen:RequestAuthentication:groupName:security.istio.io\n+cue-gen:RequestAuthentication:version:v1beta1\n+cue-gen:RequestAuthentication:storageVersion\n+cue-gen:RequestAuthentication:annotations:helm.sh/resource-policy=keep\n+cue-gen:RequestAuthentication:labels:app=istio-pilot,chart=istio,istio=security,heritage=Tiller,release=istio\n+cue-gen:RequestAuthentication:subresource:status\n+cue-gen:RequestAuthentication:scope:Namespaced\n+cue-gen:RequestAuthentication:resource:categories=istio-io,security-istio-io,shortNames=ra\n+cue-gen:RequestAuthentication:preserveUnknownFields:false\n\u003e\n\n\u003c!-- go code generation tags\n+kubetype-gen\n+kubetype-gen:groupVersion=security.istio.io/v1beta1\n+genclient\n+k8s:deepcopy-gen=true\n\u003e",
      "type": "object",
      "title": "RequestAuthentication defines what request authentication methods are supported by a workload.\nIt will reject a request if the request contains invalid authentication information, based on the\nconfigured authentication rules. A request that does not contain any authentication credentials\nwill be accepted but will not have any authenticated identity. To restrict access to authenticated\nrequests only, this should be accompanied by an authorization rule.\nExamples:",
      "properties": {
        "annotations": {
          "description": "Annotations is an unstructured key value map stored with a resource that may be\nset by external tools to store and retrieve arbitrary metadata. They are not\nqueryable and should be preserved when modifying objects.\nMore info: http://kubernetes.io/docs/user-guide/annotations\n+optional",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "x-go-name": "Annotations"
        },
        "apiVersion": {
          "description": "APIVersion defines the versioned schema of this representation of an object.\nServers should convert recognized schemas to the latest internal value, and\nmay reject unrecognized values.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources\n+optional",
          "type": "string",
          "x-go-name": "APIVersion"
        },
        "clusterName": {
          "description": "The name of the cluster which the object belongs to.\nThis is used to distinguish resources with same name and namespace in different clusters.\nThis field is not set anywhere right now and apiserver is going to ignore it if set in create or update request.\n+optional",
          "type": "string",
          "x-go-name": "ClusterName"
        },
        "creationTimestamp": {
          "$ref": "#/definitions/Time"
        },
        "deletionGracePeriodSeconds": {
          "description": "Number of seconds allowed for this object to gracefully terminate before\nit will be removed from the system. Only set when deletionTimestamp is also set.\nMay only be shortened.\nRead-only.\n+optional",
          "type": "integer",
          "format": "int64",
          "x-go-name": "DeletionGracePeriodSeconds"
        },
        "deletionTimestamp": {
          "$ref": "#/definitions/Time"
        },
        "finalizers": {
          "description": "Must be empty before the object is deleted from the registry. Each entry\nis an identifier for the responsible component that will remove the entry\nfrom the list. If the deletionTimestamp of the object is non-nil, entries\nin this list can only be removed.\nFinalizers may be processed and removed in any order.  Order is NOT enforced\nbecause it introduces significant risk of stuck finalizers.\nfinalizers is a shared field, any actor with permission can reorder it.\nIf the finalizer list is processed in order, then this can lead to a situation\nin which the component responsible for the first finalizer in the list is\nwaiting for a signal (field value, external system, or other) produced by a\ncomponent responsible for a finalizer later in the list, resulting in a deadlock.\nWithout enforced ordering finalizers are free to order amongst themselves and\nare not vulnerable to ordering changes in the list.\n+optional\n+patchStrategy=merge",
          "type": "array",
          "items": {
            "type": "string"
          },
          "x-go-name": "Finalizers"
        },
        "generateName": {
          "description": "GenerateName is an optional prefix, used by the server, to generate a unique\nname ONLY IF the Name field has not been provided.\nIf this field is used, the name returned to the client will be different\nthan the name passed. This value will also be combined with a unique suffix.\nThe provided value has the same validation rules as the Name field,\nand may be truncated by the length of the suffix required to make the value\nunique on the server.\n\nIf this field is specified and the generated name exists, the server will\nNOT return a 409 - instead, it will either return 201 Created or 500 with Reason\nServerTimeout indicating a unique name could not be found in the time allotted, and the client\nshould retry (optionally after the time indicated in the Retry-After header).\n\nApplied only if Name is not specified.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#idempotency\n+optional",
          "type": "string",
          "x-go-name": "GenerateName"
        },
        "generation": {
          "description": "A sequence number representing a specific generation of the desired state.\nPopulated by the system. Read-only.\n+optional",
          "type": "integer",
          "format": "int64",
          "x-go-name": "Generation"
        },
        "kind": {
          "description": "Kind is a string value representing the REST resource this object represents.\nServers may infer this from the endpoint the client submits requests to.\nCannot be updated.\nIn CamelCase.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\n+optional",
          "type": "string",
          "x-go-name": "Kind"
        },
        "labels": {
          "description": "Map of string keys and values that can be used to organize and categorize\n(scope and select) objects. May match selectors of replication controllers\nand services.\nMore info: http://kubernetes.io/docs/user-guide/labels\n+optional",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "x-go-name": "Labels"
        },
        "managedFields": {
          "description": "ManagedFields maps workflow-id and version to the set of fields\nthat are managed by that workflow. This is mostly for internal\nhousekeeping, and users typically shouldn't need to set or\nunderstand this field. A workflow can be the user's name, a\ncontroller's name, or the name of a specific apply path like\n\"ci-cd\". The set of fields is always in the version that the\nworkflow used when modifying the object.\n\n+optional",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ManagedFieldsEntry"
          },
          "x-go-name": "ManagedFields"
        },
        "name": {
          "description": "Name must be unique within a namespace. Is required when creating resources, although\nsome resources may allow a client to request the generation of an appropriate name\nautomatically. Name is primarily intended for creation idempotence and configuration\ndefinition.\nCannot be updated.\nMore info: http://kubernetes.io/docs/user-guide/identifiers#names\n+optional",
          "type": "string",
          "x-go-name": "Name"
        },
        "namespace": {
          "description": "Namespace defines the space within which each name must be unique. An empty namespace is\nequivalent to the \"default\" namespace, but \"default\" is the canonical representation.\nNot all objects are required to be scoped to a namespace - the value of this field for\nthose objects will be empty.\n\nMust be a DNS_LABEL.\nCannot be updated.\nMore info: http://kubernetes.io/docs/user-guide/namespaces\n+optional",
          "type": "string",
          "x-go-name": "Namespace"
        },
        "ownerReferences": {
          "description": "List of objects depended by this object. If ALL objects in the list have\nbeen deleted, this object will be garbage collected. If this object is managed by a controller,\nthen an entry in this list will point to this controller, with the controller field set to true.\nThere cannot be more than one managing controller.\n+optional\n+patchMergeKey=uid\n+patchStrategy=merge",
          "type": "array",
          "items": {
            "$ref": "#/definitions/OwnerReference"
          },
          "x-go-name": "OwnerReferences"
        },
        "resourceVersion": {
          "description": "An opaque value that represents the internal version of this object that can\nbe used by clients to determine when objects have changed. May be used for optimistic\nconcurrency, change detection, and the watch operation on a resource or set of resources.\nClients must treat these values as opaque and passed unmodified back to the server.\nThey may only be valid for a particular resource or set of resources.\n\nPopulated by the system.\nRead-only.\nValue must be treated as opaque by clients and .\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency\n+optional",
          "type": "string",
          "x-go-name": "ResourceVersion"
        },
        "selfLink": {
          "description": "SelfLink is a URL representing this object.\nPopulated by the system.\nRead-only.\n\nDEPRECATED\nKubernetes will stop propagating this field in 1.20 release and the field is planned\nto be removed in 1.21 release.\n+optional",
          "type": "string",
          "x-go-name": "SelfLink"
        },
        "spec": {
          "$ref": "#/definitions/RequestAuthentication"
        },
        "status": {
          "$ref": "#/definitions/IstioStatus"
        },
        "uid": {
          "$ref": "#/definitions/UID"
        }
      },
      "x-go-package": "istio.io/client-go/pkg/apis/security/v1beta1"
    },
    "RequestHealth": {
      "description": "RequestHealth holds several stats about recent request errors\nInbound//Outbound are the rates of requests by protocol and status_code.\nExample:   Inbound: { \"http\": {\"200\": 1.5, \"400\": 2.3}, \"grpc\": {\"1\": 1.2} }",
      "type": "object",
      "properties": {
        "healthAnnotations": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "x-go-name": "HealthAnnotations"
        },
        "inbound": {
          "type": "object",
          "additionalProperties": {
            "type": "object",
            "additionalProperties": {
              "type": "number",
              "format": "double"
            }
          },
          "x-go-name": "Inbound"
        },
        "outbound": {
          "type": "object",
          "additionalProperties": {
            "type": "object",
            "additionalProperties": {
              "type": "number",
              "format": "double"
            }
          },
          "x-go-name": "Outbound"
        }
      },
      "x-go-package": "github.com/kiali/kiali/models"
    },
    "ResourcePermissions": {
      "description": "ResourcePermissions holds permission flags for an object type\nTrue means allowed.",
      "type": "object",
      "properties": {
        "create": {
          "type": "boolean",
          "x-go-name": "Create"
        },
        "delete": {
          "type": "boolean",
          "x-go-name": "Delete"
        },
        "update": {
          "type": "boolean",
          "x-go-name": "Update"
        }
      },
      "x-go-package": "github.com/kiali/kiali/models"
    },
    "ResourcesPermissions": {
      "description": "ResourcesPermissions holds a map of permission flags per resource",
      "type": "object",
      "additionalProperties": {
        "$ref": "#/definitions/ResourcePermissions"
      },
      "x-go-package": "github.com/kiali/kiali/models"
    },
    "ResponseDetail": {
      "type": "object",
      "title": "ResponseDetail holds information broken down by response code.",
      "properties": {
        "flags": {
          "$ref": "#/definitions/ResponseFlags"
        },
        "hosts": {
          "$ref": "#/definitions/ResponseHosts"
        }
      },
      "x-go-package": "github.com/kiali/kiali/graph/config/cytoscape"
    },
    "ResponseFlags": {
      "description": "\"200\" : {\n\"-\"     : \"80.0\",\n\"DC\"    : \"10.0\",\n\"FI,FD\" : \"10.0\"\n}, ...",
      "type": "object",
      "title": "ResponseFlags is a map of maps. Each response code is broken down by responseFlags:percentageOfTraffic, e.g.:",
      "additionalProperties": {
        "type": "string"
      },
      "x-go-package": "github.com/kiali/kiali/graph/config/cytoscape"
    },
    "ResponseHosts": {
      "description": "\"200\" : {\n\"www.google.com\" : \"80.0\",\n\"www.yahoo.com\"  : \"20.0\"\n}, ...",
      "type": "object",
      "title": "ResponseHosts is a map of maps. Each response host is broken down by responseFlags:percentageOfTraffic, e.g.:",
      "additionalProperties": {
        "type": "string"
      },
      "x-go-package": "github.com/kiali/kiali/graph/config/cytoscape"
    },
    "Responses": {
      "description": "Responses maps responseCodes to detailed information for that code",
      "type": "object",
      "additionalProperties": {
        "$ref": "#/definitions/ResponseDetail"
      },
      "x-go-package": "github.com/kiali/kiali/graph/config/cytoscape"
    },
    "Route": {
      "type": "object",
      "properties": {
        "domains": {
          "$ref": "#/definitions/Host"
        },
        "match": {
          "type": "string",
          "x-go-name": "Match"
        },
        "name": {
          "type": "string",
          "x-go-name": "Name"
        },
        "virtual_service": {
          "type": "string",
          "x-go-name": "VirtualService"
        }
      },
      "x-go-package": "github.com/kiali/kiali/models"
    },
    "Routes": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/Route"
      },
      "x-go-package": "github.com/kiali/kiali/models"
    },
    "Runtime": {
      "description": "Runtime holds the runtime title and associated dashboard template(s)",
      "type": "object",
      "properties": {
        "dashboardRefs": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/DashboardRef"
          },
          "x-go-name": "DashboardRefs"
        },
        "name": {
          "type": "string",
          "x-go-name": "Name"
        }
      },
      "x-go-package": "github.com/kiali/kiali/models"
    },
    "SEInfo": {
      "description": "SEInfo provides static information about the service entry",
      "type": "object",
      "properties": {
        "hosts": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "x-go-name": "Hosts"
        },
        "location": {
          "type": "string",
          "x-go-name": "Location"
        },
        "namespace": {
          "type": "string",
          "x-go-name": "Namespace"
        }
      },
      "x-go-package": "github.com/kiali/kiali/graph"
    },
    "Service": {
      "type": "object",
      "properties": {
        "additionalDetails": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/AdditionalItem"
          },
          "x-go-name": "AdditionalDetails"
        },
        "createdAt": {
          "type": "string",
          "x-go-name": "CreatedAt"
        },
        "externalName": {
          "type": "string",
          "x-go-name": "ExternalName"
        },
        "healthAnnotations": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "x-go-name": "HealthAnnotations"
        },
        "ip": {
          "type": "string",
          "x-go-name": "Ip"
        },
        "labels": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "x-go-name": "Labels"
        },
        "name": {
          "type": "string",
          "x-go-name": "Name"
        },
        "namespace": {
          "$ref": "#/definitions/namespace"
        },
        "ports": {
          "$ref": "#/definitions/Ports"
        },
        "resourceVersion": {
          "type": "string",
          "x-go-name": "ResourceVersion"
        },
        "selectors": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "x-go-name": "Selectors"
        },
        "type": {
          "type": "string",
          "x-go-name": "Type"
        }
      },
      "x-go-package": "github.com/kiali/kiali/models"
    },
    "ServiceDetails": {
      "type": "object",
      "properties": {
        "destinationRules": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/DestinationRule"
          },
          "x-go-name": "DestinationRules"
        },
        "endpoints": {
          "$ref": "#/definitions/Endpoints"
        },
        "health": {
          "$ref": "#/definitions/ServiceHealth"
        },
        "istioPermissions": {
          "$ref": "#/definitions/ResourcePermissions"
        },
        "istioSidecar": {
          "type": "boolean",
          "x-go-name": "IstioSidecar"
        },
        "namespaceMTLS": {
          "$ref": "#/definitions/MTLSStatus"
        },
        "service": {
          "$ref": "#/definitions/Service"
        },
        "serviceEntries": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ServiceEntry"
          },
          "x-go-name": "ServiceEntries"
        },
        "validations": {
          "$ref": "#/definitions/IstioValidations"
        },
        "virtualServices": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/VirtualService"
          },
          "x-go-name": "VirtualServices"
        },
        "workloads": {
          "$ref": "#/definitions/WorkloadOverviews"
        }
      },
      "x-go-package": "github.com/kiali/kiali/models"
    },
    "ServiceEntry": {
      "description": "\u003c!-- crd generation tags\n+cue-gen:ServiceEntry:groupName:networking.istio.io\n+cue-gen:ServiceEntry:version:v1alpha3\n+cue-gen:ServiceEntry:storageVersion\n+cue-gen:ServiceEntry:annotations:helm.sh/resource-policy=keep\n+cue-gen:ServiceEntry:labels:app=istio-pilot,chart=istio,heritage=Tiller,release=istio\n+cue-gen:ServiceEntry:subresource:status\n+cue-gen:ServiceEntry:scope:Namespaced\n+cue-gen:ServiceEntry:resource:categories=istio-io,networking-istio-io,shortNames=se,plural=serviceentries\n+cue-gen:ServiceEntry:printerColumn:name=Hosts,type=string,JSONPath=.spec.hosts,description=\"The hosts associated with the ServiceEntry\"\n+cue-gen:ServiceEntry:printerColumn:name=Location,type=string,JSONPath=.spec.location,description=\"Whether the service is external to the\nmesh or part of the mesh (MESH_EXTERNAL or MESH_INTERNAL)\"\n+cue-gen:ServiceEntry:printerColumn:name=Resolution,type=string,JSONPath=.spec.resolution,description=\"Service discovery mode for the hosts\n(NONE, STATIC, or DNS)\"\n+cue-gen:ServiceEntry:printerColumn:name=Age,type=date,JSONPath=.metadata.creationTimestamp,description=\"CreationTimestamp is a timestamp\nrepresenting the server time when this object was created. It is not guaranteed to be set in happens-before order across separate operations.\nClients may not set this value. It is represented in RFC3339 form and is in UTC.\nPopulated by the system. Read-only. Null for lists. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#metadata\"\n+cue-gen:ServiceEntry:preserveUnknownFields:false\n\u003e\n\n\u003c!-- go code generation tags\n+kubetype-gen\n+kubetype-gen:groupVersion=networking.istio.io/v1alpha3\n+genclient\n+k8s:deepcopy-gen=true\n\u003e\n\u003c!-- istio code generation tags\n+istio.io/sync-start\n\u003e",
      "type": "object",
      "title": "ServiceEntry enables adding additional entries into Istio's internal\nservice registry.",
      "properties": {
        "annotations": {
          "description": "Annotations is an unstructured key value map stored with a resource that may be\nset by external tools to store and retrieve arbitrary metadata. They are not\nqueryable and should be preserved when modifying objects.\nMore info: http://kubernetes.io/docs/user-guide/annotations\n+optional",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "x-go-name": "Annotations"
        },
        "apiVersion": {
          "description": "APIVersion defines the versioned schema of this representation of an object.\nServers should convert recognized schemas to the latest internal value, and\nmay reject unrecognized values.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources\n+optional",
          "type": "string",
          "x-go-name": "APIVersion"
        },
        "clusterName": {
          "description": "The name of the cluster which the object belongs to.\nThis is used to distinguish resources with same name and namespace in different clusters.\nThis field is not set anywhere right now and apiserver is going to ignore it if set in create or update request.\n+optional",
          "type": "string",
          "x-go-name": "ClusterName"
        },
        "creationTimestamp": {
          "$ref": "#/definitions/Time"
        },
        "deletionGracePeriodSeconds": {
          "description": "Number of seconds allowed for this object to gracefully terminate before\nit will be removed from the system. Only set when deletionTimestamp is also set.\nMay only be shortened.\nRead-only.\n+optional",
          "type": "integer",
          "format": "int64",
          "x-go-name": "DeletionGracePeriodSeconds"
        },
        "deletionTimestamp": {
          "$ref": "#/definitions/Time"
        },
        "finalizers": {
          "description": "Must be empty before the object is deleted from the registry. Each entry\nis an identifier for the responsible component that will remove the entry\nfrom the list. If the deletionTimestamp of the object is non-nil, entries\nin this list can only be removed.\nFinalizers may be processed and removed in any order.  Order is NOT enforced\nbecause it introduces significant risk of stuck finalizers.\nfinalizers is a shared field, any actor with permission can reorder it.\nIf the finalizer list is processed in order, then this can lead to a situation\nin which the component responsible for the first finalizer in the list is\nwaiting for a signal (field value, external system, or other) produced by a\ncomponent responsible for a finalizer later in the list, resulting in a deadlock.\nWithout enforced ordering finalizers are free to order amongst themselves and\nare not vulnerable to ordering changes in the list.\n+optional\n+patchStrategy=merge",
          "type": "array",
          "items": {
            "type": "string"
          },
          "x-go-name": "Finalizers"
        },
        "generateName": {
          "description": "GenerateName is an optional prefix, used by the server, to generate a unique\nname ONLY IF the Name field has not been provided.\nIf this field is used, the name returned to the client will be different\nthan the name passed. This value will also be combined with a unique suffix.\nThe provided value has the same validation rules as the Name field,\nand may be truncated by the length of the suffix required to make the value\nunique on the server.\n\nIf this field is specified and the generated name exists, the server will\nNOT return a 409 - instead, it will either return 201 Created or 500 with Reason\nServerTimeout indicating a unique name could not be found in the time allotted, and the client\nshould retry (optionally after the time indicated in the Retry-After header).\n\nApplied only if Name is not specified.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#idempotency\n+optional",
          "type": "string",
          "x-go-name": "GenerateName"
        },
        "generation": {
          "description": "A sequence number representing a specific generation of the desired state.\nPopulated by the system. Read-only.\n+optional",
          "type": "integer",
          "format": "int64",
          "x-go-name": "Generation"
        },
        "kind": {
          "description": "Kind is a string value representing the REST resource this object represents.\nServers may infer this from the endpoint the client submits requests to.\nCannot be updated.\nIn CamelCase.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\n+optional",
          "type": "string",
          "x-go-name": "Kind"
        },
        "labels": {
          "description": "Map of string keys and values that can be used to organize and categorize\n(scope and select) objects. May match selectors of replication controllers\nand services.\nMore info: http://kubernetes.io/docs/user-guide/labels\n+optional",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "x-go-name": "Labels"
        },
        "managedFields": {
          "description": "ManagedFields maps workflow-id and version to the set of fields\nthat are managed by that workflow. This is mostly for internal\nhousekeeping, and users typically shouldn't need to set or\nunderstand this field. A workflow can be the user's name, a\ncontroller's name, or the name of a specific apply path like\n\"ci-cd\". The set of fields is always in the version that the\nworkflow used when modifying the object.\n\n+optional",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ManagedFieldsEntry"
          },
          "x-go-name": "ManagedFields"
        },
        "name": {
          "description": "Name must be unique within a namespace. Is required when creating resources, although\nsome resources may allow a client to request the generation of an appropriate name\nautomatically. Name is primarily intended for creation idempotence and configuration\ndefinition.\nCannot be updated.\nMore info: http://kubernetes.io/docs/user-guide/identifiers#names\n+optional",
          "type": "string",
          "x-go-name": "Name"
        },
        "namespace": {
          "description": "Namespace defines the space within which each name must be unique. An empty namespace is\nequivalent to the \"default\" namespace, but \"default\" is the canonical representation.\nNot all objects are required to be scoped to a namespace - the value of this field for\nthose objects will be empty.\n\nMust be a DNS_LABEL.\nCannot be updated.\nMore info: http://kubernetes.io/docs/user-guide/namespaces\n+optional",
          "type": "string",
          "x-go-name": "Namespace"
        },
        "ownerReferences": {
          "description": "List of objects depended by this object. If ALL objects in the list have\nbeen deleted, this object will be garbage collected. If this object is managed by a controller,\nthen an entry in this list will point to this controller, with the controller field set to true.\nThere cannot be more than one managing controller.\n+optional\n+patchMergeKey=uid\n+patchStrategy=merge",
          "type": "array",
          "items": {
            "$ref": "#/definitions/OwnerReference"
          },
          "x-go-name": "OwnerReferences"
        },
        "resourceVersion": {
          "description": "An opaque value that represents the internal version of this object that can\nbe used by clients to determine when objects have changed. May be used for optimistic\nconcurrency, change detection, and the watch operation on a resource or set of resources.\nClients must treat these values as opaque and passed unmodified back to the server.\nThey may only be valid for a particular resource or set of resources.\n\nPopulated by the system.\nRead-only.\nValue must be treated as opaque by clients and .\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency\n+optional",
          "type": "string",
          "x-go-name": "ResourceVersion"
        },
        "selfLink": {
          "description": "SelfLink is a URL representing this object.\nPopulated by the system.\nRead-only.\n\nDEPRECATED\nKubernetes will stop propagating this field in 1.20 release and the field is planned\nto be removed in 1.21 release.\n+optional",
          "type": "string",
          "x-go-name": "SelfLink"
        },
        "spec": {
          "$ref": "#/definitions/ServiceEntry"
        },
        "status": {
          "$ref": "#/definitions/IstioStatus"
        },
        "uid": {
          "$ref": "#/definitions/UID"
        }
      },
      "x-go-package": "istio.io/client-go/pkg/apis/networking/v1alpha3"
    },
    "ServiceHealth": {
      "description": "ServiceHealth contains aggregated health from various sources, for a given service",
      "type": "object",
      "properties": {
        "requests": {
          "$ref": "#/definitions/RequestHealth"
        }
      },
      "x-go-package": "github.com/kiali/kiali/models"
    },
    "ServiceList": {
      "type": "object",
      "properties": {
        "namespace": {
          "$ref": "#/definitions/namespace"
        },
        "services": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ServiceOverview"
          },
          "x-go-name": "Services"
        },
        "validations": {
          "$ref": "#/definitions/IstioValidations"
        }
      },
      "x-go-package": "github.com/kiali/kiali/models"
    },
    "ServiceName": {
      "type": "object",
      "properties": {
        "cluster": {
          "type": "string",
          "x-go-name": "Cluster"
        },
        "name": {
          "type": "string",
          "x-go-name": "Name"
        },
        "namespace": {
          "type": "string",
          "x-go-name": "Namespace"
        }
      },
      "x-go-package": "github.com/kiali/kiali/graph"
    },
    "ServiceOverview": {
      "type": "object",
      "required": [
        "name",
        "istioSidecar",
        "appLabel"
      ],
      "properties": {
        "additionalDetailSample": {
          "$ref": "#/definitions/AdditionalItem"
        },
        "appLabel": {
          "description": "Has label app",
          "type": "boolean",
          "x-go-name": "AppLabel",
          "example": true
        },
        "healthAnnotations": {
          "description": "Annotations of the service",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "x-go-name": "HealthAnnotations"
        },
        "istioReferences": {
          "description": "Istio References",
          "type": "array",
          "items": {
            "$ref": "#/definitions/IstioValidationKey"
          },
          "x-go-name": "IstioReferences"
        },
        "istioSidecar": {
          "description": "Define if Pods related to this Service has an IstioSidecar deployed",
          "type": "boolean",
          "x-go-name": "IstioSidecar",
          "example": true
        },
        "kialiWizard": {
          "description": "Kiali Wizard scenario, if any",
          "type": "string",
          "x-go-name": "KialiWizard"
        },
        "labels": {
          "description": "Labels for Service",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "x-go-name": "Labels"
        },
        "name": {
          "description": "Name of the Service",
          "type": "string",
          "x-go-name": "Name",
          "example": "reviews-v1"
        },
        "namespace": {
          "description": "Namespace of the Service",
          "type": "string",
          "x-go-name": "Namespace"
        },
        "selector": {
          "description": "Selector for Service",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "x-go-name": "Selector"
        },
        "serviceRegistry": {
          "description": "ServiceRegistry values:\nKubernetes: \tis a service registry backed by k8s API server\nExternal: \tis a service registry for externally provided ServiceEntries\nFederation:  special case when registry is provided from a federated environment",
          "type": "string",
          "x-go-name": "ServiceRegistry"
        }
      },
      "x-go-package": "github.com/kiali/kiali/models"
    },
    "ServiceReference": {
      "type": "object",
      "title": "ServiceReference is the key value composed of a Name and Namespace.",
      "properties": {
        "name": {
          "type": "string",
          "x-go-name": "Name"
        },
        "namespace": {
          "type": "string",
          "x-go-name": "Namespace"
        }
      },
      "x-go-package": "github.com/kiali/kiali/models"
    },
    "SeverityLevel": {
      "type": "string",
      "x-go-package": "github.com/kiali/kiali/models"
    },
    "Sidecar": {
      "description": "\u003c!-- crd generation tags\n+cue-gen:Sidecar:groupName:networking.istio.io\n+cue-gen:Sidecar:version:v1alpha3\n+cue-gen:Sidecar:storageVersion\n+cue-gen:Sidecar:annotations:helm.sh/resource-policy=keep\n+cue-gen:Sidecar:labels:app=istio-pilot,chart=istio,heritage=Tiller,release=istio\n+cue-gen:Sidecar:subresource:status\n+cue-gen:Sidecar:scope:Namespaced\n+cue-gen:Sidecar:resource:categories=istio-io,networking-istio-io\n+cue-gen:Sidecar:preserveUnknownFields:false\n\u003e\n\n\u003c!-- go code generation tags\n+kubetype-gen\n+kubetype-gen:groupVersion=networking.istio.io/v1alpha3\n+genclient\n+k8s:deepcopy-gen=true\n\u003e\n\u003c!-- istio code generation tags\n+istio.io/sync-start\n\u003e",
      "type": "object",
      "title": "`Sidecar` describes the configuration of the sidecar proxy that mediates\ninbound and outbound communication of the workload instance to which it is\nattached.",
      "properties": {
        "annotations": {
          "description": "Annotations is an unstructured key value map stored with a resource that may be\nset by external tools to store and retrieve arbitrary metadata. They are not\nqueryable and should be preserved when modifying objects.\nMore info: http://kubernetes.io/docs/user-guide/annotations\n+optional",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "x-go-name": "Annotations"
        },
        "apiVersion": {
          "description": "APIVersion defines the versioned schema of this representation of an object.\nServers should convert recognized schemas to the latest internal value, and\nmay reject unrecognized values.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources\n+optional",
          "type": "string",
          "x-go-name": "APIVersion"
        },
        "clusterName": {
          "description": "The name of the cluster which the object belongs to.\nThis is used to distinguish resources with same name and namespace in different clusters.\nThis field is not set anywhere right now and apiserver is going to ignore it if set in create or update request.\n+optional",
          "type": "string",
          "x-go-name": "ClusterName"
        },
        "creationTimestamp": {
          "$ref": "#/definitions/Time"
        },
        "deletionGracePeriodSeconds": {
          "description": "Number of seconds allowed for this object to gracefully terminate before\nit will be removed from the system. Only set when deletionTimestamp is also set.\nMay only be shortened.\nRead-only.\n+optional",
          "type": "integer",
          "format": "int64",
          "x-go-name": "DeletionGracePeriodSeconds"
        },
        "deletionTimestamp": {
          "$ref": "#/definitions/Time"
        },
        "finalizers": {
          "description": "Must be empty before the object is deleted from the registry. Each entry\nis an identifier for the responsible component that will remove the entry\nfrom the list. If the deletionTimestamp of the object is non-nil, entries\nin this list can only be removed.\nFinalizers may be processed and removed in any order.  Order is NOT enforced\nbecause it introduces significant risk of stuck finalizers.\nfinalizers is a shared field, any actor with permission can reorder it.\nIf the finalizer list is processed in order, then this can lead to a situation\nin which the component responsible for the first finalizer in the list is\nwaiting for a signal (field value, external system, or other) produced by a\ncomponent responsible for a finalizer later in the list, resulting in a deadlock.\nWithout enforced ordering finalizers are free to order amongst themselves and\nare not vulnerable to ordering changes in the list.\n+optional\n+patchStrategy=merge",
          "type": "array",
          "items": {
            "type": "string"
          },
          "x-go-name": "Finalizers"
        },
        "generateName": {
          "description": "GenerateName is an optional prefix, used by the server, to generate a unique\nname ONLY IF the Name field has not been provided.\nIf this field is used, the name returned to the client will be different\nthan the name passed. This value will also be combined with a unique suffix.\nThe provided value has the same validation rules as the Name field,\nand may be truncated by the length of the suffix required to make the value\nunique on the server.\n\nIf this field is specified and the generated name exists, the server will\nNOT return a 409 - instead, it will either return 201 Created or 500 with Reason\nServerTimeout indicating a unique name could not be found in the time allotted, and the client\nshould retry (optionally after the time indicated in the Retry-After header).\n\nApplied only if Name is not specified.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#idempotency\n+optional",
          "type": "string",
          "x-go-name": "GenerateName"
        },
        "generation": {
          "description": "A sequence number representing a specific generation of the desired state.\nPopulated by the system. Read-only.\n+optional",
          "type": "integer",
          "format": "int64",
          "x-go-name": "Generation"
        },
        "kind": {
          "description": "Kind is a string value representing the REST resource this object represents.\nServers may infer this from the endpoint the client submits requests to.\nCannot be updated.\nIn CamelCase.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\n+optional",
          "type": "string",
          "x-go-name": "Kind"
        },
        "labels": {
          "description": "Map of string keys and values that can be used to organize and categorize\n(scope and select) objects. May match selectors of replication controllers\nand services.\nMore info: http://kubernetes.io/docs/user-guide/labels\n+optional",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "x-go-name": "Labels"
        },
        "managedFields": {
          "description": "ManagedFields maps workflow-id and version to the set of fields\nthat are managed by that workflow. This is mostly for internal\nhousekeeping, and users typically shouldn't need to set or\nunderstand this field. A workflow can be the user's name, a\ncontroller's name, or the name of a specific apply path like\n\"ci-cd\". The set of fields is always in the version that the\nworkflow used when modifying the object.\n\n+optional",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ManagedFieldsEntry"
          },
          "x-go-name": "ManagedFields"
        },
        "name": {
          "description": "Name must be unique within a namespace. Is required when creating resources, although\nsome resources may allow a client to request the generation of an appropriate name\nautomatically. Name is primarily intended for creation idempotence and configuration\ndefinition.\nCannot be updated.\nMore info: http://kubernetes.io/docs/user-guide/identifiers#names\n+optional",
          "type": "string",
          "x-go-name": "Name"
        },
        "namespace": {
          "description": "Namespace defines the space within which each name must be unique. An empty namespace is\nequivalent to the \"default\" namespace, but \"default\" is the canonical representation.\nNot all objects are required to be scoped to a namespace - the value of this field for\nthose objects will be empty.\n\nMust be a DNS_LABEL.\nCannot be updated.\nMore info: http://kubernetes.io/docs/user-guide/namespaces\n+optional",
          "type": "string",
          "x-go-name": "Namespace"
        },
        "ownerReferences": {
          "description": "List of objects depended by this object. If ALL objects in the list have\nbeen deleted, this object will be garbage collected. If this object is managed by a controller,\nthen an entry in this list will point to this controller, with the controller field set to true.\nThere cannot be more than one managing controller.\n+optional\n+patchMergeKey=uid\n+patchStrategy=merge",
          "type": "array",
          "items": {
            "$ref": "#/definitions/OwnerReference"
          },
          "x-go-name": "OwnerReferences"
        },
        "resourceVersion": {
          "description": "An opaque value that represents the internal version of this object that can\nbe used by clients to determine when objects have changed. May be used for optimistic\nconcurrency, change detection, and the watch operation on a resource or set of resources.\nClients must treat these values as opaque and passed unmodified back to the server.\nThey may only be valid for a particular resource or set of resources.\n\nPopulated by the system.\nRead-only.\nValue must be treated as opaque by clients and .\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency\n+optional",
          "type": "string",
          "x-go-name": "ResourceVersion"
        },
        "selfLink": {
          "description": "SelfLink is a URL representing this object.\nPopulated by the system.\nRead-only.\n\nDEPRECATED\nKubernetes will stop propagating this field in 1.20 release and the field is planned\nto be removed in 1.21 release.\n+optional",
          "type": "string",
          "x-go-name": "SelfLink"
        },
        "spec": {
          "$ref": "#/definitions/Sidecar"
        },
        "status": {
          "$ref": "#/definitions/IstioStatus"
        },
        "uid": {
          "$ref": "#/definitions/UID"
        }
      },
      "x-go-package": "istio.io/client-go/pkg/apis/networking/v1alpha3"
    },
    "Span": {
      "description": "Span is a span denoting a piece of work in some infrastructure\nWhen converting to UI model, ParentSpanID and Process should be dereferenced into\nReferences and ProcessID, respectively.\nWhen converting to ES model, ProcessID and Warnings should be omitted. Even if\nincluded, ES with dynamic settings off will automatically ignore unneeded fields.",
      "type": "object",
      "properties": {
        "duration": {
          "type": "integer",
          "format": "uint64",
          "x-go-name": "Duration"
        },
        "flags": {
          "type": "integer",
          "format": "uint32",
          "x-go-name": "Flags"
        },
        "logs": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Log"
          },
          "x-go-name": "Logs"
        },
        "operationName": {
          "type": "string",
          "x-go-name": "OperationName"
        },
        "parentSpanID": {
          "$ref": "#/definitions/SpanID"
        },
        "process": {
          "$ref": "#/definitions/Process"
        },
        "processID": {
          "$ref": "#/definitions/ProcessID"
        },
        "references": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Reference"
          },
          "x-go-name": "References"
        },
        "spanID": {
          "$ref": "#/definitions/SpanID"
        },
        "startTime": {
          "type": "integer",
          "format": "uint64",
          "x-go-name": "StartTime"
        },
        "tags": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/KeyValue"
          },
          "x-go-name": "Tags"
        },
        "traceID": {
          "$ref": "#/definitions/TraceID"
        },
        "warnings": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "x-go-name": "Warnings"
        }
      },
      "x-go-package": "github.com/kiali/kiali/jaeger/model/json"
    },
    "SpanID": {
      "description": "SpanID is the id of a span",
      "type": "string",
      "x-go-package": "github.com/kiali/kiali/jaeger/model/json"
    },
    "Stat": {
      "description": "Stat holds arbitrary stat name \u0026 value",
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "x-go-name": "Name"
        },
        "value": {
          "type": "number",
          "format": "double",
          "x-go-name": "Value"
        }
      },
      "x-go-package": "github.com/kiali/kiali/models"
    },
    "StatusInfo": {
      "description": "This is used for returning a response of Kiali Status",
      "type": "object",
      "title": "StatusInfo statusInfo",
      "required": [
        "status",
        "externalServices",
        "istioEnvironment"
      ],
      "properties": {
        "externalServices": {
          "description": "An array of external services installed",
          "type": "array",
          "items": {
            "$ref": "#/definitions/externalServiceInfo"
          },
          "x-go-name": "ExternalServices"
        },
        "istioEnvironment": {
          "$ref": "#/definitions/IstioEnvironment"
        },
        "status": {
          "description": "The state of Kiali\nA hash of key,values with versions of Kiali and state",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "x-go-name": "Status"
        },
        "warningMessages": {
          "description": "An array of warningMessages",
          "type": "array",
          "items": {
            "type": "string",
            "example": "Istio version 0.7.1 is not supported, the version should be 0.8.0"
          },
          "x-go-name": "WarningMessages"
        }
      },
      "x-go-package": "github.com/kiali/kiali/status"
    },
    "Target": {
      "type": "object",
      "properties": {
        "Kind": {
          "type": "string"
        },
        "Name": {
          "type": "string"
        },
        "Namespace": {
          "type": "string"
        }
      },
      "x-go-package": "github.com/kiali/kiali/models"
    },
    "Time": {
      "description": "+protobuf.options.marshal=false\n+protobuf.as=Timestamp\n+protobuf.options.(gogoproto.goproto_stringer)=false",
      "type": "object",
      "title": "Time is a wrapper around time.Time which supports correct\nmarshaling to YAML and JSON.  Wrappers are provided for many\nof the factory methods that the time package offers.",
      "x-go-package": "k8s.io/apimachinery/pkg/apis/meta/v1"
    },
    "Timestamp": {
      "description": "All minutes are 60 seconds long. Leap seconds are \"smeared\" so that no leap\nsecond table is needed for interpretation, using a [24-hour linear\nsmear](https://developers.google.com/time/smear).\n\nThe range is from 0001-01-01T00:00:00Z to 9999-12-31T23:59:59.999999999Z. By\nrestricting to that range, we ensure that we can convert to and from [RFC\n3339](https://www.ietf.org/rfc/rfc3339.txt) date strings.\n\n# Examples\n\nExample 1: Compute Timestamp from POSIX `time()`.\n\nTimestamp timestamp;\ntimestamp.set_seconds(time(NULL));\ntimestamp.set_nanos(0);\n\nExample 2: Compute Timestamp from POSIX `gettimeofday()`.\n\nstruct timeval tv;\ngettimeofday(\u0026tv, NULL);\n\nTimestamp timestamp;\ntimestamp.set_seconds(tv.tv_sec);\ntimestamp.set_nanos(tv.tv_usec * 1000);\n\nExample 3: Compute Timestamp from Win32 `GetSystemTimeAsFileTime()`.\n\nFILETIME ft;\nGetSystemTimeAsFileTime(\u0026ft);\nUINT64 ticks = (((UINT64)ft.dwHighDateTime) \u003c\u003c 32) | ft.dwLowDateTime;\n\nA Windows tick is 100 nanoseconds. Windows epoch 1601-01-01T00:00:00Z\nis 11644473600 seconds before Unix epoch 1970-01-01T00:00:00Z.\nTimestamp timestamp;\ntimestamp.set_seconds((INT64) ((ticks / 10000000) - 11644473600LL));\ntimestamp.set_nanos((INT32) ((ticks % 10000000) * 100));\n\nExample 4: Compute Timestamp from Java `System.currentTimeMillis()`.\n\nlong millis = System.currentTimeMillis();\n\nTimestamp timestamp = Timestamp.newBuilder().setSeconds(millis / 1000)\n.setNanos((int) ((millis % 1000) * 1000000)).build();\n\n\nExample 5: Compute Timestamp from current time in Python.\n\ntimestamp = Timestamp()\ntimestamp.GetCurrentTime()\n\n# JSON Mapping\n\nIn JSON format, the Timestamp type is encoded as a string in the\n[RFC 3339](https://www.ietf.org/rfc/rfc3339.txt) format. That is, the\nformat is \"{year}-{month}-{day}T{hour}:{min}:{sec}[.{frac_sec}]Z\"\nwhere {year} is always expressed using four digits while {month}, {day},\n{hour}, {min}, and {sec} are zero-padded to two digits each. The fractional\nseconds, which can go up to 9 digits (i.e. up to 1 nanosecond resolution),\nare optional. The \"Z\" suffix indicates the timezone (\"UTC\"); the timezone\nis required. A proto3 JSON serializer should always use UTC (as indicated by\n\"Z\") when printing the Timestamp type and a proto3 JSON parser should be\nable to accept both UTC and other timezones (as indicated by an offset).\n\nFor example, \"2017-01-15T01:30:15.01Z\" encodes 15.01 seconds past\n01:30 UTC on January 15, 2017.\n\nIn JavaScript, one can convert a Date object to this format using the\nstandard\n[toISOString()](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date/toISOString)\nmethod. In Python, a standard `datetime.datetime` object can be converted\nto this format using\n[`strftime`](https://docs.python.org/2/library/time.html#time.strftime) with\nthe time format spec '%Y-%m-%dT%H:%M:%S.%fZ'. Likewise, in Java, one can use\nthe Joda Time's [`ISODateTimeFormat.dateTime()`](\nhttp://www.joda.org/joda-time/apidocs/org/joda/time/format/ISODateTimeFormat.html#dateTime%2D%2D\n) to obtain a formatter capable of generating timestamps in this format.",
      "type": "object",
      "title": "A Timestamp represents a point in time independent of any time zone or local\ncalendar, encoded as a count of seconds and fractions of seconds at\nnanosecond resolution. The count is relative to an epoch at UTC midnight on\nJanuary 1, 1970, in the proleptic Gregorian calendar which extends the\nGregorian calendar backwards to year one.",
      "properties": {
        "nanos": {
          "description": "Non-negative fractions of a second at nanosecond resolution. Negative\nsecond values with fractions must still have non-negative nanos values\nthat count forward in time. Must be from 0 to 999,999,999\ninclusive.",
          "type": "integer",
          "format": "int32",
          "x-go-name": "Nanos"
        },
        "seconds": {
          "description": "Represents seconds of UTC time since Unix epoch\n1970-01-01T00:00:00Z. Must be from 0001-01-01T00:00:00Z to\n9999-12-31T23:59:59Z inclusive.",
          "type": "integer",
          "format": "int64",
          "x-go-name": "Seconds"
        }
      },
      "x-go-package": "github.com/gogo/protobuf/types"
    },
    "TokenResponse": {
      "description": "This is used for returning the token",
      "type": "object",
      "title": "TokenResponse tokenResponse",
      "required": [
        "username",
        "token",
        "expiresOn"
      ],
      "properties": {
        "expiresOn": {
          "description": "The expired time for the token\nA string with the Datetime when the token will be expired",
          "type": "string",
          "x-go-name": "ExpiresOn",
          "example": "Thu, 07 Mar 2019 17:50:26 +0000"
        },
        "token": {
          "description": "The authentication token\nA string with the authentication token for the user",
          "type": "string",
          "x-go-name": "Token",
          "example": "zI1NiIsIsR5cCI6IkpXVCJ9.ezJ1c2VybmFtZSI6ImFkbWluIiwiZXhwIjoxNTI5NTIzNjU0fQ.PPZvRGnR6VA4v7FmgSfQcGQr-VD"
        },
        "username": {
          "description": "The username for the token\nA string with the user's username",
          "type": "string",
          "x-go-name": "Username",
          "example": "admin"
        }
      },
      "x-go-package": "github.com/kiali/kiali/handlers"
    },
    "Trace": {
      "description": "Trace is a list of spans",
      "type": "object",
      "properties": {
        "processes": {
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/Process"
          },
          "x-go-name": "Processes"
        },
        "spans": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Span"
          },
          "x-go-name": "Spans"
        },
        "traceID": {
          "$ref": "#/definitions/TraceID"
        },
        "warnings": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "x-go-name": "Warnings"
        }
      },
      "x-go-package": "github.com/kiali/kiali/jaeger/model/json"
    },
    "TraceID": {
      "type": "string",
      "title": "TraceID is the shared trace ID of all spans in the trace.",
      "x-go-package": "github.com/kiali/kiali/jaeger/model/json"
    },
    "UID": {
      "description": "UID is a type that holds unique ID values, including UUIDs.  Because we\ndon't ONLY use UUIDs, this is an alias to string.  Being a type captures\nintent and helps make sure that UIDs and names do not get conflated.",
      "type": "string",
      "x-go-package": "k8s.io/apimachinery/pkg/types"
    },
    "VSInfo": {
      "type": "object",
      "title": "VSInfo contains the resolved VS configuration if the node has a VS attached.",
      "properties": {
        "hostnames": {
          "description": "Hostnames is the list of hostnames configured in the associated VSs",
          "type": "array",
          "items": {
            "type": "string"
          },
          "x-go-name": "Hostnames"
        }
      },
      "x-go-package": "github.com/kiali/kiali/graph/config/cytoscape"
    },
    "ValueType": {
      "type": "string",
      "title": "ValueType is the type of a value stored in KeyValue struct.",
      "x-go-package": "github.com/kiali/kiali/jaeger/model/json"
    },
    "VirtualService": {
      "description": "\u003c!-- crd generation tags\n+cue-gen:VirtualService:groupName:networking.istio.io\n+cue-gen:VirtualService:version:v1alpha3\n+cue-gen:VirtualService:storageVersion\n+cue-gen:VirtualService:annotations:helm.sh/resource-policy=keep\n+cue-gen:VirtualService:labels:app=istio-pilot,chart=istio,heritage=Tiller,release=istio\n+cue-gen:VirtualService:subresource:status\n+cue-gen:VirtualService:scope:Namespaced\n+cue-gen:VirtualService:resource:categories=istio-io,networking-istio-io,shortNames=vs\n+cue-gen:VirtualService:printerColumn:name=Gateways,type=string,JSONPath=.spec.gateways,description=\"The names of gateways and sidecars\nthat should apply these routes\"\n+cue-gen:VirtualService:printerColumn:name=Hosts,type=string,JSONPath=.spec.hosts,description=\"The destination hosts to which traffic is being sent\"\n+cue-gen:VirtualService:printerColumn:name=Age,type=date,JSONPath=.metadata.creationTimestamp,description=\"CreationTimestamp is a timestamp\nrepresenting the server time when this object was created. It is not guaranteed to be set in happens-before order across separate operations.\nClients may not set this value. It is represented in RFC3339 form and is in UTC.\nPopulated by the system. Read-only. Null for lists. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#metadata\"\n+cue-gen:VirtualService:preserveUnknownFields:false\n\u003e\n\n\u003c!-- go code generation tags\n+kubetype-gen\n+kubetype-gen:groupVersion=networking.istio.io/v1alpha3\n+genclient\n+k8s:deepcopy-gen=true\n\u003e\n\u003c!-- istio code generation tags\n+istio.io/sync-start\n\u003e",
      "type": "object",
      "title": "Configuration affecting traffic routing.",
      "properties": {
        "annotations": {
          "description": "Annotations is an unstructured key value map stored with a resource that may be\nset by external tools to store and retrieve arbitrary metadata. They are not\nqueryable and should be preserved when modifying objects.\nMore info: http://kubernetes.io/docs/user-guide/annotations\n+optional",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "x-go-name": "Annotations"
        },
        "apiVersion": {
          "description": "APIVersion defines the versioned schema of this representation of an object.\nServers should convert recognized schemas to the latest internal value, and\nmay reject unrecognized values.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources\n+optional",
          "type": "string",
          "x-go-name": "APIVersion"
        },
        "clusterName": {
          "description": "The name of the cluster which the object belongs to.\nThis is used to distinguish resources with same name and namespace in different clusters.\nThis field is not set anywhere right now and apiserver is going to ignore it if set in create or update request.\n+optional",
          "type": "string",
          "x-go-name": "ClusterName"
        },
        "creationTimestamp": {
          "$ref": "#/definitions/Time"
        },
        "deletionGracePeriodSeconds": {
          "description": "Number of seconds allowed for this object to gracefully terminate before\nit will be removed from the system. Only set when deletionTimestamp is also set.\nMay only be shortened.\nRead-only.\n+optional",
          "type": "integer",
          "format": "int64",
          "x-go-name": "DeletionGracePeriodSeconds"
        },
        "deletionTimestamp": {
          "$ref": "#/definitions/Time"
        },
        "finalizers": {
          "description": "Must be empty before the object is deleted from the registry. Each entry\nis an identifier for the responsible component that will remove the entry\nfrom the list. If the deletionTimestamp of the object is non-nil, entries\nin this list can only be removed.\nFinalizers may be processed and removed in any order.  Order is NOT enforced\nbecause it introduces significant risk of stuck finalizers.\nfinalizers is a shared field, any actor with permission can reorder it.\nIf the finalizer list is processed in order, then this can lead to a situation\nin which the component responsible for the first finalizer in the list is\nwaiting for a signal (field value, external system, or other) produced by a\ncomponent responsible for a finalizer later in the list, resulting in a deadlock.\nWithout enforced ordering finalizers are free to order amongst themselves and\nare not vulnerable to ordering changes in the list.\n+optional\n+patchStrategy=merge",
          "type": "array",
          "items": {
            "type": "string"
          },
          "x-go-name": "Finalizers"
        },
        "generateName": {
          "description": "GenerateName is an optional prefix, used by the server, to generate a unique\nname ONLY IF the Name field has not been provided.\nIf this field is used, the name returned to the client will be different\nthan the name passed. This value will also be combined with a unique suffix.\nThe provided value has the same validation rules as the Name field,\nand may be truncated by the length of the suffix required to make the value\nunique on the server.\n\nIf this field is specified and the generated name exists, the server will\nNOT return a 409 - instead, it will either return 201 Created or 500 with Reason\nServerTimeout indicating a unique name could not be found in the time allotted, and the client\nshould retry (optionally after the time indicated in the Retry-After header).\n\nApplied only if Name is not specified.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#idempotency\n+optional",
          "type": "string",
          "x-go-name": "GenerateName"
        },
        "generation": {
          "description": "A sequence number representing a specific generation of the desired state.\nPopulated by the system. Read-only.\n+optional",
          "type": "integer",
          "format": "int64",
          "x-go-name": "Generation"
        },
        "kind": {
          "description": "Kind is a string value representing the REST resource this object represents.\nServers may infer this from the endpoint the client submits requests to.\nCannot be updated.\nIn CamelCase.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\n+optional",
          "type": "string",
          "x-go-name": "Kind"
        },
        "labels": {
          "description": "Map of string keys and values that can be used to organize and categorize\n(scope and select) objects. May match selectors of replication controllers\nand services.\nMore info: http://kubernetes.io/docs/user-guide/labels\n+optional",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "x-go-name": "Labels"
        },
        "managedFields": {
          "description": "ManagedFields maps workflow-id and version to the set of fields\nthat are managed by that workflow. This is mostly for internal\nhousekeeping, and users typically shouldn't need to set or\nunderstand this field. A workflow can be the user's name, a\ncontroller's name, or the name of a specific apply path like\n\"ci-cd\". The set of fields is always in the version that the\nworkflow used when modifying the object.\n\n+optional",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ManagedFieldsEntry"
          },
          "x-go-name": "ManagedFields"
        },
        "name": {
          "description": "Name must be unique within a namespace. Is required when creating resources, although\nsome resources may allow a client to request the generation of an appropriate name\nautomatically. Name is primarily intended for creation idempotence and configuration\ndefinition.\nCannot be updated.\nMore info: http://kubernetes.io/docs/user-guide/identifiers#names\n+optional",
          "type": "string",
          "x-go-name": "Name"
        },
        "namespace": {
          "description": "Namespace defines the space within which each name must be unique. An empty namespace is\nequivalent to the \"default\" namespace, but \"default\" is the canonical representation.\nNot all objects are required to be scoped to a namespace - the value of this field for\nthose objects will be empty.\n\nMust be a DNS_LABEL.\nCannot be updated.\nMore info: http://kubernetes.io/docs/user-guide/namespaces\n+optional",
          "type": "string",
          "x-go-name": "Namespace"
        },
        "ownerReferences": {
          "description": "List of objects depended by this object. If ALL objects in the list have\nbeen deleted, this object will be garbage collected. If this object is managed by a controller,\nthen an entry in this list will point to this controller, with the controller field set to true.\nThere cannot be more than one managing controller.\n+optional\n+patchMergeKey=uid\n+patchStrategy=merge",
          "type": "array",
          "items": {
            "$ref": "#/definitions/OwnerReference"
          },
          "x-go-name": "OwnerReferences"
        },
        "resourceVersion": {
          "description": "An opaque value that represents the internal version of this object that can\nbe used by clients to determine when objects have changed. May be used for optimistic\nconcurrency, change detection, and the watch operation on a resource or set of resources.\nClients must treat these values as opaque and passed unmodified back to the server.\nThey may only be valid for a particular resource or set of resources.\n\nPopulated by the system.\nRead-only.\nValue must be treated as opaque by clients and .\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency\n+optional",
          "type": "string",
          "x-go-name": "ResourceVersion"
        },
        "selfLink": {
          "description": "SelfLink is a URL representing this object.\nPopulated by the system.\nRead-only.\n\nDEPRECATED\nKubernetes will stop propagating this field in 1.20 release and the field is planned\nto be removed in 1.21 release.\n+optional",
          "type": "string",
          "x-go-name": "SelfLink"
        },
        "spec": {
          "$ref": "#/definitions/VirtualService"
        },
        "status": {
          "$ref": "#/definitions/IstioStatus"
        },
        "uid": {
          "$ref": "#/definitions/UID"
        }
      },
      "x-go-package": "istio.io/client-go/pkg/apis/networking/v1alpha3"
    },
    "WEInfo": {
      "description": "WEInfo provides static information about a workload entry\nassociated with a workload node.",
      "type": "object",
      "required": [
        "name"
      ],
      "properties": {
        "name": {
          "description": "Name of the workload entry object",
          "type": "string",
          "x-go-name": "Name"
        }
      },
      "x-go-package": "github.com/kiali/kiali/graph"
    },
    "Workload": {
      "description": "Workload has the details of a workload",
      "type": "object",
      "required": [
        "name",
        "type",
        "createdAt",
        "resourceVersion",
        "istioSidecar",
        "appLabel",
        "versionLabel",
        "podCount",
        "desiredReplicas",
        "currentReplicas",
        "availableReplicas"
      ],
      "properties": {
        "additionalDetailSample": {
          "$ref": "#/definitions/AdditionalItem"
        },
        "additionalDetails": {
          "description": "Additional details to display, such as configured annotations",
          "type": "array",
          "items": {
            "$ref": "#/definitions/AdditionalItem"
          },
          "x-go-name": "AdditionalDetails"
        },
        "appLabel": {
          "description": "Define if Pods related to this Workload has the label App",
          "type": "boolean",
          "x-go-name": "AppLabel",
          "example": true
        },
        "availableReplicas": {
          "description": "Number of available replicas",
          "type": "integer",
          "format": "int32",
          "x-go-name": "AvailableReplicas",
          "example": 1
        },
        "createdAt": {
          "description": "Creation timestamp (in RFC3339 format)",
          "type": "string",
          "x-go-name": "CreatedAt",
          "example": "2018-07-31T12:24:17Z"
        },
        "currentReplicas": {
          "description": "Number of current replicas pods that matches controller selector labels",
          "type": "integer",
          "format": "int32",
          "x-go-name": "CurrentReplicas",
          "example": 2
        },
        "dashboardAnnotations": {
          "description": "Dashboard annotations",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "x-go-name": "DashboardAnnotations"
        },
        "desiredReplicas": {
          "description": "Number of desired replicas defined by the user in the controller Spec",
          "type": "integer",
          "format": "int32",
          "x-go-name": "DesiredReplicas",
          "example": 2
        },
        "healthAnnotations": {
          "description": "HealthAnnotations",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "x-go-name": "HealthAnnotations"
        },
        "istioInjectionAnnotation": {
          "description": "Define if Workload has an explicit Istio policy annotation\nIstio supports this as a label as well - this will be defined if the label is set, too.\nIf both annotation and label are set, if any is false, injection is disabled.\nIt's mapped as a pointer to show three values nil, true, false",
          "type": "boolean",
          "x-go-name": "IstioInjectionAnnotation"
        },
        "istioReferences": {
          "description": "Istio References",
          "type": "array",
          "items": {
            "$ref": "#/definitions/IstioValidationKey"
          },
          "x-go-name": "IstioReferences"
        },
        "istioSidecar": {
          "description": "Define if Pods related to this Workload has an IstioSidecar deployed",
          "type": "boolean",
          "x-go-name": "IstioSidecar",
          "example": true
        },
        "labels": {
          "description": "Workload labels",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "x-go-name": "Labels"
        },
        "name": {
          "description": "Name of the workload",
          "type": "string",
          "x-go-name": "Name",
          "example": "reviews-v1"
        },
        "podCount": {
          "description": "Number of current workload pods",
          "type": "integer",
          "format": "int64",
          "x-go-name": "PodCount",
          "example": 1
        },
        "pods": {
          "$ref": "#/definitions/Pods"
        },
        "resourceVersion": {
          "description": "Kubernetes ResourceVersion",
          "type": "string",
          "x-go-name": "ResourceVersion",
          "example": "192892127"
        },
        "runtimes": {
          "description": "Runtimes and associated dashboards",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Runtime"
          },
          "x-go-name": "Runtimes"
        },
        "serviceAccountNames": {
          "description": "Names of the workload service accounts",
          "type": "array",
          "items": {
            "type": "string"
          },
          "x-go-name": "ServiceAccountNames"
        },
        "services": {
          "description": "Services that match workload selector",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ServiceOverview"
          },
          "x-go-name": "Services"
        },
        "type": {
          "description": "Type of the workload",
          "type": "string",
          "x-go-name": "Type",
          "example": "deployment"
        },
        "validations": {
          "$ref": "#/definitions/IstioValidations"
        },
        "versionLabel": {
          "description": "Define if Pods related to this Workload has the label Version",
          "type": "boolean",
          "x-go-name": "VersionLabel",
          "example": true
        }
      },
      "x-go-package": "github.com/kiali/kiali/models"
    },
    "WorkloadEntry": {
      "description": "\u003c!-- crd generation tags\n+cue-gen:WorkloadEntry:groupName:networking.istio.io\n+cue-gen:WorkloadEntry:version:v1alpha3\n+cue-gen:WorkloadEntry:storageVersion\n+cue-gen:WorkloadEntry:annotations:helm.sh/resource-policy=keep\n+cue-gen:WorkloadEntry:labels:app=istio-pilot,chart=istio,heritage=Tiller,release=istio\n+cue-gen:WorkloadEntry:subresource:status\n+cue-gen:WorkloadEntry:scope:Namespaced\n+cue-gen:WorkloadEntry:resource:categories=istio-io,networking-istio-io,shortNames=we,plural=workloadentries\n+cue-gen:WorkloadEntry:printerColumn:name=Age,type=date,JSONPath=.metadata.creationTimestamp,description=\"CreationTimestamp is a timestamp\nrepresenting the server time when this object was created. It is not guaranteed to be set in happens-before order across separate operations.\nClients may not set this value. It is represented in RFC3339 form and is in UTC.\nPopulated by the system. Read-only. Null for lists. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#metadata\"\n+cue-gen:WorkloadEntry:printerColumn:name=Address,type=string,JSONPath=.spec.address,description=\"Address associated with the network endpoint.\"\n+cue-gen:WorkloadEntry:preserveUnknownFields:false\n\u003e\n\n\u003c!-- go code generation tags\n+kubetype-gen\n+kubetype-gen:groupVersion=networking.istio.io/v1alpha3\n+genclient\n+k8s:deepcopy-gen=true\n\u003e\n\u003c!-- istio code generation tags\n+istio.io/sync-start\n\u003e",
      "type": "object",
      "title": "WorkloadEntry enables specifying the properties of a single non-Kubernetes workload such a VM or a bare metal services that can be referred to by service entries.",
      "properties": {
        "annotations": {
          "description": "Annotations is an unstructured key value map stored with a resource that may be\nset by external tools to store and retrieve arbitrary metadata. They are not\nqueryable and should be preserved when modifying objects.\nMore info: http://kubernetes.io/docs/user-guide/annotations\n+optional",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "x-go-name": "Annotations"
        },
        "apiVersion": {
          "description": "APIVersion defines the versioned schema of this representation of an object.\nServers should convert recognized schemas to the latest internal value, and\nmay reject unrecognized values.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources\n+optional",
          "type": "string",
          "x-go-name": "APIVersion"
        },
        "clusterName": {
          "description": "The name of the cluster which the object belongs to.\nThis is used to distinguish resources with same name and namespace in different clusters.\nThis field is not set anywhere right now and apiserver is going to ignore it if set in create or update request.\n+optional",
          "type": "string",
          "x-go-name": "ClusterName"
        },
        "creationTimestamp": {
          "$ref": "#/definitions/Time"
        },
        "deletionGracePeriodSeconds": {
          "description": "Number of seconds allowed for this object to gracefully terminate before\nit will be removed from the system. Only set when deletionTimestamp is also set.\nMay only be shortened.\nRead-only.\n+optional",
          "type": "integer",
          "format": "int64",
          "x-go-name": "DeletionGracePeriodSeconds"
        },
        "deletionTimestamp": {
          "$ref": "#/definitions/Time"
        },
        "finalizers": {
          "description": "Must be empty before the object is deleted from the registry. Each entry\nis an identifier for the responsible component that will remove the entry\nfrom the list. If the deletionTimestamp of the object is non-nil, entries\nin this list can only be removed.\nFinalizers may be processed and removed in any order.  Order is NOT enforced\nbecause it introduces significant risk of stuck finalizers.\nfinalizers is a shared field, any actor with permission can reorder it.\nIf the finalizer list is processed in order, then this can lead to a situation\nin which the component responsible for the first finalizer in the list is\nwaiting for a signal (field value, external system, or other) produced by a\ncomponent responsible for a finalizer later in the list, resulting in a deadlock.\nWithout enforced ordering finalizers are free to order amongst themselves and\nare not vulnerable to ordering changes in the list.\n+optional\n+patchStrategy=merge",
          "type": "array",
          "items": {
            "type": "string"
          },
          "x-go-name": "Finalizers"
        },
        "generateName": {
          "description": "GenerateName is an optional prefix, used by the server, to generate a unique\nname ONLY IF the Name field has not been provided.\nIf this field is used, the name returned to the client will be different\nthan the name passed. This value will also be combined with a unique suffix.\nThe provided value has the same validation rules as the Name field,\nand may be truncated by the length of the suffix required to make the value\nunique on the server.\n\nIf this field is specified and the generated name exists, the server will\nNOT return a 409 - instead, it will either return 201 Created or 500 with Reason\nServerTimeout indicating a unique name could not be found in the time allotted, and the client\nshould retry (optionally after the time indicated in the Retry-After header).\n\nApplied only if Name is not specified.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#idempotency\n+optional",
          "type": "string",
          "x-go-name": "GenerateName"
        },
        "generation": {
          "description": "A sequence number representing a specific generation of the desired state.\nPopulated by the system. Read-only.\n+optional",
          "type": "integer",
          "format": "int64",
          "x-go-name": "Generation"
        },
        "kind": {
          "description": "Kind is a string value representing the REST resource this object represents.\nServers may infer this from the endpoint the client submits requests to.\nCannot be updated.\nIn CamelCase.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\n+optional",
          "type": "string",
          "x-go-name": "Kind"
        },
        "labels": {
          "description": "Map of string keys and values that can be used to organize and categorize\n(scope and select) objects. May match selectors of replication controllers\nand services.\nMore info: http://kubernetes.io/docs/user-guide/labels\n+optional",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "x-go-name": "Labels"
        },
        "managedFields": {
          "description": "ManagedFields maps workflow-id and version to the set of fields\nthat are managed by that workflow. This is mostly for internal\nhousekeeping, and users typically shouldn't need to set or\nunderstand this field. A workflow can be the user's name, a\ncontroller's name, or the name of a specific apply path like\n\"ci-cd\". The set of fields is always in the version that the\nworkflow used when modifying the object.\n\n+optional",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ManagedFieldsEntry"
          },
          "x-go-name": "ManagedFields"
        },
        "name": {
          "description": "Name must be unique within a namespace. Is required when creating resources, although\nsome resources may allow a client to request the generation of an appropriate name\nautomatically. Name is primarily intended for creation idempotence and configuration\ndefinition.\nCannot be updated.\nMore info: http://kubernetes.io/docs/user-guide/identifiers#names\n+optional",
          "type": "string",
          "x-go-name": "Name"
        },
        "namespace": {
          "description": "Namespace defines the space within which each name must be unique. An empty namespace is\nequivalent to the \"default\" namespace, but \"default\" is the canonical representation.\nNot all objects are required to be scoped to a namespace - the value of this field for\nthose objects will be empty.\n\nMust be a DNS_LABEL.\nCannot be updated.\nMore info: http://kubernetes.io/docs/user-guide/namespaces\n+optional",
          "type": "string",
          "x-go-name": "Namespace"
        },
        "ownerReferences": {
          "description": "List of objects depended by this object. If ALL objects in the list have\nbeen deleted, this object will be garbage collected. If this object is managed by a controller,\nthen an entry in this list will point to this controller, with the controller field set to true.\nThere cannot be more than one managing controller.\n+optional\n+patchMergeKey=uid\n+patchStrategy=merge",
          "type": "array",
          "items": {
            "$ref": "#/definitions/OwnerReference"
          },
          "x-go-name": "OwnerReferences"
        },
        "resourceVersion": {
          "description": "An opaque value that represents the internal version of this object that can\nbe used by clients to determine when objects have changed. May be used for optimistic\nconcurrency, change detection, and the watch operation on a resource or set of resources.\nClients must treat these values as opaque and passed unmodified back to the server.\nThey may only be valid for a particular resource or set of resources.\n\nPopulated by the system.\nRead-only.\nValue must be treated as opaque by clients and .\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency\n+optional",
          "type": "string",
          "x-go-name": "ResourceVersion"
        },
        "selfLink": {
          "description": "SelfLink is a URL representing this object.\nPopulated by the system.\nRead-only.\n\nDEPRECATED\nKubernetes will stop propagating this field in 1.20 release and the field is planned\nto be removed in 1.21 release.\n+optional",
          "type": "string",
          "x-go-name": "SelfLink"
        },
        "spec": {
          "$ref": "#/definitions/WorkloadEntry"
        },
        "status": {
          "$ref": "#/definitions/IstioStatus"
        },
        "uid": {
          "$ref": "#/definitions/UID"
        }
      },
      "x-go-package": "istio.io/client-go/pkg/apis/networking/v1alpha3"
    },
    "WorkloadGroup": {
      "description": "\u003c!-- crd generation tags\n+cue-gen:WorkloadGroup:groupName:networking.istio.io\n+cue-gen:WorkloadGroup:version:v1alpha3\n+cue-gen:WorkloadGroup:storageVersion\n+cue-gen:WorkloadGroup:labels:app=istio-pilot,chart=istio,heritage=Tiller,release=istio\n+cue-gen:WorkloadGroup:subresource:status\n+cue-gen:WorkloadGroup:scope:Namespaced\n+cue-gen:WorkloadGroup:resource:categories=istio-io,networking-istio-io,shortNames=wg,plural=workloadgroups\n+cue-gen:WorkloadGroup:printerColumn:name=Age,type=date,JSONPath=.metadata.creationTimestamp,description=\"CreationTimestamp is a timestamp\nrepresenting the server time when this object was created. It is not guaranteed to be set in happens-before order across separate operations.\nClients may not set this value. It is represented in RFC3339 form and is in UTC.\nPopulated by the system. Read-only. Null for lists. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#metadata\"\n+cue-gen:WorkloadGroup:preserveUnknownFields:false\n\u003e\n\n\u003c!-- go code generation tags\n+kubetype-gen\n+kubetype-gen:groupVersion=networking.istio.io/v1alpha3\n+genclient\n+k8s:deepcopy-gen=true\n\u003e",
      "type": "object",
      "title": "`WorkloadGroup` enables specifying the properties of a single workload for bootstrap and\nprovides a template for `WorkloadEntry`, similar to how `Deployment` specifies properties\nof workloads via `Pod` templates. A `WorkloadGroup` can have more than one `WorkloadEntry`.\n`WorkloadGroup` has no relationship to resources which control service registry like `ServiceEntry`\nand as such doesn't configure host name for these workloads.",
      "properties": {
        "annotations": {
          "description": "Annotations is an unstructured key value map stored with a resource that may be\nset by external tools to store and retrieve arbitrary metadata. They are not\nqueryable and should be preserved when modifying objects.\nMore info: http://kubernetes.io/docs/user-guide/annotations\n+optional",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "x-go-name": "Annotations"
        },
        "apiVersion": {
          "description": "APIVersion defines the versioned schema of this representation of an object.\nServers should convert recognized schemas to the latest internal value, and\nmay reject unrecognized values.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources\n+optional",
          "type": "string",
          "x-go-name": "APIVersion"
        },
        "clusterName": {
          "description": "The name of the cluster which the object belongs to.\nThis is used to distinguish resources with same name and namespace in different clusters.\nThis field is not set anywhere right now and apiserver is going to ignore it if set in create or update request.\n+optional",
          "type": "string",
          "x-go-name": "ClusterName"
        },
        "creationTimestamp": {
          "$ref": "#/definitions/Time"
        },
        "deletionGracePeriodSeconds": {
          "description": "Number of seconds allowed for this object to gracefully terminate before\nit will be removed from the system. Only set when deletionTimestamp is also set.\nMay only be shortened.\nRead-only.\n+optional",
          "type": "integer",
          "format": "int64",
          "x-go-name": "DeletionGracePeriodSeconds"
        },
        "deletionTimestamp": {
          "$ref": "#/definitions/Time"
        },
        "finalizers": {
          "description": "Must be empty before the object is deleted from the registry. Each entry\nis an identifier for the responsible component that will remove the entry\nfrom the list. If the deletionTimestamp of the object is non-nil, entries\nin this list can only be removed.\nFinalizers may be processed and removed in any order.  Order is NOT enforced\nbecause it introduces significant risk of stuck finalizers.\nfinalizers is a shared field, any actor with permission can reorder it.\nIf the finalizer list is processed in order, then this can lead to a situation\nin which the component responsible for the first finalizer in the list is\nwaiting for a signal (field value, external system, or other) produced by a\ncomponent responsible for a finalizer later in the list, resulting in a deadlock.\nWithout enforced ordering finalizers are free to order amongst themselves and\nare not vulnerable to ordering changes in the list.\n+optional\n+patchStrategy=merge",
          "type": "array",
          "items": {
            "type": "string"
          },
          "x-go-name": "Finalizers"
        },
        "generateName": {
          "description": "GenerateName is an optional prefix, used by the server, to generate a unique\nname ONLY IF the Name field has not been provided.\nIf this field is used, the name returned to the client will be different\nthan the name passed. This value will also be combined with a unique suffix.\nThe provided value has the same validation rules as the Name field,\nand may be truncated by the length of the suffix required to make the value\nunique on the server.\n\nIf this field is specified and the generated name exists, the server will\nNOT return a 409 - instead, it will either return 201 Created or 500 with Reason\nServerTimeout indicating a unique name could not be found in the time allotted, and the client\nshould retry (optionally after the time indicated in the Retry-After header).\n\nApplied only if Name is not specified.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#idempotency\n+optional",
          "type": "string",
          "x-go-name": "GenerateName"
        },
        "generation": {
          "description": "A sequence number representing a specific generation of the desired state.\nPopulated by the system. Read-only.\n+optional",
          "type": "integer",
          "format": "int64",
          "x-go-name": "Generation"
        },
        "kind": {
          "description": "Kind is a string value representing the REST resource this object represents.\nServers may infer this from the endpoint the client submits requests to.\nCannot be updated.\nIn CamelCase.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\n+optional",
          "type": "string",
          "x-go-name": "Kind"
        },
        "labels": {
          "description": "Map of string keys and values that can be used to organize and categorize\n(scope and select) objects. May match selectors of replication controllers\nand services.\nMore info: http://kubernetes.io/docs/user-guide/labels\n+optional",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "x-go-name": "Labels"
        },
        "managedFields": {
          "description": "ManagedFields maps workflow-id and version to the set of fields\nthat are managed by that workflow. This is mostly for internal\nhousekeeping, and users typically shouldn't need to set or\nunderstand this field. A workflow can be the user's name, a\ncontroller's name, or the name of a specific apply path like\n\"ci-cd\". The set of fields is always in the version that the\nworkflow used when modifying the object.\n\n+optional",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ManagedFieldsEntry"
          },
          "x-go-name": "ManagedFields"
        },
        "name": {
          "description": "Name must be unique within a namespace. Is required when creating resources, although\nsome resources may allow a client to request the generation of an appropriate name\nautomatically. Name is primarily intended for creation idempotence and configuration\ndefinition.\nCannot be updated.\nMore info: http://kubernetes.io/docs/user-guide/identifiers#names\n+optional",
          "type": "string",
          "x-go-name": "Name"
        },
        "namespace": {
          "description": "Namespace defines the space within which each name must be unique. An empty namespace is\nequivalent to the \"default\" namespace, but \"default\" is the canonical representation.\nNot all objects are required to be scoped to a namespace - the value of this field for\nthose objects will be empty.\n\nMust be a DNS_LABEL.\nCannot be updated.\nMore info: http://kubernetes.io/docs/user-guide/namespaces\n+optional",
          "type": "string",
          "x-go-name": "Namespace"
        },
        "ownerReferences": {
          "description": "List of objects depended by this object. If ALL objects in the list have\nbeen deleted, this object will be garbage collected. If this object is managed by a controller,\nthen an entry in this list will point to this controller, with the controller field set to true.\nThere cannot be more than one managing controller.\n+optional\n+patchMergeKey=uid\n+patchStrategy=merge",
          "type": "array",
          "items": {
            "$ref": "#/definitions/OwnerReference"
          },
          "x-go-name": "OwnerReferences"
        },
        "resourceVersion": {
          "description": "An opaque value that represents the internal version of this object that can\nbe used by clients to determine when objects have changed. May be used for optimistic\nconcurrency, change detection, and the watch operation on a resource or set of resources.\nClients must treat these values as opaque and passed unmodified back to the server.\nThey may only be valid for a particular resource or set of resources.\n\nPopulated by the system.\nRead-only.\nValue must be treated as opaque by clients and .\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency\n+optional",
          "type": "string",
          "x-go-name": "ResourceVersion"
        },
        "selfLink": {
          "description": "SelfLink is a URL representing this object.\nPopulated by the system.\nRead-only.\n\nDEPRECATED\nKubernetes will stop propagating this field in 1.20 release and the field is planned\nto be removed in 1.21 release.\n+optional",
          "type": "string",
          "x-go-name": "SelfLink"
        },
        "spec": {
          "$ref": "#/definitions/WorkloadGroup"
        },
        "status": {
          "$ref": "#/definitions/IstioStatus"
        },
        "uid": {
          "$ref": "#/definitions/UID"
        }
      },
      "x-go-package": "istio.io/client-go/pkg/apis/networking/v1alpha3"
    },
    "WorkloadHealth": {
      "description": "WorkloadHealth contains aggregated health from various sources, for a given workload",
      "type": "object",
      "properties": {
        "requests": {
          "$ref": "#/definitions/RequestHealth"
        },
        "workloadStatus": {
          "$ref": "#/definitions/WorkloadStatus"
        }
      },
      "x-go-package": "github.com/kiali/kiali/models"
    },
    "WorkloadItem": {
      "type": "object",
      "required": [
        "workloadName",
        "istioSidecar",
        "serviceAccountNames"
      ],
      "properties": {
        "istioSidecar": {
          "description": "Define if all Pods related to the Workload has an IstioSidecar deployed",
          "type": "boolean",
          "x-go-name": "IstioSidecar",
          "example": true
        },
        "serviceAccountNames": {
          "description": "List of service accounts involved in this application",
          "type": "array",
          "items": {
            "type": "string"
          },
          "x-go-name": "ServiceAccountNames"
        },
        "workloadName": {
          "description": "Name of a workload member of an application",
          "type": "string",
          "x-go-name": "WorkloadName",
          "example": "reviews-v1"
        }
      },
      "x-go-package": "github.com/kiali/kiali/models"
    },
    "WorkloadList": {
      "type": "object",
      "required": [
        "namespace",
        "workloads"
      ],
      "properties": {
        "namespace": {
          "$ref": "#/definitions/namespace"
        },
        "validations": {
          "$ref": "#/definitions/IstioValidations"
        },
        "workloads": {
          "description": "Workloads for a given namespace",
          "type": "array",
          "items": {
            "$ref": "#/definitions/WorkloadListItem"
          },
          "x-go-name": "Workloads"
        }
      },
      "x-go-package": "github.com/kiali/kiali/models"
    },
    "WorkloadListItem": {
      "description": "WorkloadListItem has the necessary information to display the console workload list",
      "type": "object",
      "required": [
        "name",
        "type",
        "createdAt",
        "resourceVersion",
        "istioSidecar",
        "appLabel",
        "versionLabel",
        "podCount"
      ],
      "properties": {
        "additionalDetailSample": {
          "$ref": "#/definitions/AdditionalItem"
        },
        "appLabel": {
          "description": "Define if Pods related to this Workload has the label App",
          "type": "boolean",
          "x-go-name": "AppLabel",
          "example": true
        },
        "createdAt": {
          "description": "Creation timestamp (in RFC3339 format)",
          "type": "string",
          "x-go-name": "CreatedAt",
          "example": "2018-07-31T12:24:17Z"
        },
        "dashboardAnnotations": {
          "description": "Dashboard annotations",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "x-go-name": "DashboardAnnotations"
        },
        "healthAnnotations": {
          "description": "HealthAnnotations",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "x-go-name": "HealthAnnotations"
        },
        "istioInjectionAnnotation": {
          "description": "Define if Workload has an explicit Istio policy annotation\nIstio supports this as a label as well - this will be defined if the label is set, too.\nIf both annotation and label are set, if any is false, injection is disabled.\nIt's mapped as a pointer to show three values nil, true, false",
          "type": "boolean",
          "x-go-name": "IstioInjectionAnnotation"
        },
        "istioReferences": {
          "description": "Istio References",
          "type": "array",
          "items": {
            "$ref": "#/definitions/IstioValidationKey"
          },
          "x-go-name": "IstioReferences"
        },
        "istioSidecar": {
          "description": "Define if Pods related to this Workload has an IstioSidecar deployed",
          "type": "boolean",
          "x-go-name": "IstioSidecar",
          "example": true
        },
        "labels": {
          "description": "Workload labels",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "x-go-name": "Labels"
        },
        "name": {
          "description": "Name of the workload",
          "type": "string",
          "x-go-name": "Name",
          "example": "reviews-v1"
        },
        "podCount": {
          "description": "Number of current workload pods",
          "type": "integer",
          "format": "int64",
          "x-go-name": "PodCount",
          "example": 1
        },
        "resourceVersion": {
          "description": "Kubernetes ResourceVersion",
          "type": "string",
          "x-go-name": "ResourceVersion",
          "example": "192892127"
        },
        "serviceAccountNames": {
          "description": "Names of the workload service accounts",
          "type": "array",
          "items": {
            "type": "string"
          },
          "x-go-name": "ServiceAccountNames"
        },
        "type": {
          "description": "Type of the workload",
          "type": "string",
          "x-go-name": "Type",
          "example": "deployment"
        },
        "versionLabel": {
          "description": "Define if Pods related to this Workload has the label Version",
          "type": "boolean",
          "x-go-name": "VersionLabel",
          "example": true
        }
      },
      "x-go-package": "github.com/kiali/kiali/models"
    },
    "WorkloadOverviews": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/WorkloadListItem"
      },
      "x-go-package": "github.com/kiali/kiali/models"
    },
    "WorkloadReference": {
      "type": "object",
      "title": "WorkloadReference is the key value composed of a Name and Namespace.",
      "properties": {
        "name": {
          "type": "string",
          "x-go-name": "Name"
        },
        "namespace": {
          "type": "string",
          "x-go-name": "Namespace"
        }
      },
      "x-go-package": "github.com/kiali/kiali/models"
    },
    "WorkloadStatus": {
      "description": "WorkloadStatus gives\nnumber of desired replicas defined in the Spec of a controller\nnumber of current replicas that matches selector of a controller\nnumber of available replicas for a given workload\nIn healthy scenarios all variables should point same value.\nWhen something wrong happens the different values can indicate an unhealthy situation.\ni.e.\ndesired = 1, current = 10, available = 0 would means that a user scaled down a workload from 10 to 1\nbut in the operaton 10 pods showed problems, so no pod is available/ready but user will see 10 pods under a workload",
      "type": "object",
      "properties": {
        "availableReplicas": {
          "type": "integer",
          "format": "int32",
          "x-go-name": "AvailableReplicas"
        },
        "currentReplicas": {
          "type": "integer",
          "format": "int32",
          "x-go-name": "CurrentReplicas"
        },
        "desiredReplicas": {
          "type": "integer",
          "format": "int32",
          "x-go-name": "DesiredReplicas"
        },
        "name": {
          "type": "string",
          "x-go-name": "Name"
        },
        "syncedProxies": {
          "type": "integer",
          "format": "int32",
          "x-go-name": "SyncedProxies"
        }
      },
      "x-go-package": "github.com/kiali/kiali/models"
    },
    "externalServiceInfo": {
      "description": "This is used for returning a response of Kiali Status",
      "type": "object",
      "title": "Status response model",
      "required": [
        "name"
      ],
      "properties": {
        "name": {
          "description": "The name of the service",
          "type": "string",
          "x-go-name": "Name",
          "example": "Istio"
        },
        "url": {
          "description": "The service url",
          "type": "string",
          "x-go-name": "Url",
          "example": "jaeger-query-istio-system.127.0.0.1.nip.io"
        },
        "version": {
          "description": "The installed version of the service",
          "type": "string",
          "x-go-name": "Version",
          "example": "0.8.0"
        }
      },
      "x-go-name": "ExternalServiceInfo",
      "x-go-package": "github.com/kiali/kiali/status"
    },
    "namespace": {
      "description": "A Namespace provide a scope for names\nThis type is used to describe a set of objects.",
      "type": "object",
      "required": [
        "name"
      ],
      "properties": {
        "annotations": {
          "description": "Specific annotations used in Kiali",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "x-go-name": "Annotations"
        },
        "labels": {
          "description": "Labels for Namespace",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "x-go-name": "Labels"
        },
        "name": {
          "description": "The id of the namespace.",
          "type": "string",
          "x-go-name": "Name",
          "example": "istio-system"
        }
      },
      "x-go-name": "Namespace",
      "x-go-package": "github.com/kiali/kiali/models"
    }
  },
  "responses": {
    "appDetails": {
      "description": "Detailed information of an specific app",
      "schema": {
        "$ref": "#/definitions/App"
      }
    },
    "appHealthResponse": {
      "description": "appHealthResponse contains aggregated health from various sources, for a given app",
      "schema": {
        "$ref": "#/definitions/AppHealth"
      }
    },
    "appListResponse": {
      "description": "Listing all apps in the namespace",
      "schema": {
        "$ref": "#/definitions/AppList"
      }
    },
    "authenticationInfo": {
      "description": "Return the information necessary to handle login",
      "headers": {
        "AuthorizationEndpoint": {
          "type": "string"
        },
        "Strategy": {
          "type": "string"
        }
      }
    },
    "badRequestError": {
      "description": "BadRequestError: the client request is incorrect",
      "schema": {
        "type": "object",
        "properties": {
          "code": {
            "description": "HTTP status code",
            "type": "integer",
            "format": "int32",
            "default": 400,
            "x-go-name": "Code",
            "example": 400
          },
          "message": {
            "type": "string",
            "x-go-name": "Message"
          }
        }
      }
    },
    "certsInfoResponse": {
      "description": "Return a list of certificates information",
      "schema": {
        "type": "array",
        "items": {
          "$ref": "#/definitions/CertInfo"
        }
      }
    },
    "configDump": {
      "description": "Return a dump of the configuration of a given envoy proxy",
      "schema": {
        "$ref": "#/definitions/EnvoyProxyDump"
      }
    },
    "configDumpResource": {
      "description": "Return a dump of the configuration of a given envoy proxy",
      "schema": {
        "type": "object",
        "additionalProperties": {
          "type": "object"
        }
      }
    },
    "dashboardResponse": {
      "description": "Dashboard response model",
      "schema": {
        "$ref": "#/definitions/MonitoringDashboard"
      }
    },
    "errorTracesResponse": {
      "description": "Number of traces in error"
    },
    "grafanaInfoResponse": {
      "description": "Return all the descriptor data related to Grafana",
      "schema": {
        "$ref": "#/definitions/GrafanaInfo"
      }
    },
    "graphResponse": {
      "description": "HTTP status code 200 and cytoscapejs Config in data",
      "schema": {
        "$ref": "#/definitions/Config"
      }
    },
    "internalError": {
      "description": "A Internal is the error message that means something has gone wrong",
      "schema": {
        "type": "object",
        "properties": {
          "code": {
            "description": "HTTP status code",
            "type": "integer",
            "format": "int32",
            "default": 500,
            "x-go-name": "Code",
            "example": 500
          },
          "message": {
            "type": "string",
            "x-go-name": "Message"
          }
        }
      }
    },
    "istioConfigDetailsResponse": {
      "description": "IstioConfig details of an specific Istio Object",
      "schema": {
        "$ref": "#/definitions/IstioConfigDetails"
      }
    },
    "istioConfigList": {
      "description": "HTTP status code 200 and IstioConfigList model in data",
      "schema": {
        "$ref": "#/definitions/IstioConfigList"
      }
    },
    "istioConfigPermissions": {
      "description": "Return caller permissions per namespace and Istio Config type",
      "schema": {
        "$ref": "#/definitions/IstioConfigPermissions"
      }
    },
    "istioStatusResponse": {
      "description": "Return a list of Istio components along its status",
      "schema": {
        "$ref": "#/definitions/IstioComponentStatus"
      }
    },
    "jaegerInfoResponse": {
      "description": "Return all the descriptor data related to Jaeger",
      "schema": {
        "$ref": "#/definitions/JaegerInfo"
      }
    },
    "meshTlsResponse": {
      "description": "Return the mTLS status of the whole Mesh",
      "schema": {
        "$ref": "#/definitions/MTLSStatus"
      }
    },
    "metricsResponse": {
      "description": "Metrics response model",
      "schema": {
        "type": "object",
        "additionalProperties": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Metric"
          }
        }
      }
    },
    "metricsStatsResponse": {
      "description": "Response of the metrics stats query",
      "schema": {
        "$ref": "#/definitions/MetricsStats"
      }
    },
    "namespaceAppHealthResponse": {
      "description": "namespaceAppHealthResponse is a map of app name x health",
      "schema": {
        "$ref": "#/definitions/NamespaceAppHealth"
      }
    },
    "namespaceList": {
      "description": "List of Namespaces",
      "schema": {
        "type": "array",
        "items": {
          "$ref": "#/definitions/namespace"
        }
      }
    },
    "namespaceResponse": {
      "description": "namespaceResponse is a basic namespace",
      "schema": {
        "$ref": "#/definitions/namespace"
      }
    },
    "namespaceTlsResponse": {
      "description": "Return the mTLS status of a specific Namespace",
      "schema": {
        "$ref": "#/definitions/MTLSStatus"
      }
    },
    "namespaceValidationSummaryResponse": {
      "description": "Return the validation status of a specific Namespace",
      "schema": {
        "$ref": "#/definitions/IstioValidationSummary"
      }
    },
    "noContent": {
      "description": "NoContent: the response is empty",
      "schema": {
        "type": "object",
        "properties": {
          "code": {
            "description": "HTTP status code",
            "type": "integer",
            "format": "int32",
            "default": 204,
            "x-go-name": "Code",
            "example": 204
          },
          "message": {
            "type": "string",
            "x-go-name": "Message"
          }
        }
      }
    },
    "notAcceptableError": {
      "description": "A NotAcceptable is the error message that means request can't be accepted",
      "schema": {
        "type": "object",
        "properties": {
          "code": {
            "description": "HTTP status code",
            "type": "integer",
            "format": "int32",
            "default": 404,
            "x-go-name": "Code",
            "example": 404
          },
          "message": {
            "type": "string",
            "x-go-name": "Message"
          }
        }
      }
    },
    "notFoundError": {
      "description": "A NotFoundError is the error message that is generated when server could not find what was requested.",
      "schema": {
        "type": "object",
        "properties": {
          "code": {
            "description": "HTTP status code",
            "type": "integer",
            "format": "int32",
            "default": 404,
            "x-go-name": "Code",
            "example": 404
          },
          "message": {
            "type": "string",
            "x-go-name": "Message"
          }
        }
      }
    },
    "serviceDetailsResponse": {
      "description": "Listing all the information related to a workload",
      "schema": {
        "$ref": "#/definitions/ServiceDetails"
      }
    },
    "serviceHealthResponse": {
      "description": "serviceHealthResponse contains aggregated health from various sources, for a given service",
      "schema": {
        "$ref": "#/definitions/ServiceHealth"
      }
    },
    "serviceListResponse": {
      "description": "Listing all services in the namespace",
      "schema": {
        "$ref": "#/definitions/ServiceList"
      }
    },
    "serviceUnavailableError": {
      "description": "A Internal is the error message that means something has gone wrong",
      "schema": {
        "type": "object",
        "properties": {
          "code": {
            "description": "HTTP status code",
            "type": "integer",
            "format": "int32",
            "default": 503,
            "x-go-name": "Code",
            "example": 503
          },
          "message": {
            "type": "string",
            "x-go-name": "Message"
          }
        }
      }
    },
    "spansResponse": {
      "description": "Listing all the information related to a Span",
      "schema": {
        "type": "array",
        "items": {
          "$ref": "#/definitions/JaegerSpan"
        }
      }
    },
    "statusInfo": {
      "description": "HTTP status code 200 and statusInfo model in data",
      "schema": {
        "$ref": "#/definitions/StatusInfo"
      }
    },
    "tokenResponse": {
      "description": "HTTP status code 200 and tokenGenerated model in data",
      "schema": {
        "$ref": "#/definitions/TokenResponse"
      }
    },
    "traceDetailsResponse": {
      "description": "Listing all the information related to a Trace",
      "schema": {
        "type": "array",
        "items": {
          "$ref": "#/definitions/Trace"
        }
      }
    },
    "workloadDetails": {
      "description": "Listing all the information related to a workload",
      "schema": {
        "$ref": "#/definitions/Workload"
      }
    },
    "workloadHealthResponse": {
      "description": "workloadHealthResponse contains aggregated health from various sources, for a given workload",
      "schema": {
        "$ref": "#/definitions/WorkloadHealth"
      }
    },
    "workloadListResponse": {
      "description": "Listing all workloads in the namespace",
      "schema": {
        "$ref": "#/definitions/WorkloadList"
      }
    }
  }
}