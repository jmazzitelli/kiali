name: Integration Tests Backend External Controlplane

on:
  workflow_call:
    inputs:
      target_branch:
        required: true
        type: string
      build_branch:
        required: true
        type: string
      istio_version:
        required: false
        type: string
        default: ""

env:
  TARGET_BRANCH: ${{ inputs.target_branch }}
  BUILD_BRANCH: ${{ inputs.build_branch || inputs.target_branch }}

jobs:
  integration_tests_backend:
    name: Backend API integration tests
    runs-on: ubuntu-latest
    steps:
    - name: Check out code
      uses: actions/checkout@v5
      with:
        ref: ${{ inputs.build_branch }}

    - name: Install Helm
      uses: Azure/setup-helm@v4.2.0
      with:
        version: 'v3.18.4'

    - name: Set up Go
      uses: actions/setup-go@v5
      with:
        go-version-file: go.mod
        # The builtin cache feature ensures that installing golangci-lint
        # is consistently fast.
        cache: true
        cache-dependency-path: go.sum

    - name: Download go binary
      uses: actions/download-artifact@v5
      with:
        name: kiali
        path: ~/go/bin/

    - name: Ensure kiali binary is executable
      run: chmod +x ~/go/bin/kiali

    # Build the integration framework
    - name: Build integration framework
      working-directory: ./kiali-integration-framework
      run: make build

    # Create external controlplane test configuration
    - name: Create external controlplane test config
      working-directory: ./kiali-integration-framework
      run: |
        cat > external-controlplane-test-config.yaml << 'EOF'
        version: "1.0"
        clusters:
          primary:
            provider: kind
            name: kiali-controlplane
            version: "1.27.0"
            config:
              nodes: 1
          remotes:
            remote-cluster:
              provider: kind
              name: kiali-remote
              version: "1.27.0"
              config:
                nodes: 1
        federation:
          enabled: true
          trustDomain: cluster.local
          serviceMesh:
            type: istio
            version: "${{ inputs.istio_version || '1.20.0' }}"
        components:
          istio-primary:
            type: istio
            version: "${{ inputs.istio_version || '1.20.0' }}"
            enabled: true
            config:
              profile: default
          istio-remote:
            type: istio
            version: "${{ inputs.istio_version || '1.20.0' }}"
            enabled: true
            config:
              profile: remote
              externalControlPlane: true
          kiali-primary:
            type: kiali
            version: "1.73.0"
            enabled: true
            config:
              auth:
                strategy: "token"
          prometheus-primary:
            type: prometheus
            version: "2.45.0"
            enabled: true
        tests:
          backend-external-controlplane:
            type: go
            enabled: true
            config:
              go:
                package: "./tests/integration/..."
                verbose: true
                race: true
                timeout: "30m"
                env:
                  KIALI_URL: "http://localhost:20001"
                  PROMETHEUS_URL: "http://localhost:9090"
                  EXTERNAL_CONTROLPLANE: "true"
        global:
          logLevel: "info"
          timeout: 1800000000000
          verbose: true
        EOF

    # Run backend external controlplane integration tests using the new integration framework
    - name: Run backend integration tests
      working-directory: ./kiali-integration-framework
      run: |
        ./build/kiali-test init --config external-controlplane-test-config.yaml
        ./build/kiali-test up --config external-controlplane-test-config.yaml
        ./build/kiali-test run backend-external-controlplane --config external-controlplane-test-config.yaml

    - name: Get debug info when integration tests fail
      if: failure()
      run: |
        mkdir debug-output
        hack/ci-get-debug-info.sh --output-directory debug-output --kubectl-context kind-controlplane

    - name: Upload debug info artifact
      if: failure()
      uses: actions/upload-artifact@v4
      with:
        name: debug-info-${{ github.job }}
        path: debug-output
