name: Integration Tests Backend

on:
  workflow_call:
    inputs:
      target_branch:
        required: true
        type: string
      build_branch:
        required: true
        type: string
      istio_version:
        required: false
        type: string
        default: ""

env:
  TARGET_BRANCH: ${{ inputs.target_branch }}
  # BUILD_BRANCH is used by setup-kind-in-ci.sh to locate a matching helm-charts branch.
  # If build_branch is empty, fallback to target_branch
  BUILD_BRANCH: ${{ inputs.build_branch || inputs.target_branch }}

jobs:
  integration_tests_backend:
    name: Backend API integration tests
    runs-on: ubuntu-latest
    steps:
    - name: Check out code
      uses: actions/checkout@v5
      with:
        ref: ${{ inputs.build_branch }}

    - name: Install Helm
      uses: Azure/setup-helm@v4.2.0
      with:
        version: 'v3.18.4'

    - name: Set up Go
      uses: actions/setup-go@v5
      with:
        go-version-file: go.mod
        # The builtin cache feature ensures that installing golangci-lint
        # is consistently fast.
        cache: true
        cache-dependency-path: go.sum

    - name: Download go binary
      uses: actions/download-artifact@v5
      with:
        name: kiali
        path: ~/go/bin/

    - name: Ensure kiali binary is executable
      run: chmod +x ~/go/bin/kiali

    # Build the integration framework
    - name: Build integration framework
      working-directory: ./kiali-integration-framework
      run: make build

    # Create backend test configuration
    - name: Create backend test config
      working-directory: ./kiali-integration-framework
      run: |
        cat > backend-test-config.yaml << 'EOF'
        version: "1.0"
        cluster:
          provider: kind
          name: kiali-backend-test
          version: "1.27.0"
          config:
            nodes: 1
        components:
          istio:
            type: istio
            version: "${{ inputs.istio_version || '1.20.0' }}"
            enabled: true
            config:
              profile: default
          kiali:
            type: kiali
            version: "1.73.0"
            enabled: true
            config:
              auth:
                strategy: "token"
          prometheus:
            type: prometheus
            version: "2.45.0"
            enabled: true
        tests:
          backend-integration:
            type: go
            enabled: true
            config:
              go:
                package: "./tests/integration/..."
                verbose: true
                race: true
                timeout: "30m"
                env:
                  KIALI_URL: "http://localhost:20001"
                  PROMETHEUS_URL: "http://localhost:9090"
        global:
          logLevel: "info"
          timeout: 1800000000000
          verbose: true
        EOF

    # Run backend integration tests using the new integration framework
    - name: Run backend integration tests
      id: intTests
      working-directory: ./kiali-integration-framework
      run: |
        ./build/kiali-test init --config backend-test-config.yaml
        ./build/kiali-test up --config backend-test-config.yaml
        ./build/kiali-test run backend-integration --config backend-test-config.yaml

    - name: Run backend controller integration tests
      run: make $(if [ -n "${{ inputs.istio_version }}" ]; then echo "ISTIO_VERSION=${{ inputs.istio_version }}"; fi) test-integration-controller

    - name: Get debug info when integration tests fail
      if: ${{ failure() && steps.intTests.conclusion == 'failure' }}
      run: |
        mkdir debug-output
        hack/ci-get-debug-info.sh --output-directory debug-output

    - name: Upload debug info artifact
      if: ${{ failure() && steps.intTests.conclusion == 'failure' }}
      uses: actions/upload-artifact@v4
      with:
        name: debug-info-${{ github.job }}
        path: debug-output
